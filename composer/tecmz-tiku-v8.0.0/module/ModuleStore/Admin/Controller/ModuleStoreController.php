<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\ModuleStore\Admin\Controller; use Illuminate\Routing\Controller; use ModStart\Admin\Auth\AdminPermission; use ModStart\Admin\Layout\AdminConfigBuilder; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\CRUDUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\ReUtil; use ModStart\Form\Form; use ModStart\Module\ModuleManager; use ModStart\Repository\RepositoryUtil; use Module\ModuleStore\Util\ModuleStoreUtil; class ModuleStoreController extends Controller { public function index() { AdminPermission::permitCheck('ModuleStoreManage'); return view('module::ModuleStore.View.admin.moduleStore.index'); } public function all() { AdminPermission::permitCheck('ModuleStoreManage'); return Response::generateSuccessData(ModuleStoreUtil::all()); } private function moduleOperateCheck($FgRrl) { goto csEIV; fCnyM: $oMvxu = config('env.MS_MODULE_WHITELIST', ''); goto pMCXa; pMCXa: if (empty($oMvxu)) { return; } goto nRL3e; Wru_X: if (empty($oMvxu)) { return; } goto lEbLm; BLW10: $oMvxu = array_filter($oMvxu); goto Wru_X; BL9l8: foreach ($oMvxu as $REa1I) { if (ReUtil::isWildMatch($REa1I, $FgRrl)) { $T3Evk = true; break; } } goto X3miv; lEbLm: $T3Evk = false; goto BL9l8; nRL3e: $oMvxu = array_map(function ($NIxlc) { return trim($NIxlc); }, explode(',', $oMvxu)); goto BLW10; csEIV: BizException::throwsIf('当前环境禁止「模块管理」相关操作', config('env.MS_MODULE_STORE_DISABLE', false)); goto fCnyM; X3miv: BizException::throwsIf('只允许操作模块:' . join(',', $oMvxu), !$T3Evk); goto gB2e2; gB2e2: } private function doFinish($O066a) { return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'finish' => true)); } private function doNext($tioTU, $NH6tu, $O066a = array(), $GeXSC = array()) { goto bAKer; bAKer: $bz1sB = InputPackage::buildFromInput(); goto Ec1bs; VEfrE: return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { if (!starts_with($REa1I, '<')) { $REa1I = "<span class='ub-text-white'>{$REa1I}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'command' => $tioTU, 'step' => $NH6tu, 'data' => $GeXSC, 'finish' => false)); goto kEBfW; Ec1bs: $GeXSC = array_merge($bz1sB->getJsonAsInput('data')->all(), $GeXSC); goto VEfrE; kEBfW: } public function disable() { goto NQFQA; nxahx: AdminPermission::demoCheck(); goto QsWvG; myMts: $alp6f = $gSjJ9->getTrimString('version'); goto Ul7lC; NQFQA: AdminPermission::permitCheck('ModuleStoreManage'); goto nxahx; w8Thj: BizException::throwsIfEmpty('version为空', $alp6f); goto o1eeb; o1eeb: $this->moduleOperateCheck($FgRrl); goto WSBFN; Ul7lC: BizException::throwsIfEmpty('module为空', $FgRrl); goto w8Thj; aYl9u: $NH6tu = $bz1sB->getTrimString('step'); goto NSoYa; NSoYa: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto nY2LW; nY2LW: $FgRrl = $gSjJ9->getTrimString('module'); goto myMts; WSBFN: switch ($NH6tu) { default: goto SGKkq; zVis2: BizException::throwsIfResponseError($BEdDh); goto aX9n8; aX9n8: return $this->doFinish(array('<span class="ub-text-success">禁用成功，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto q0Bga; SGKkq: $BEdDh = ModuleManager::disable($FgRrl); goto zVis2; q0Bga: } goto JMZlg; QsWvG: $bz1sB = InputPackage::buildFromInput(); goto aYl9u; JMZlg: } public function enable() { goto D8uQS; awH_K: AdminPermission::demoCheck(); goto Im9TK; OihXx: $this->moduleOperateCheck($FgRrl); goto pbssG; gzV1R: BizException::throwsIfEmpty('version为空', $alp6f); goto OihXx; hf38C: $alp6f = $gSjJ9->getTrimString('version'); goto aGd2j; aGd2j: BizException::throwsIfEmpty('module为空', $FgRrl); goto gzV1R; Im9TK: $bz1sB = InputPackage::buildFromInput(); goto HF0wk; o8fMq: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto zksOX; HF0wk: $NH6tu = $bz1sB->getTrimString('step'); goto o8fMq; D8uQS: AdminPermission::permitCheck('ModuleStoreManage'); goto awH_K; zksOX: $FgRrl = $gSjJ9->getTrimString('module'); goto hf38C; pbssG: switch ($NH6tu) { default: goto tI5BC; nU3Bu: return $this->doFinish(array('<span class="ub-text-success">启动成功，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto je_GY; tI5BC: $BEdDh = ModuleManager::enable($FgRrl); goto fojOm; fojOm: BizException::throwsIfResponseError($BEdDh); goto nU3Bu; je_GY: } goto im3h1; im3h1: } public function uninstall() { goto j2tBj; vaolM: $bz1sB = InputPackage::buildFromInput(); goto cjQcM; LkObe: $this->moduleOperateCheck($FgRrl); goto l4tZv; j2tBj: AdminPermission::permitCheck('ModuleStoreManage'); goto zj3mf; sNPZ9: BizException::throwsIfEmpty('version为空', $alp6f); goto rq3J7; rq3J7: BizException::throwsIf('系统模块不能动态配置', ModuleManager::isSystemModule($FgRrl)); goto LkObe; FUL3W: $Wjb37 = $gSjJ9->getBoolean('isLocal'); goto IH1bI; IH1bI: BizException::throwsIfEmpty('module为空', $FgRrl); goto sNPZ9; ohf4U: $alp6f = $gSjJ9->getTrimString('version'); goto FUL3W; cjQcM: $NH6tu = $bz1sB->getTrimString('step'); goto JYmNd; l4tZv: if ($Wjb37) { switch ($NH6tu) { default: goto OZset; zb3Eo: BizException::throwsIfResponseError($BEdDh); goto bQyCo; bQyCo: return $this->doFinish(array('<span class="ub-text-success">卸载完成，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto LHGI6; OZset: $BEdDh = ModuleManager::uninstall($FgRrl); goto zb3Eo; LHGI6: } } else { switch ($NH6tu) { case 'removePackage': goto qiaZp; qiaZp: $BEdDh = ModuleStoreUtil::removeModule($FgRrl, $alp6f); goto el5vp; el5vp: BizException::throwsIfResponseError($BEdDh); goto l4iCT; l4iCT: return $this->doFinish(array('<span class="ub-text-success">卸载完成，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto mBAzk; mBAzk: default: goto GFYmt; GFYmt: $BEdDh = ModuleManager::uninstall($FgRrl); goto ovW3w; zxNln: return $this->doNext('uninstall', 'removePackage', array('<span class="ub-text-success">开始卸载 ' . $FgRrl . ' V' . $alp6f . '</span>')); goto hpF0F; ovW3w: BizException::throwsIfResponseError($BEdDh); goto zxNln; hpF0F: } } goto f25Hc; zj3mf: AdminPermission::demoCheck(); goto vaolM; ORerJ: $FgRrl = $gSjJ9->getTrimString('module'); goto ohf4U; JYmNd: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto ORerJ; f25Hc: } public function upgrade() { goto G1r6K; sb0NP: $FgRrl = $gSjJ9->getTrimString('module'); goto xm6ge; tNUls: switch ($NH6tu) { case 'installModule': goto KFmhi; Y0hg2: BizException::throwsIfResponseError($BEdDh); goto l0Ps9; of7OO: BizException::throwsIfResponseError($BEdDh); goto Fc8K8; l0Ps9: $BEdDh = ModuleManager::enable($FgRrl); goto of7OO; KFmhi: $BEdDh = ModuleManager::install($FgRrl, true); goto Y0hg2; Fc8K8: return $this->doFinish(array('<span class="ub-text-success">升级安装完成，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto MmVJU; MmVJU: case 'unpackPackage': goto ByzD5; lCwR7: BizException::throwsIfEmpty('package为空', $ZD7Jf); goto sUIhR; vhAN7: return $this->doNext('upgrade', 'installModule', array_merge(array('<span class="ub-text-success">模块解压完成</span>', '<span class="ub-text-white">开始安装...</span>'), $BEdDh['data'])); goto nxdMa; ByzD5: $ZD7Jf = $gSjJ9->getTrimString('package'); goto lCwR7; NHAOD: BizException::throwsIfEmpty('licenseKey为空', $AfbuP); goto xYID5; xYID5: try { $BEdDh = ModuleStoreUtil::unpackModule($FgRrl, $ZD7Jf, $AfbuP); } catch (\Exception $knlzD) { ModuleStoreUtil::cleanDownloadedPackage($ZD7Jf); throw $knlzD; } goto p0RFK; sUIhR: $AfbuP = $gSjJ9->getTrimString('licenseKey'); goto NHAOD; p0RFK: BizException::throwsIfResponseError($BEdDh); goto vhAN7; nxdMa: case 'downloadPackage': goto iUy22; iUy22: $BEdDh = ModuleStoreUtil::downloadPackage($HUlap, $FgRrl, $alp6f); goto WWNdG; WWNdG: BizException::throwsIfResponseError($BEdDh); goto PVEBh; PVEBh: return $this->doNext('upgrade', 'unpackPackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压安装包...</span>'), array('package' => $BEdDh['data']['package'], 'licenseKey' => $BEdDh['data']['licenseKey'])); goto Gdw4d; Gdw4d: case 'checkPackage': goto MbQD3; pQ87p: if ($BEdDh['data']['errorCount'] > 0) { return $this->doFinish(array_merge($O066a, array('<span class="ub-text-danger">预检失败，' . $BEdDh['data']['errorCount'] . '个依赖不满足要求</span>'))); } goto k8Cpr; jzR1_: foreach ($BEdDh['data']['requires'] as $CviJZ) { $O066a[] = '<span>&nbsp;&nbsp;</span>' . ($CviJZ['success'] ? '<span class="ub-text-success"><i class="iconfont icon-check"></i> 成功</span>' : '<span class="ub-text-danger"><i class="iconfont icon-warning"></i> 失败</span>') . " <span>{$CviJZ['name']}</span> " . ($CviJZ['resolve'] ? " <span>解决：{$CviJZ['resolve']}</span>" : ''); } goto pQ87p; WrECN: $O066a = array(); goto jzR1_; Qg_Vx: BizException::throwsIfResponseError($BEdDh); goto WrECN; b1J5k: return $this->doNext('upgrade', 'downloadPackage', array_merge(array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检成功，' . count($BEdDh['data']['requires']) . '个依赖满足要求，安装包大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>'), $O066a)); goto bYokE; k8Cpr: $O066a[] = '<span class="ub-text-white">开始下载安装包...</span>'; goto b1J5k; MbQD3: $BEdDh = ModuleStoreUtil::checkPackage($HUlap, $FgRrl, $alp6f); goto Qg_Vx; bYokE: default: return $this->doNext('upgrade', 'checkPackage', array('<span class="ub-text-success">开始升级到远程模块 ' . $FgRrl . ' V' . $alp6f . '</span>', '<span class="ub-text-white">开始模块安装预检...</span>')); } goto HdivH; eZC_6: $bz1sB = InputPackage::buildFromInput(); goto SoRDs; bEgwS: BizException::throwsIfEmpty('module为空', $FgRrl); goto VAG3n; bN8OX: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto sb0NP; uDpk4: BizException::throwsIfEmpty('请先登录ModStartCMS账号', $HUlap); goto bN8OX; smOXx: $NH6tu = $bz1sB->getTrimString('step'); goto uDpk4; ZCEkF: AdminPermission::demoCheck(); goto eZC_6; gE02e: $this->moduleOperateCheck($FgRrl); goto tNUls; G1r6K: AdminPermission::permitCheck('ModuleStoreManage'); goto ZCEkF; xm6ge: $alp6f = $gSjJ9->getTrimString('version'); goto bEgwS; VAG3n: BizException::throwsIfEmpty('version为空', $alp6f); goto gE02e; SoRDs: $HUlap = $bz1sB->getTrimString('token'); goto smOXx; HdivH: } public function install() { goto MRUUn; Vx7GY: BizException::throwsIfEmpty('version为空', $alp6f); goto jmoZp; wnM9u: $this->moduleOperateCheck($FgRrl); goto BHyyX; wqoHJ: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto NmJ39; BHyyX: if ($Wjb37) { switch ($NH6tu) { case 'installModule': goto lco01; lco01: $BEdDh = ModuleManager::install($FgRrl, true); goto G3qqD; CB2JQ: BizException::throwsIfResponseError($BEdDh); goto xbwL2; xbwL2: return $this->doFinish(array('<span class="ub-text-success">安装完成，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto Qvfe6; S2R8z: $BEdDh = ModuleManager::enable($FgRrl); goto CB2JQ; G3qqD: BizException::throwsIfResponseError($BEdDh); goto S2R8z; Qvfe6: default: return $this->doNext('install', 'installModule', array('<span class="ub-text-success">开始安装本地模块 ' . $FgRrl . ' V' . $alp6f . '</span>', '<span class="ub-text-white">开始安装..</span>')); } } else { switch ($NH6tu) { case 'installModule': goto x3nm5; pvgjU: $BEdDh = ModuleManager::enable($FgRrl); goto liqBC; AOsQy: return $this->doFinish(array('<span class="ub-text-success">安装完成，请 <a href="javascript:;" onclick="parent.location.reload()">刷新后台</a> 查看最新系统</span>')); goto T96MO; liqBC: BizException::throwsIfResponseError($BEdDh); goto AOsQy; x3nm5: $BEdDh = ModuleManager::install($FgRrl, true); goto Hv2PC; Hv2PC: if (Response::isError($BEdDh)) { ModuleManager::clean($FgRrl); BizException::throws($BEdDh['msg']); } goto pvgjU; T96MO: case 'unpackPackage': goto H8xfe; NXbBj: $AfbuP = $gSjJ9->getTrimString('licenseKey'); goto DbuRr; bzpCN: BizException::throwsIfEmpty('package为空', $ZD7Jf); goto NXbBj; FjiTE: return $this->doNext('install', 'installModule', array_merge(array('<span class="ub-text-success">模块解压完成</span>', '<span class="ub-text-white">开始安装...</span>'), $BEdDh['data'])); goto zSOmK; lFBu6: BizException::throwsIfResponseError($BEdDh); goto FjiTE; uHvjr: try { $BEdDh = ModuleStoreUtil::unpackModule($FgRrl, $ZD7Jf, $AfbuP); } catch (\Exception $knlzD) { ModuleStoreUtil::cleanDownloadedPackage($ZD7Jf); throw $knlzD; } goto lFBu6; H8xfe: $ZD7Jf = $gSjJ9->getTrimString('package'); goto bzpCN; DbuRr: BizException::throwsIfEmpty('licenseKey为空', $AfbuP); goto uHvjr; zSOmK: case 'downloadPackage': goto F1L9G; F1L9G: $BEdDh = ModuleStoreUtil::downloadPackage($HUlap, $FgRrl, $alp6f); goto I_2ZA; I_2ZA: BizException::throwsIfResponseError($BEdDh); goto BPS65; BPS65: return $this->doNext('install', 'unpackPackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压安装包...</span>'), array('package' => $BEdDh['data']['package'], 'licenseKey' => $BEdDh['data']['licenseKey'])); goto qQYO9; qQYO9: case 'checkPackage': goto pu3Kr; CbnOE: return $this->doNext('install', 'downloadPackage', array_merge(array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检成功，' . count($BEdDh['data']['requires']) . '个依赖满足要求，安装包大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>'), $O066a)); goto LjhIt; Sh03K: $O066a[] = '<span class="ub-text-white">开始下载安装包...</span>'; goto CbnOE; y8E21: if ($BEdDh['data']['errorCount'] > 0) { return $this->doFinish(array_merge($O066a, array('<span class="ub-text-danger">预检失败，' . $BEdDh['data']['errorCount'] . '个依赖不满足要求</span>'))); } goto Sh03K; i266G: foreach ($BEdDh['data']['requires'] as $CviJZ) { $O066a[] = '<span>&nbsp;&nbsp;</span>' . ($CviJZ['success'] ? '<span class="ub-text-success"><i class="iconfont icon-check"></i> 成功</span>' : '<span class="ub-text-danger"><i class="iconfont icon-warning"></i> 失败</span>') . " <span>{$CviJZ['name']}</span> " . ($CviJZ['resolve'] ? " <span>解决：{$CviJZ['resolve']}</span>" : ''); } goto y8E21; CtgYt: BizException::throwsIfResponseError($BEdDh); goto cmyET; cmyET: $O066a = array(); goto i266G; pu3Kr: $BEdDh = ModuleStoreUtil::checkPackage($HUlap, $FgRrl, $alp6f); goto CtgYt; LjhIt: break; goto S90Px; S90Px: default: return $this->doNext('install', 'checkPackage', array('<span class="ub-text-success">开始安装远程模块 ' . $FgRrl . ' V' . $alp6f . '</span>', '<span class="ub-text-white">开始模块安装预检...</span>')); } } goto JHx2t; GVvkv: $alp6f = $gSjJ9->getTrimString('version'); goto pKJMC; qDf2B: BizException::throwsIfEmpty('module为空', $FgRrl); goto Vx7GY; jmoZp: BizException::throwsIf('系统模块不能动态配置', ModuleManager::isSystemModule($FgRrl)); goto wnM9u; vozQw: AdminPermission::demoCheck(); goto DVX_Y; ZPOUS: BizException::throwsIfEmpty('请先登录ModStartCMS账号', $HUlap); goto wqoHJ; pKJMC: $Wjb37 = $gSjJ9->getBoolean('isLocal'); goto qDf2B; I1NKD: $NH6tu = $bz1sB->getTrimString('step'); goto ZPOUS; DVX_Y: $bz1sB = InputPackage::buildFromInput(); goto cvl1R; MRUUn: AdminPermission::permitCheck('ModuleStoreManage'); goto vozQw; NmJ39: $FgRrl = $gSjJ9->getTrimString('module'); goto GVvkv; cvl1R: $HUlap = $bz1sB->getTrimString('token'); goto I1NKD; JHx2t: } public function config(AdminConfigBuilder $cv5kq, $FgRrl) { goto dxiGC; WTMXP: $cv5kq->pageTitle(htmlspecialchars($mTw11['title']) . ' ' . L('Module Config')); goto o8sgw; ghXcg: return $cv5kq->perform(RepositoryUtil::itemFromArray($y2Xes['config']), function (Form $Yfg4L) use($FgRrl, $y2Xes) { AdminPermission::demoCheck(); if ($y2Xes['isSystem']) { ModuleManager::saveSystemOverwriteModuleConfig($FgRrl, $Yfg4L->dataForming()); } else { ModuleManager::saveUserInstalledModuleConfig($FgRrl, $Yfg4L->dataForming()); } return Response::generate(0, '保存成功', null, CRUDUtil::jsDialogClose()); }); goto ixV4X; jDqaQ: foreach ($mTw11['config'] as $Mlv3V => $wZDcW) { goto iNXD6; TlciA: foreach ($wZDcW as $ac7Fu) { $AfXAM = array_shift($ac7Fu); if (null === $QGYmu) { array_unshift($ac7Fu, $Mlv3V); $QGYmu = call_user_func(array($cv5kq, $AfXAM), ...$ac7Fu); } else { call_user_func(array($QGYmu, $AfXAM), ...$ac7Fu); } } goto RGR0F; iNXD6: $QGYmu = null; goto R7y3o; R7y3o: if (!isset($y2Xes['config'][$Mlv3V])) { $y2Xes['config'][$Mlv3V] = null; } goto TlciA; RGR0F: } goto ghXcg; uDRbj: $cv5kq->useDialog(); goto WTMXP; o8sgw: $y2Xes = ModuleManager::getInstalledModuleInfo($FgRrl); goto Xheop; Xheop: BizException::throwsIfEmpty('Module config error', $mTw11['config']); goto jDqaQ; dxiGC: AdminPermission::permitCheck('ModuleStoreManage'); goto xpOBn; xpOBn: $mTw11 = ModuleManager::getModuleBasic($FgRrl); goto uDRbj; ixV4X: } }