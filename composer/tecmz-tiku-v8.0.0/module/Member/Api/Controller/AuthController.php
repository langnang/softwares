<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\CurlUtil; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserLoginedEvent; use Module\Member\Events\MemberUserPasswordResetedEvent; use Module\Member\Events\MemberUserRegisteredEvent; use Module\Member\Oauth\AbstractOauth; use Module\Member\Provider\RegisterProcessor\AbstractMemberRegisterProcessorProvider; use Module\Member\Provider\RegisterProcessor\MemberRegisterProcessorProvider; use Module\Member\Util\MemberUtil; use Module\Member\Util\SecurityUtil; use Module\Vendor\Email\MailSendJob; use Module\Vendor\Session\SessionUtil; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class AuthController extends ModuleBaseController { public function checkRedirectSafety($UYUrz) { goto X9MJR; VZo72: if ($kkerk['host'] == Request::domain()) { return; } goto N1sm_; VspIE: $QETMf = explode('
', $QETMf); goto iM095; N1sm_: $QETMf = modstart_config('Member_LoginRedirectWhiteList', ''); goto VspIE; f6qri: foreach ($QETMf as $REa1I) { if ($kkerk['host'] == $REa1I) { return; } } goto H8sOO; iM095: $QETMf = array_filter($QETMf); goto f6qri; aJZLJ: if (empty($kkerk['host'])) { return; } goto VZo72; X9MJR: if (!modstart_config('Member_LoginRedirectCheckEnable', false)) { return; } goto UDCd8; H8sOO: BizException::throws('登录跳转路径异常'); goto JtHEl; UDCd8: $kkerk = parse_url($UYUrz); goto aJZLJ; JtHEl: } public function oauthTryLogin($Mm7Ly = null) { goto Pnd3m; Rf8qy: if (empty($Mm7Ly)) { $bz1sB = InputPackage::buildFromInput(); $Mm7Ly = $bz1sB->getTrimString('type'); } goto i1ZNb; HW4xC: BizException::throwsIfResponseError($BEdDh); goto mY7Ck; vtLhW: $wyN7g = MemberOauth::getOrFail($Mm7Ly); goto V8hzk; V8hzk: $BEdDh = $wyN7g->processTryLogin(array('userInfo' => $ZOoxE)); goto HW4xC; hwfbF: if (empty($ZOoxE)) { return Response::generate(-1, '用户授权数据为空'); } goto Rf8qy; mY7Ck: if ($BEdDh['data']['memberUserId'] > 0) { goto A7ItT; RV7t1: return Response::generateSuccessData(array('memberUserId' => $BEdDh['data']['memberUserId'])); goto ffAlI; h3Cm3: Session::forget('oauthUserInfo'); goto RV7t1; A7ItT: Session::put('memberUserId', $BEdDh['data']['memberUserId']); goto h3Cm3; ffAlI: } goto g6rPD; i1ZNb: BizException::throwsIfEmpty('授权类型为空', $Mm7Ly); goto vtLhW; Pnd3m: $ZOoxE = Session::get('oauthUserInfo', array()); goto hwfbF; g6rPD: return Response::generate(0, null, array('memberUserId' => 0)); goto Gr1mS; Gr1mS: } public function oauthBind($Mm7Ly = null) { goto GhnK7; zE_9N: $cyfSx = $bz1sB->getTrimString('phoneVerify'); goto QToYQ; GM35p: $Mm7Ly = $bz1sB->getTrimString('type', $Mm7Ly); goto lDrge; JORi0: $MqkYF = $BEdDh['data']['id']; goto jx4C0; bLfzT: $BEdDh = $wyN7g->processBindToUser(array('memberUserId' => $MqkYF, 'userInfo' => $ZOoxE)); goto vh4xe; Y1YC3: $Ji2B5 = $bz1sB->getTrimString('emailVerify'); goto HoZV2; jx4C0: $tcTgP = array(); goto Ib0pA; BTU5J: if (Str::contains($eM5tA, '@')) { return Response::generate(-1, '用户名不能包含特殊字符'); } goto wGkNu; SoYOj: if ($Xghzc > 0) { goto pgu2c; fwowp: Session::forget('oauthUserInfo'); goto lgQzc; pgu2c: $BEdDh = $wyN7g->processBindToUser(array('memberUserId' => $Xghzc, 'userInfo' => $ZOoxE)); goto ePU6x; lgQzc: return Response::generate(0, null, null, $UYUrz); goto yWXf0; ePU6x: BizException::throwsIfResponseError($BEdDh); goto fwowp; yWXf0: } goto R9s_S; g6IBX: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto JORi0; kzas7: if (!empty($ZOoxE['avatar'])) { goto vAGN5; T0IUm: $jPxQy = CurlUtil::getRaw($ZOoxE['avatar']); goto AxX0m; AxX0m: if (!empty($jPxQy)) { if (empty($Bbc8G)) { $Bbc8G = 'jpg'; } MemberUtil::setAvatar($MqkYF, $jPxQy, $Bbc8G); } goto rsl2I; vAGN5: $Bbc8G = FileUtil::extension($ZOoxE['avatar']); goto T0IUm; rsl2I: } goto r3IfK; s8MHD: if (!SessionUtil::atomicConsume('oauthBindCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto rnTFr; lDrge: $ZOoxE = Session::get('oauthUserInfo', array()); goto MAlC0; R9s_S: $BEdDh = $wyN7g->processTryLogin(array('userInfo' => $ZOoxE)); goto pBJQ6; WgvHB: $UYUrz = $bz1sB->getTrimString('redirect', modstart_web_url('member')); goto GM35p; MAlC0: if (empty($ZOoxE)) { return Response::generate(-1, '用户授权数据为空'); } goto GIh07; v9qJG: if (!Session::get('oauthBindCaptchaPass', false)) { if (!CaptchaFacade::check($Tzora)) { SessionUtil::atomicProduce('oauthBindCaptchaPassCount', 1); return Response::generate(-1, '请重新进行安全验证'); } } goto s8MHD; HEptQ: $eM5tA = $bz1sB->getTrimString('username'); goto BTU5J; yW7Hj: if (modstart_config()->getWithEnv('registerDisable', false) && !modstart_config()->getWithEnv('registerOauthEnable', false)) { return Response::generate(-1, '用户注册已禁用'); } goto HEptQ; bcMmm: $deRjP = $bz1sB->getPhone('phone'); goto zE_9N; wG7YS: $tcTgP['registerIp'] = Request::ip(); goto AqWvs; wGkNu: if (preg_match('/^\\d{11}$/', $eM5tA)) { return Response::generate(-1, '用户名不能为纯数字'); } goto bcMmm; Pz4Ah: Session::forget('oauthUserInfo'); goto ZYXhu; pBJQ6: BizException::throwsIfResponseError($BEdDh); goto tF97I; vh4xe: BizException::throwsIfResponseError($BEdDh); goto ilQAf; m5wcT: $Xghzc = Session::get('memberUserId', 0); goto SoYOj; Pphhg: if (modstart_config('Member_OauthBindEmailEnable')) { $tcTgP['emailVerified'] = true; } goto wG7YS; ilQAf: EventUtil::fire(new MemberUserRegisteredEvent($MqkYF)); goto kzas7; GIh07: $wyN7g = MemberOauth::getOrFail($Mm7Ly); goto m5wcT; KaNpg: $BEdDh = MemberUtil::register($eM5tA, $deRjP, $ZYL8t, null, true); goto g6IBX; lu84W: if (modstart_config('Member_OauthBindEmailEnable')) { goto aOhnG; EmrSb: if ($Ji2B5 != Session::get('oauthBindEmailVerify')) { return Response::generate(-1, '邮箱验证码不正确.'); } goto uLknn; aOhnG: if (empty($ZYL8t)) { return Response::generate(-1, '请输入邮箱'); } goto EmrSb; uLknn: if (Session::get('oauthBindEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '邮箱验证码已过期'); } goto Evxvn; Evxvn: if ($ZYL8t != Session::get('oauthBindEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto MT5mk; MT5mk: } goto KaNpg; HoZV2: $Tzora = $bz1sB->getTrimString('captcha'); goto v9qJG; r3IfK: Session::put('memberUserId', $MqkYF); goto Pz4Ah; GhnK7: $bz1sB = InputPackage::buildFromInput(); goto WgvHB; QToYQ: $ZYL8t = $bz1sB->getEmail('email'); goto Y1YC3; Ib0pA: if (modstart_config('Member_OauthBindPhoneEnable')) { $tcTgP['phoneVerified'] = true; } goto Pphhg; AqWvs: if (!empty($tcTgP)) { MemberUtil::update($MqkYF, $tcTgP); } goto bLfzT; rnTFr: if (modstart_config('Member_OauthBindPhoneEnable')) { goto G_8xg; G_8xg: if (empty($deRjP)) { return Response::generate(-1, '请输入手机'); } goto cWS5X; FNIHm: if (Session::get('oauthBindPhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '手机验证码已过期'); } goto NH3AU; NH3AU: if ($deRjP != Session::get('oauthBindPhone')) { return Response::generate(-1, '两次手机不一致'); } goto uVkZR; cWS5X: if ($cyfSx != Session::get('oauthBindPhoneVerify')) { return Response::generate(-1, '手机验证码不正确.'); } goto FNIHm; uVkZR: } goto lu84W; tF97I: if ($BEdDh['data']['memberUserId'] > 0) { goto ubv38; P8SZg: return Response::generateSuccessData(array('memberUserId' => $BEdDh['data']['memberUserId'])); goto Xv_1C; ubv38: Session::put('memberUserId', $BEdDh['data']['memberUserId']); goto X7aKB; X7aKB: Session::forget('oauthUserInfo'); goto P8SZg; Xv_1C: } goto yW7Hj; ZYXhu: return Response::generate(0, null); goto bF1aZ; bF1aZ: } public function oauthCallback($Mm7Ly = null, $YHayk = null) { goto Az4Jr; n5WMO: $BEdDh = $wyN7g->processLogin(array_merge($oG0tD, array('code' => $DinvI, 'callback' => $YHayk))); goto eC_6n; aioBp: if (0 != $BEdDh['code']) { return $BEdDh; } goto qUJ0o; gUK68: if (empty($DinvI)) { return Response::generate(-1, '登录失败(code为空)', null, '/'); } goto GVrcW; GZI12: if ($Mi0Iq) { Session::put('oauthViewOpenId_' . $Mm7Ly, $qehPa['openid']); return Response::generateSuccess(); } goto vKjdH; vKjdH: Session::put('oauthUserInfo', $qehPa); goto jN53Q; p3BQD: $Mi0Iq = $bz1sB->getBoolean('view', false); goto GZI12; qUJ0o: $qehPa = $BEdDh['data']['userInfo']; goto p3BQD; JNA_m: $oG0tD = Session::get('oauthLoginParam', array()); goto eOzTu; GVrcW: $wyN7g = MemberOauth::getOrFail($Mm7Ly); goto JNA_m; eOzTu: Session::forget('oauthLoginParam'); goto n5WMO; CeDzB: if (empty($DinvI)) { $DinvI = $bz1sB->getTrimString('auth_code'); } goto gUK68; eC_6n: if (!isset($BEdDh['code'])) { return Response::generate(-1, '登录失败(返回结果为空)'); } goto aioBp; lk29F: $DinvI = $bz1sB->getTrimString('code'); goto CeDzB; jN53Q: return Response::generate(0, 'ok', array('user' => $qehPa)); goto jzT1u; O2vvi: if (empty($Mm7Ly)) { $Mm7Ly = $bz1sB->getTrimString('type'); } goto WYkJl; WYkJl: if (empty($YHayk)) { $YHayk = $bz1sB->getTrimString('callback', null); } goto lk29F; Az4Jr: $bz1sB = InputPackage::buildFromInput(); goto O2vvi; jzT1u: } public function oauthLogin($Mm7Ly = null, $YHayk = null) { goto qDY99; gAxuM: if (empty($Mm7Ly)) { $Mm7Ly = $bz1sB->getTrimString('type'); } goto GdhVb; C2cC0: $BEdDh = $wyN7g->processRedirect($oG0tD); goto hpWyy; qDY99: if ($loXJu = modstart_config()->getWithEnv('oauthDisableText')) { return Response::generateError($loXJu); } goto xeWkR; iV2vf: $oG0tD = array('callback' => $YHayk, 'silence' => $LIH36); goto Uv4Go; hpWyy: BizException::throwsIfResponseError($BEdDh); goto emMn_; zsqaS: $LIH36 = $bz1sB->getBoolean('silence', false); goto hF__d; Uv4Go: Session::put('oauthLoginParam', $oG0tD); goto C2cC0; hF__d: $wyN7g = MemberOauth::getOrFail($Mm7Ly); goto iV2vf; xeWkR: $bz1sB = InputPackage::buildFromInput(); goto gAxuM; emMn_: return Response::generate(0, 'ok', array('redirect' => $BEdDh['data']['redirect'])); goto uIrU6; GdhVb: if (empty($YHayk)) { $YHayk = $bz1sB->getTrimString('callback', 'NO_CALLBACK'); } goto zsqaS; uIrU6: } public function ssoClientLogoutPrepare() { goto vbQei; eNzVk: $UYUrz = $DXnEP . '_logout' . '?' . http_build_query(array('redirect' => $Hqq0P . '/sso/client_logout')); goto u0n15; Eymda: if (empty($DXnEP)) { return Response::generate(-1, '请配置 同步登录服务端地址'); } goto eNzVk; vbQei: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto r2UKF; iM5Eq: $DXnEP = modstart_config('ssoClientServer', ''); goto Eymda; r2UKF: $bz1sB = InputPackage::buildFromInput(); goto y5aso; y5aso: $Hqq0P = $bz1sB->getTrimString('domainUrl'); goto iM5Eq; u0n15: return Response::generate(0, 'ok', array('redirect' => $UYUrz)); goto BW0ND; BW0ND: } public function ssoClientLogout() { goto UMLgG; UMLgG: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto ltSsl; u9pUF: return Response::generate(0, 'ok'); goto TlOdH; ltSsl: Session::forget('memberUserId'); goto u9pUF; TlOdH: } public function ssoServerLogout() { goto an37b; m1avy: Session::forget('memberUserId'); goto S5VGo; an37b: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto m1avy; S5VGo: return Response::generate(0, 'ok'); goto CpqMq; CpqMq: } public function ssoServerSuccess() { goto mSqv9; qO09z: if (empty($gVp8U)) { return Response::generate(-1, '请设置 同步登录服务端通讯秘钥'); } goto UpMxJ; Wcqyl: $pxhEe = $Hqq0P . '/sso/server'; goto Dswc6; mSqv9: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto A5Bim; GXRXE: $w45m7 = MemberUtil::get($MqkYF); goto FbPOf; A5Bim: $MqkYF = Session::get('memberUserId', 0); goto UVF2S; FbPOf: $gVp8U = modstart_config('ssoServerSecret'); goto qO09z; lRdIU: $d9HG3 = explode('
', modstart_config('ssoServerClientList', '')); goto hmmzD; jKDZc: $QkJ1i = $bz1sB->getTrimString('client'); goto OuSDk; OuSDk: $Hqq0P = $bz1sB->getTrimString('domainUrl'); goto UHGH2; UpMxJ: $bz1sB = InputPackage::buildFromInput(); goto jKDZc; W6T73: $eM5tA = $w45m7['username']; goto evZ0_; evZ0_: $GtgYE = md5(md5($gVp8U) . md5($X88As . '') . md5($pxhEe) . md5($eM5tA)); goto w2f_O; w2f_O: $UYUrz = $QkJ1i . '?server=' . urlencode($pxhEe) . '&timestamp=' . $X88As . '&username=' . urlencode(base64_encode($eM5tA)) . '&sign=' . $GtgYE; goto lw6gN; hmmzD: $MtYij = false; goto nivrl; nivrl: foreach ($d9HG3 as $REa1I) { if (trim($REa1I) == $QkJ1i) { $MtYij = true; } } goto CXMVJ; UHGH2: if (empty($Hqq0P) || empty($QkJ1i)) { return Response::generate(-1, '数据错误'); } goto lRdIU; lw6gN: return Response::generate(0, null, array('redirect' => $UYUrz)); goto qw454; UVF2S: if (!$MqkYF) { return Response::generate(-1, '未登录'); } goto GXRXE; CXMVJ: if (!$MtYij) { return Response::generate(-1, '数据错误(2)'); } goto Wcqyl; Dswc6: $X88As = time(); goto W6T73; qw454: } public function ssoServer() { goto figeG; UnZ92: $d9HG3 = explode('
', modstart_config('ssoServerClientList', '')); goto KgV5y; bUDgw: if (empty($X88As)) { return Response::generate(-1, 'timestamp 为空'); } goto x6pKS; figeG: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto np1aK; np1aK: $bz1sB = InputPackage::buildFromInput(); goto wW1rI; eNDt7: $X88As = $bz1sB->getInteger('timestamp'); goto maLTs; cFE0G: if (abs(time() - $X88As) > 3600) { return Response::generate(-1, 'timestamp 错误'); } goto UnZ92; XORhX: $ExXu1 = modstart_config('ssoServerSecret'); goto giaHt; PDLpt: if (intval(Session::get('memberUserId', 0)) > 0) { $JEAEM = true; } goto HstEl; x6pKS: if (empty($GtgYE)) { return Response::generate(-1, 'sign 为空'); } goto XORhX; Xk3Ry: $ojKzM = md5(md5($ExXu1) . md5($X88As . '') . md5($QkJ1i)); goto ECd1b; giaHt: if (empty($ExXu1)) { return Response::generate(-1, '请设置 同步登录服务端通讯秘钥'); } goto Xk3Ry; KgV5y: $MtYij = false; goto yfj0T; maLTs: $GtgYE = $bz1sB->getTrimString('sign'); goto wqJQd; wqJQd: if (empty($QkJ1i)) { return Response::generate(-1, 'client 为空'); } goto bUDgw; RawuC: $JEAEM = false; goto PDLpt; wW1rI: $QkJ1i = $bz1sB->getTrimString('client'); goto eNDt7; HstEl: return Response::generate(0, 'ok', array('isLogin' => $JEAEM)); goto FI8EN; VRgAo: if (!$MtYij) { return Response::generate(-1, '请在 同步登陆服务端增加客户端地址 ' . $QkJ1i); } goto RawuC; ECd1b: if ($GtgYE != $ojKzM) { return Response::generate(-1, 'sign 错误'); } goto cFE0G; yfj0T: foreach ($d9HG3 as $REa1I) { if (trim($REa1I) == $QkJ1i) { $MtYij = true; } } goto VRgAo; FI8EN: } public function ssoClient() { goto XDiM3; vlPeo: $bz1sB = InputPackage::buildFromInput(); goto qEF1n; kleCm: if ($pxhEe != $DXnEP) { return Response::generate(-1, '同步登录 服务端地址不是配置的' . $DXnEP); } goto nBUbm; XDiM3: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto DOzPF; HiBzN: $GUOOM = modstart_config('ssoClientSecret'); goto Cluhl; eJvC3: Session::put('memberUserId', $w45m7['id']); goto GJZ9U; JQ7Y6: if (abs(time() - $X88As) > 3600) { return Response::generate(-1, 'timestamp错误'); } goto kleCm; YEgbK: if (empty($GtgYE)) { return Response::generate(-1, 'sign为空'); } goto TBEJw; QWl8K: if (empty($DXnEP)) { return Response::generate(-1, '请配置 同步登录服务端地址'); } goto HiBzN; TAOzB: if (empty($w45m7)) { goto nANYQ; LUzUz: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto PsLJz; PsLJz: $w45m7 = MemberUtil::get($BEdDh['data']['id']); goto XVa9m; nANYQ: $BEdDh = MemberUtil::register($eM5tA, null, null, null, true); goto LUzUz; XVa9m: } goto eJvC3; hXut9: if ($GtgYE != $ojKzM) { return Response::generate(-1, 'sign错误'); } goto JQ7Y6; GJZ9U: return Response::generate(0, 'ok'); goto dUJdq; ceKxm: $X88As = $bz1sB->getInteger('timestamp'); goto PVGaK; DOzPF: $DXnEP = modstart_config('ssoClientServer', ''); goto QWl8K; TBEJw: $ojKzM = md5(md5($GUOOM) . md5($X88As . '') . md5($pxhEe) . md5($eM5tA)); goto hXut9; PVGaK: $GtgYE = $bz1sB->getTrimString('sign'); goto lz7xX; nhPe3: if (empty($eM5tA)) { return Response::generate(-1, '同步登录返回的用户名为空'); } goto euTfB; euTfB: if (empty($X88As)) { return Response::generate(-1, 'timestamp为空'); } goto YEgbK; lz7xX: $eM5tA = @base64_decode($bz1sB->getTrimString('username')); goto nhPe3; Cluhl: if (empty($GUOOM)) { return Response::generate(-1, '请设置 同步登录客户端通讯秘钥'); } goto vlPeo; nBUbm: $w45m7 = MemberUtil::getByUsername($eM5tA); goto TAOzB; qEF1n: $pxhEe = $bz1sB->getTrimString('server'); goto ceKxm; dUJdq: } public function ssoClientPrepare() { goto qmak5; JUnmx: $DXnEP = modstart_config('ssoClientServer'); goto tKEWz; ktFgs: if (!Str::endsWith($QkJ1i, '/sso/client')) { return Response::generate(-1, 'client参数错误'); } goto ox5lZ; vWm5f: return Response::generate(0, 'ok', array('redirect' => $UYUrz)); goto ghmCw; ox5lZ: $X88As = time(); goto qYxDP; tKEWz: $GUOOM = modstart_config('ssoClientSecret'); goto ZLzKA; ZLzKA: $bz1sB = InputPackage::buildFromInput(); goto NIdzA; qmak5: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, 'SSO未开启'); } goto JUnmx; qYxDP: $GtgYE = md5(md5($GUOOM) . md5($X88As . '') . md5($QkJ1i)); goto VWeGi; NIdzA: $QkJ1i = $bz1sB->getTrimString('client', '/'); goto ktFgs; VWeGi: $UYUrz = $DXnEP . '?client=' . urlencode($QkJ1i) . '&timestamp=' . $X88As . '&sign=' . $GtgYE; goto vWm5f; ghmCw: } public function logout() { Session::forget('memberUserId'); return Response::generateSuccess(); } public function login() { goto l7Qg5; xhaN0: return Response::generateSuccess(); goto qyxsO; P2lF3: if (empty($N7mFY)) { return Response::generate(-1, '请输入密码'); } goto W0O0y; KWs9A: if (!$w45m7) { $BEdDh = MemberUtil::login(null, $eM5tA, null, $N7mFY); if (0 == $BEdDh['code']) { $w45m7 = $BEdDh['data']; } } goto dH6u9; Htreb: if (!$w45m7) { $BEdDh = MemberUtil::login($eM5tA, null, null, $N7mFY); if (0 == $BEdDh['code']) { $w45m7 = $BEdDh['data']; } } goto KWs9A; Z4cPy: if (!$w45m7) { $I4stO = Session::pull('memberUserLoginFailedTip', null); return Response::generate(ResponseCodes::CAPTCHA_ERROR, '登录失败:用户或密码错误' . ($I4stO ? '，' . $I4stO : '')); } goto IOIcG; croM7: $dl91b = null; goto Htreb; IOIcG: Session::put('memberUserId', $w45m7['id']); goto sZFJ9; ohE4M: if (empty($eM5tA)) { return Response::generate(-1, '请输入用户'); } goto P2lF3; dH6u9: if (!$w45m7) { $BEdDh = MemberUtil::login(null, null, $eM5tA, $N7mFY); if (0 == $BEdDh['code']) { $w45m7 = $BEdDh['data']; } } goto Z4cPy; W0O0y: if (modstart_config('loginCaptchaEnable', false)) { $cNGnY = SecurityUtil::loginCaptchaProvider(); if ($cNGnY) { $BEdDh = $cNGnY->validate(); if (Response::isError($BEdDh)) { return Response::generate(-1, $BEdDh['msg']); } } else { if (!CaptchaFacade::check($bz1sB->getTrimString('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '登录失败:图片验证码错误', null, '[js]$(\'[data-captcha]\').click();'); } } } goto iMher; C6i2y: $N7mFY = $bz1sB->getTrimString('password'); goto ohE4M; sZFJ9: EventUtil::fire(new MemberUserLoginedEvent($w45m7['id'])); goto xhaN0; brwIC: $eM5tA = $bz1sB->getTrimString('username'); goto C6i2y; l7Qg5: $bz1sB = InputPackage::buildFromInput(); goto brwIC; iMher: $w45m7 = null; goto croM7; qyxsO: } public function loginCaptchaRaw() { return CaptchaFacade::create('default'); } public function loginPhoneCaptchaRaw() { return CaptchaFacade::create('default'); } public function loginPhone() { goto lbkzk; sNm2f: if (Session::get('loginPhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '手机验证码已过期'); } goto uOxWx; GEUpD: $SKQob = $bz1sB->getTrimString('verify'); goto lOkAY; dMOnz: $bz1sB = InputPackage::buildFromInput(); goto aQNnp; DFbwd: if (empty($w45m7) && modstart_config('Member_LoginPhoneAutoRegister', false)) { goto OVK3L; ikPJH: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $qhOVL->postProcess($MqkYF); } goto jN6H2; jN6H2: $w45m7 = MemberUtil::get($MqkYF); goto roAQk; wJWcd: MemberUtil::autoSetUsernameNickname($MqkYF, modstart_config('Member_LoginPhoneNameSuggest', '用户')); goto ujfVu; GyDPG: $tcTgP['registerIp'] = Request::ip(); goto ck_L0; dYTFM: $tcTgP['phoneVerified'] = true; goto GyDPG; OVK3L: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $BEdDh = $qhOVL->preCheck(); if (Response::isError($BEdDh)) { return $BEdDh; } } goto jxDTW; jxDTW: $BEdDh = MemberUtil::register(null, $deRjP, null, null, true); goto l269H; l269H: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto vBm6k; vBm6k: $MqkYF = $BEdDh['data']['id']; goto wJWcd; cCekp: Session::forget('registerCaptchaPass'); goto ikPJH; ujfVu: $tcTgP = array(); goto dYTFM; mefZ3: EventUtil::fire(new MemberUserRegisteredEvent($MqkYF)); goto cCekp; ck_L0: if (!empty($tcTgP)) { MemberUtil::update($MqkYF, $tcTgP); } goto mefZ3; roAQk: } goto YQybF; uOxWx: if ($deRjP != Session::get('loginPhone')) { return Response::generate(-1, '两次手机不一致'); } goto S5_75; bM1JH: Session::forget('loginPhoneVerify'); goto AORWd; WfIEb: Session::put('memberUserId', $w45m7['id']); goto kbxIN; S5_75: $w45m7 = MemberUtil::getByPhone($deRjP); goto DFbwd; kbxIN: EventUtil::fire(new MemberUserLoginedEvent($w45m7)); goto lVxe6; uRr9M: if (empty($SKQob)) { return Response::generate(-1, '验证码不能为空'); } goto OfNXu; lVxe6: return Response::generate(0, null); goto Wj0l8; OfNXu: if ($SKQob != Session::get('loginPhoneVerify')) { return Response::generate(-1, '手机验证码不正确'); } goto sNm2f; aQNnp: $deRjP = $bz1sB->getPhone('phone'); goto GEUpD; qggLU: Session::forget('loginPhone'); goto WfIEb; YQybF: if (empty($w45m7)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto bM1JH; lbkzk: if (!modstart_config('Member_LoginPhoneEnable', false)) { return Response::generate(-1, '手机快捷登录未开启'); } goto dMOnz; lOkAY: if (empty($deRjP)) { return Response::generate(-1, '手机为空或不正确'); } goto uRr9M; AORWd: Session::forget('loginPhoneVerifyTime'); goto qggLU; Wj0l8: } public function loginPhoneVerify() { goto vHFlS; ecVmN: if (empty($w45m7) && !modstart_config('Member_LoginPhoneAutoRegister', false)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto LPy_x; DB9mo: return Response::generate(0, '验证码发送成功'); goto C5opF; oTt_m: $w45m7 = MemberUtil::getByPhone($deRjP); goto ecVmN; kuy1V: $bz1sB = InputPackage::buildFromInput(); goto gneW1; vHFlS: if (!modstart_config('Member_LoginPhoneEnable', false)) { return Response::generate(-1, '手机快捷登录未开启'); } goto kuy1V; JURKp: if (empty($deRjP)) { return Response::generate(-1, '手机为空或格式不正确'); } goto pdkZQ; usXIp: $SKQob = rand(100000, 999999); goto ntsC3; ntsC3: Session::put('loginPhoneVerify', $SKQob); goto ttMd6; LPy_x: if (Session::get('loginPhoneVerifyTime') && $deRjP == Session::get('loginPhone')) { if (Session::get('loginPhoneVerifyTime') + 60 > time()) { return Response::generate(-1, '验证码发送频繁，请稍后再试!'); } } goto usXIp; hgx0R: Session::put('loginPhone', $deRjP); goto oMyYR; gneW1: $deRjP = $bz1sB->getPhone('target'); goto JURKp; wDAQq: if ($qhOVL) { $BEdDh = $qhOVL->validate(); if (Response::isError($BEdDh)) { return Response::generate(-1, $BEdDh['msg']); } } else { $Tzora = $bz1sB->getTrimString('captcha'); if (!CaptchaFacade::check($Tzora)) { return Response::generate(-1, '图片验证码错误'); } } goto oTt_m; pdkZQ: $qhOVL = SecurityUtil::loginCaptchaProvider(); goto wDAQq; oMyYR: SmsUtil::send($deRjP, 'verify', array('code' => $SKQob)); goto DB9mo; ttMd6: Session::put('loginPhoneVerifyTime', time()); goto hgx0R; C5opF: } public function loginPhoneCaptcha() { $Tzora = $this->loginCaptchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); } public function loginCaptcha() { $Tzora = $this->loginCaptchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); } public function registerPhone() { goto b3tIE; SZzAE: $cyfSx = $bz1sB->getTrimString('phoneVerify'); goto CVUDB; TM2g_: $bz1sB = InputPackage::buildFromInput(); goto qvQ7D; sLCBC: $tcTgP['phoneVerified'] = true; goto yV_oD; rh5VI: if (Session::get('registerPhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '手机验证码已过期'); } goto HfsBF; odqfh: return Response::generate(0, '注册成功', array('id' => $MqkYF)); goto Fex5D; W1hRg: Session::put('memberUserId', $MqkYF); goto jy921; BZaQ5: $tcTgP = array(); goto sLCBC; Zz5np: MemberUtil::autoSetUsernameNickname($MqkYF, modstart_config('Member_LoginPhoneNameSuggest', '用户')); goto BZaQ5; v_ame: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $BEdDh = $qhOVL->preCheck(); if (Response::isError($BEdDh)) { return $BEdDh; } } goto SiS5i; e35eN: if (!modstart_config('Member_RegisterPhoneEnable', false)) { return Response::generate(-1, '手机快速注册未开启'); } goto TM2g_; iU0Jg: $MqkYF = $BEdDh['data']['id']; goto Zz5np; HfsBF: if ($deRjP != Session::get('registerPhone')) { return Response::generate(-1, '两次手机不一致'); } goto v_ame; b3tIE: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto e35eN; d5iW2: if (!empty($tcTgP)) { MemberUtil::update($MqkYF, $tcTgP); } goto rzfIN; rzfIN: EventUtil::fire(new MemberUserRegisteredEvent($MqkYF)); goto e8TUb; e8TUb: Session::forget('registerCaptchaPass'); goto cjxfH; SiS5i: $BEdDh = MemberUtil::register(null, $deRjP, null, null, true); goto Rl75Y; yV_oD: $tcTgP['registerIp'] = Request::ip(); goto d5iW2; jy921: EventUtil::fire(new MemberUserLoginedEvent($MqkYF)); goto odqfh; cjxfH: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $qhOVL->postProcess($MqkYF); } goto W1hRg; Rl75Y: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto iU0Jg; CVUDB: if (empty($deRjP)) { return Response::generate(-1, '请输入手机'); } goto N7N3u; dvWUH: $deRjP = $bz1sB->getPhone('phone'); goto SZzAE; N7N3u: if ($cyfSx != Session::get('registerPhoneVerify')) { return Response::generate(-1, '手机验证码不正确.'); } goto rh5VI; qvQ7D: if (modstart_config('Member_AgreementEnable', false)) { if (!$bz1sB->getBoolean('agreement')) { return Response::generateError('请先同意 ' . modstart_config('Member_AgreementTitle', '用户使用协议')); } } goto dvWUH; Fex5D: } public function register() { goto SZn4j; EwAfr: $HPolP = $bz1sB->getTrimString('passwordRepeat'); goto c9cK8; mx6oU: $eM5tA = $bz1sB->getTrimString('username'); goto jpmnE; yaVV8: if (preg_match('/^\\d{11}$/', $eM5tA)) { return Response::generate(-1, '用户名不能为纯数字'); } goto MLSMv; SZn4j: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto YoxFt; bUAnI: if (modstart_config('registerEmailEnable')) { goto hxu2c; hxu2c: if (empty($ZYL8t)) { return Response::generate(-1, '请输入邮箱'); } goto ldiUN; t6Fkp: if (Session::get('registerEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '邮箱验证码已过期'); } goto q1N_p; ldiUN: if ($Ji2B5 != Session::get('registerEmailVerify')) { return Response::generate(-1, '邮箱验证码不正确.'); } goto t6Fkp; q1N_p: if ($ZYL8t != Session::get('registerEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto ylVYg; ylVYg: } goto Bdc5j; ThAzH: Session::forget('registerCaptchaPass'); goto V_rYB; WWsmT: if (modstart_config('Member_AgreementEnable', false)) { if (!$bz1sB->getBoolean('agreement')) { return Response::generateError('请先同意 ' . modstart_config('Member_AgreementTitle', '用户使用协议')); } } goto mx6oU; Gus43: $MqkYF = $BEdDh['data']['id']; goto N6IOz; YoxFt: $bz1sB = InputPackage::buildFromInput(); goto WWsmT; yMY01: if (empty($eM5tA)) { return Response::generate(-1, '用户名不能为空'); } goto PpMT2; PxLga: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto Prh7n; TDkIo: EventUtil::fire(new MemberUserRegisteredEvent($MqkYF)); goto ThAzH; M9JYu: if ($N7mFY != $HPolP) { return Response::generate(-1, '两次输入密码不一致'); } goto ETrc2; H66Lv: $BEdDh = MemberUtil::register($eM5tA, $deRjP, $ZYL8t, $N7mFY); goto tm9gA; jpmnE: $deRjP = $bz1sB->getPhone('phone'); goto ITSt6; Nc7C8: $Ji2B5 = $bz1sB->getTrimString('emailVerify'); goto lyPf9; Prh7n: if (modstart_config('registerPhoneEnable')) { goto yB625; XqTjq: if (Session::get('registerPhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '手机验证码已过期'); } goto RcFoX; RcFoX: if ($deRjP != Session::get('registerPhone')) { return Response::generate(-1, '两次手机不一致'); } goto ooh49; YnXpS: if ($cyfSx != Session::get('registerPhoneVerify')) { return Response::generate(-1, '手机验证码不正确.'); } goto XqTjq; yB625: if (empty($deRjP)) { return Response::generate(-1, '请输入手机'); } goto YnXpS; ooh49: } goto bUAnI; ETrc2: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $BEdDh = $qhOVL->preCheck(); if (Response::isError($BEdDh)) { return $BEdDh; } } goto H66Lv; N6IOz: $tcTgP = array(); goto gmYoX; c9cK8: $Tzora = $bz1sB->getTrimString('captcha'); goto yMY01; VDOzX: if (!empty($tcTgP)) { MemberUtil::update($MqkYF, $tcTgP); } goto TDkIo; exkoW: $ZYL8t = $bz1sB->getEmail('email'); goto Nc7C8; lyPf9: $N7mFY = $bz1sB->getTrimString('password'); goto EwAfr; K6n4_: return Response::generate(0, '注册成功', array('id' => $MqkYF)); goto PcYVZ; MLSMv: if (!Session::get('registerCaptchaPass', false)) { if (!CaptchaFacade::check($Tzora)) { SessionUtil::atomicProduce('registerCaptchaPassCount', 1); return Response::generate(-1, '请重新进行安全验证'); } } goto PxLga; RUMrk: if (modstart_config('registerEmailEnable')) { $tcTgP['emailVerified'] = true; } goto gnLE8; gmYoX: if (modstart_config('registerPhoneEnable')) { $tcTgP['phoneVerified'] = true; } goto RUMrk; tm9gA: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto Gus43; ITSt6: $cyfSx = $bz1sB->getTrimString('phoneVerify'); goto exkoW; V_rYB: foreach (MemberRegisterProcessorProvider::listAll() as $qhOVL) { $qhOVL->postProcess($MqkYF); } goto K6n4_; PpMT2: if (Str::contains($eM5tA, '@')) { return Response::generate(-1, '用户名不能包含特殊字符'); } goto yaVV8; Bdc5j: if (empty($N7mFY)) { return Response::generate(-1, '请输入密码'); } goto M9JYu; gnLE8: $tcTgP['registerIp'] = Request::ip(); goto VDOzX; PcYVZ: } public function registerEmailVerify() { goto Vi0L1; bTaqw: if (Session::get('registerEmailVerifyTime') && $ZYL8t == Session::get('registerEmail')) { if (Session::get('registerEmailVerifyTime') + 60 > time()) { return Response::generate(-1, '验证码发送频繁，请稍后再试!'); } } goto kxrQF; bQJIt: $ZYL8t = $bz1sB->getEmail('target'); goto PlW5t; kxrQF: $SKQob = rand(100000, 999999); goto KUMYe; C8b1U: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto YeebH; YeebH: $w45m7 = MemberUtil::getByEmail($ZYL8t); goto V0Ana; Vi0L1: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto yKYkY; Ij9X_: if (!Session::get('registerCaptchaPass', false)) { return Response::generate(-1, '请先进行安全验证'); } goto C8b1U; KUMYe: MailSendJob::create($ZYL8t, '注册账户验证码', 'verify', array('code' => $SKQob)); goto CIaZv; VV8ni: return Response::generate(0, '验证码发送成功'); goto kC_jf; yKYkY: if (!modstart_config('registerEmailEnable')) { return Response::generate(-1, '注册未开启邮箱'); } goto iyGnI; V0Ana: if (!empty($w45m7)) { return Response::generate(-1, '邮箱已经被占用'); } goto bTaqw; PlW5t: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱不能为空'); } goto Ij9X_; CIaZv: Session::put('registerEmailVerify', $SKQob); goto oMSu6; VcT_k: Session::put('registerEmail', $ZYL8t); goto VV8ni; iyGnI: $bz1sB = InputPackage::buildFromInput(); goto bQJIt; oMSu6: Session::put('registerEmailVerifyTime', time()); goto VcT_k; kC_jf: } public function registerPhoneVerify() { goto JJ0mR; rM99u: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto YIsvx; rGYuz: Session::put('registerPhone', $deRjP); goto JWATy; li_fZ: $SKQob = rand(100000, 999999); goto NXyNx; JJ0mR: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto YJLKX; RfvEC: Session::put('registerPhoneVerify', $SKQob); goto gPai7; NXyNx: $BEdDh = SmsUtil::send($deRjP, 'verify', array('code' => $SKQob)); goto KJhjs; KJhjs: if (Response::isError($BEdDh)) { return $BEdDh; } goto RfvEC; TQrkH: if (Session::get('registerPhoneVerifyTime') && $deRjP == Session::get('registerPhone')) { if (Session::get('registerPhoneVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto li_fZ; coqbe: $deRjP = $bz1sB->getPhone('target'); goto RuEUC; YIsvx: $w45m7 = MemberUtil::getByPhone($deRjP); goto E_fq5; RuEUC: if (empty($deRjP)) { return Response::generate(-1, '手机不能为空'); } goto OtpAq; JWATy: return Response::generate(0, '验证码发送成功'); goto PDXfs; gPai7: Session::put('registerPhoneVerifyTime', time()); goto rGYuz; YJLKX: if (!modstart_config('registerPhoneEnable')) { return Response::generate(-1, '注册未开启手机'); } goto phOJy; E_fq5: if (!empty($w45m7)) { return Response::generate(-1, '手机已经被占用'); } goto TQrkH; phOJy: $bz1sB = InputPackage::buildFromInput(); goto coqbe; OtpAq: if (!Session::get('registerCaptchaPass', false)) { return Response::generate(-1, '请先进行安全验证'); } goto rM99u; PDXfs: } public function registerCaptchaVerify() { goto NIbuE; iHVyS: SessionUtil::atomicProduce('registerCaptchaPassCount', $i5voA); goto C0UCs; ZPTje: Session::put('registerCaptchaPass', true); goto spcs2; DxZAu: if ($qhOVL) { $BEdDh = $qhOVL->validate(); if (Response::isError($BEdDh)) { return $BEdDh; } } else { goto MmoPJ; f9tkV: $Tzora = $bz1sB->getTrimString('captcha'); goto KH53k; KH53k: if (!CaptchaFacade::check($Tzora)) { SessionUtil::atomicRemove('registerCaptchaPassCount'); return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto lPx9z; MmoPJ: $bz1sB = InputPackage::buildFromInput(); goto f9tkV; lPx9z: } goto ZPTje; C0UCs: return Response::generateSuccess(); goto Q8faN; spcs2: $i5voA = 1; goto ZB0l6; ZB0l6: if (modstart_config('registerEmailEnable')) { $i5voA++; } goto ESYNg; ESYNg: if (modstart_config('registerPhoneEnable')) { $i5voA++; } goto iHVyS; NIbuE: $qhOVL = SecurityUtil::registerCaptchaProvider(); goto DxZAu; Q8faN: } public function oauthBindCaptchaVerify() { goto JeKNR; JeKNR: $bz1sB = InputPackage::buildFromInput(); goto ZskQT; lwDFa: $crQMv = 1; goto sgHuI; wOP7o: return Response::generateSuccess(); goto NZUB6; uPnsx: SessionUtil::atomicProduce('oauthBindCaptchaPassCount', $crQMv); goto wOP7o; trEzI: if (!CaptchaFacade::check($Tzora)) { SessionUtil::atomicRemove('oauthBindCaptchaPassCount'); return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto kIJlz; kIJlz: Session::put('oauthBindCaptchaPass', true); goto lwDFa; ZskQT: $Tzora = $bz1sB->getTrimString('captcha'); goto trEzI; nZLQK: if (modstart_config('Member_OauthBindEmailEnable')) { $crQMv++; } goto uPnsx; sgHuI: if (modstart_config('Member_OauthBindPhoneEnable')) { $crQMv++; } goto nZLQK; NZUB6: } public function oauthBindCaptchaRaw() { return CaptchaFacade::create('default'); } public function oauthBindCaptcha() { goto Gw80H; Gw80H: Session::forget('oauthBindCaptchaPass'); goto Ie0Kf; Ie0Kf: $Tzora = $this->oauthBindCaptchaRaw(); goto nwgDY; nwgDY: return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); goto SOjgz; SOjgz: } public function oauthBindEmailVerify() { goto vT2h1; uA71m: Session::put('oauthBindEmailVerifyTime', time()); goto NKWW9; muLOS: $ZYL8t = $bz1sB->getEmail('target'); goto yhLwl; l2cVh: return Response::generate(0, '验证码发送成功'); goto Pzbse; IiSxW: $w45m7 = MemberUtil::getByEmail($ZYL8t); goto CzLxe; vT2h1: if (!modstart_config('Member_OauthBindEmailEnable')) { return Response::generate(-1, '授权登录未开启邮箱'); } goto fl1ov; oHAQa: Session::put('oauthBindEmailVerify', $SKQob); goto uA71m; fl1ov: $bz1sB = InputPackage::buildFromInput(); goto muLOS; KwO55: if (Session::get('oauthBindEmailVerifyTime') && $ZYL8t == Session::get('oauthBindEmail')) { if (Session::get('oauthBindEmailVerifyTime') + 60 > time()) { return Response::generate(-1, '验证码发送频繁，请稍后再试!'); } } goto uNv6R; yhLwl: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱不能为空'); } goto vbIbF; uNv6R: $SKQob = rand(100000, 999999); goto cmVg2; NKWW9: Session::put('oauthBindEmail', $ZYL8t); goto l2cVh; CzLxe: if (!empty($w45m7)) { return Response::generate(-1, '邮箱已经被占用'); } goto KwO55; vbIbF: if (!Session::get('oauthBindCaptchaPass', false)) { return Response::generate(-1, '请先进行安全验证'); } goto JTdCN; JTdCN: if (!SessionUtil::atomicConsume('oauthBindCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto IiSxW; cmVg2: MailSendJob::create($ZYL8t, '注册账户验证码', 'verify', array('code' => $SKQob)); goto oHAQa; Pzbse: } public function oauthBindPhoneVerify() { goto dFKAw; QPP2f: Session::put('oauthBindPhoneVerify', $SKQob); goto YMi2P; vTcns: if (Response::isError($BEdDh)) { return $BEdDh; } goto QPP2f; LMcGr: $w45m7 = MemberUtil::getByPhone($deRjP); goto nKK6O; qXaim: return Response::generate(0, '验证码发送成功'); goto DvP4O; dFKAw: if (!modstart_config('Member_OauthBindPhoneEnable')) { return Response::generate(-1, '注册未开启手机'); } goto Z2Etw; YMi2P: Session::put('oauthBindPhoneVerifyTime', time()); goto Zyvbn; C5WOs: if (empty($deRjP)) { return Response::generate(-1, '手机不能为空'); } goto TYCFJ; TKOk0: if (!SessionUtil::atomicConsume('oauthBindCaptchaPassCount')) { return Response::generate(-1, '请进行安全验证'); } goto LMcGr; q5CDR: $SKQob = rand(100000, 999999); goto pvM6J; TYCFJ: if (!Session::get('oauthBindCaptchaPass', false)) { return Response::generate(-1, '请先进行安全验证'); } goto TKOk0; mtVh1: $deRjP = $bz1sB->getPhone('target'); goto C5WOs; Zyvbn: Session::put('oauthBindPhone', $deRjP); goto qXaim; pvM6J: $BEdDh = SmsUtil::send($deRjP, 'verify', array('code' => $SKQob)); goto vTcns; xTO0z: if (Session::get('oauthBindPhoneVerifyTime') && $deRjP == Session::get('oauthBindPhone')) { if (Session::get('oauthBindPhoneVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto q5CDR; Z2Etw: $bz1sB = InputPackage::buildFromInput(); goto mtVh1; nKK6O: if (!empty($w45m7)) { return Response::generate(-1, '手机已经被占用'); } goto xTO0z; DvP4O: } public function registerCaptchaRaw() { return CaptchaFacade::create('default'); } public function registerCaptcha() { goto B_Xop; B_Xop: Session::forget('registerCaptchaPass'); goto abdJf; abdJf: $Tzora = $this->registerCaptchaRaw(); goto FGz2e; FGz2e: return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); goto LEvYh; LEvYh: } public function retrievePhone() { goto iYsN9; HnXN4: if (empty($deRjP)) { return Response::generate(-1, '手机为空或不正确'); } goto D5E5c; YIniG: Session::forget('retrievePhoneVerify'); goto IZyfd; sHtQH: if (Session::get('retrievePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '手机验证码已过期'); } goto ia5lO; E4osK: $bz1sB = InputPackage::buildFromInput(); goto cud3t; IZyfd: Session::forget('retrievePhoneVerifyTime'); goto p6no9; jb1Ac: $deRjP = $bz1sB->getPhone('phone'); goto OCp2Z; ia5lO: if ($deRjP != Session::get('retrievePhone')) { return Response::generate(-1, '两次手机不一致'); } goto gazmv; OCp2Z: $SKQob = $bz1sB->getTrimString('verify'); goto HnXN4; D5E5c: if (empty($SKQob)) { return Response::generate(-1, '验证码不能为空'); } goto HzJZo; p6no9: Session::forget('retrievePhone'); goto Kt1ij; Tive5: if (empty($w45m7)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto YIniG; Kt1ij: Session::put('retrieveMemberUserId', $w45m7['id']); goto YS3nG; HzJZo: if ($SKQob != Session::get('retrievePhoneVerify')) { return Response::generate(-1, '手机验证码不正确'); } goto sHtQH; YS3nG: return Response::generate(0, null); goto jvxoM; cud3t: if (!modstart_config('retrievePhoneEnable', false)) { return Response::generate(-1, '找回密码没有开启'); } goto jb1Ac; gazmv: $w45m7 = MemberUtil::getByPhone($deRjP); goto Tive5; iYsN9: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto E4osK; jvxoM: } public function retrievePhoneVerify() { goto cjiT5; hF7In: if (!CaptchaFacade::check($Tzora)) { return Response::generate(-1, '图片验证码错误'); } goto BK8Ia; BK8Ia: $w45m7 = MemberUtil::getByPhone($deRjP); goto KefhW; zO0B0: Session::put('retrievePhoneVerify', $SKQob); goto E5pv6; KefhW: if (empty($w45m7)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto BQQTq; IHZeJ: return Response::generate(0, '验证码发送成功'); goto G6Eti; I2dN8: Session::put('retrievePhone', $deRjP); goto wvnlj; nHQgF: $deRjP = $bz1sB->getPhone('target'); goto rl0U6; ZpJQe: $Tzora = $bz1sB->getTrimString('captcha'); goto hF7In; cjiT5: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto GKlmc; BQQTq: if (Session::get('retrievePhoneVerifyTime') && $deRjP == Session::get('retrievePhone')) { if (Session::get('retrievePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto YEhS6; wvnlj: SmsUtil::send($deRjP, 'verify', array('code' => $SKQob)); goto IHZeJ; YEhS6: $SKQob = rand(100000, 999999); goto zO0B0; E5pv6: Session::put('retrievePhoneVerifyTime', time()); goto I2dN8; rl0U6: if (empty($deRjP)) { return Response::generate(-1, '手机为空或格式不正确'); } goto ZpJQe; GKlmc: $bz1sB = InputPackage::buildFromInput(); goto nHQgF; G6Eti: } public function retrieveEmail() { goto RrBoT; YaJ2L: if (empty($w45m7)) { return Response::generate(-1, '邮箱没有绑定任何账号'); } goto Vw9Q6; Vw9Q6: Session::forget('retrieveEmailVerify'); goto wR5Op; boJIc: $SKQob = $bz1sB->getTrimString('verify'); goto mduTf; Ijo7Z: $bz1sB = InputPackage::buildFromInput(); goto UeAXq; CCrgh: if ($SKQob != Session::get('retrieveEmailVerify')) { return Response::generate(-1, '邮箱验证码不正确'); } goto EPp2M; Cmu3F: Session::put('retrieveMemberUserId', $w45m7['id']); goto v8NZs; VYMPN: if (empty($SKQob)) { return Response::generate(-1, '验证码不能为空'); } goto CCrgh; yrmwc: if (!modstart_config('retrieveEmailEnable', false)) { return Response::generate(-1, '找回密码没有开启'); } goto Ijo7Z; UeAXq: $ZYL8t = $bz1sB->getEmail('email'); goto boJIc; v8NZs: return Response::generate(0, null); goto wO2M2; RrBoT: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto yrmwc; cFwGH: $w45m7 = MemberUtil::getByEmail($ZYL8t); goto YaJ2L; P3dp3: Session::forget('retrieveEmail'); goto Cmu3F; i_oaG: if ($ZYL8t != Session::get('retrieveEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto cFwGH; EPp2M: if (Session::get('retrieveEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '邮箱验证码已过期'); } goto i_oaG; wR5Op: Session::forget('retrieveEmailVerifyTime'); goto P3dp3; mduTf: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱为空或格式不正确'); } goto VYMPN; wO2M2: } public function retrieveEmailVerify() { goto assJM; NKaPe: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱格式不正确或为空'); } goto U0ErH; FAlQs: Session::put('retrieveEmailVerifyTime', time()); goto GRf13; U0ErH: $Tzora = $bz1sB->getTrimString('captcha'); goto zpvLe; NhT2V: MailSendJob::create($ZYL8t, '找回密码验证码', 'verify', array('code' => $SKQob)); goto EvPXz; EvPXz: Session::put('retrieveEmailVerify', $SKQob); goto FAlQs; zpvLe: if (!CaptchaFacade::check($Tzora)) { return Response::generate(-1, '图片验证码错误'); } goto S_7uH; S_7uH: $w45m7 = MemberUtil::getByEmail($ZYL8t); goto PxBhi; assJM: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto PbQf7; PbQf7: $bz1sB = InputPackage::buildFromInput(); goto KkJsI; pVASV: return Response::generate(0, '验证码发送成功'); goto NaPFl; IEkjA: $SKQob = rand(100000, 999999); goto NhT2V; WUWd8: if (Session::get('retrieveEmailVerifyTime') && $ZYL8t == Session::get('retrieveEmail')) { if (Session::get('retrieveEmailVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto IEkjA; GRf13: Session::put('retrieveEmail', $ZYL8t); goto pVASV; PxBhi: if (empty($w45m7)) { return Response::generate(-1, '邮箱没有绑定任何账号'); } goto WUWd8; KkJsI: $ZYL8t = $bz1sB->getEmail('target'); goto NKaPe; NaPFl: } public function retrieveResetInfo() { goto cKOmJ; K34nD: return Response::generate(0, null, array('memberUser' => array('username' => $eM5tA))); goto Ca2lm; AdR9c: if (empty($ZY0IE)) { return Response::generate(-1, '请求错误'); } goto C3mn0; llh_Q: $eM5tA = $w45m7['username']; goto p1liE; p1liE: if (empty($eM5tA)) { $eM5tA = $w45m7['phone']; } goto hJR9z; hJR9z: if (empty($eM5tA)) { $eM5tA = $w45m7['email']; } goto K34nD; cKOmJ: $ZY0IE = Session::get('retrieveMemberUserId'); goto AdR9c; C3mn0: $w45m7 = MemberUtil::get($ZY0IE); goto llh_Q; Ca2lm: } public function retrieveReset() { goto CWej9; B3qSS: Session::forget('retrieveMemberUserId'); goto fHOPn; CWej9: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto IlpAp; qEquD: $HPolP = $bz1sB->getTrimString('passwordRepeat'); goto jNbeC; IkEbo: $ZY0IE = Session::get('retrieveMemberUserId'); goto zv7tr; uOfIn: $w45m7 = MemberUtil::get($ZY0IE); goto TIg3B; SAxcp: EventUtil::fire(new MemberUserPasswordResetedEvent($w45m7['id'], $N7mFY)); goto B3qSS; fHOPn: return Response::generate(0, '成功设置新密码,请您登录'); goto PQ5nx; IlpAp: $bz1sB = InputPackage::buildFromInput(); goto IkEbo; GeW2K: $BEdDh = MemberUtil::changePassword($w45m7['id'], $N7mFY, null, true); goto AGLeD; YEVoO: $N7mFY = $bz1sB->getTrimString('password'); goto qEquD; w_VeN: if ($N7mFY != $HPolP) { return Response::generate(-1, '两次输入密码不一致'); } goto uOfIn; zv7tr: if (empty($ZY0IE)) { return Response::generate(-1, '请求错误'); } goto YEVoO; jNbeC: if (empty($N7mFY)) { return Response::generate(-1, '请输入密码'); } goto w_VeN; TIg3B: if (empty($w45m7)) { return Response::generate(-1, '用户不存在'); } goto GeW2K; AGLeD: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto SAxcp; PQ5nx: } public function retrieveCaptchaRaw() { return CaptchaFacade::create('default'); } public function retrieveCaptcha() { $Tzora = $this->retrieveCaptchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); } }