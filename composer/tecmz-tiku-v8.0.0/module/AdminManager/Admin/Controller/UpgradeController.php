<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\AdminManager\Admin\Controller; use App\Constant\AppConstant; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use Module\AdminManager\Util\ModuleUtil; use Module\AdminManager\Util\UpgradeUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'auth' => '@SystemUpgrade'); private function doFinish($O066a, $gn4HX = null) { return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'logs' => $gn4HX, 'finish' => true)); } private function doNext($NH6tu, $O066a = array(), $GeXSC = array()) { goto l5dA1; l5dA1: $bz1sB = InputPackage::buildFromInput(); goto o3gGN; o3gGN: $GeXSC = array_merge($bz1sB->getJsonAsInput('data')->all(), $GeXSC); goto B_ot1; B_ot1: return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { if (!starts_with($REa1I, '<')) { $REa1I = "<span class='ub-text-white'>{$REa1I}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'step' => $NH6tu, 'data' => $GeXSC, 'finish' => false)); goto e4WD0; e4WD0: } public function index() { goto FmXcp; QKzoV: if (Request::isPost()) { goto q7Fl5; q7Fl5: AdminPermission::demoCheck(); goto iXHUy; YVHNM: $NH6tu = $bz1sB->getTrimString('step'); goto dkntX; dkntX: $HUlap = $bz1sB->getTrimString('token'); goto URZH9; URZH9: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto KuB_E; iXHUy: $bz1sB = InputPackage::buildFromInput(); goto YVHNM; eFOVq: switch ($NH6tu) { case 'upgradePackage': goto VEn3b; OsDU9: BizException::throwsIfEmpty('diffContentFile为空', $Qob5Q); goto M8qCi; M8qCi: $BEdDh = UpgradeUtil::upgradePackage($ZD7Jf, $Qob5Q); goto hCDgN; VEn3b: $ZD7Jf = $gSjJ9->getTrimString('package'); goto NtcIc; WfRhE: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $BEdDh['data']['logs']); goto N0_gY; hCDgN: BizException::throwsIfResponseError($BEdDh); goto WfRhE; s1OmV: BizException::throwsIfEmpty('package为空', $ZD7Jf); goto OsDU9; NtcIc: $Qob5Q = $gSjJ9->getTrimString('diffContentFile'); goto s1OmV; N0_gY: case 'downloadPackage': goto q987G; Wdk8v: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压升级装包...</span>'), array('package' => $BEdDh['data']['package'], 'diffContentFile' => $BEdDh['data']['diffContentFile'])); goto n02CU; h2QYo: BizException::throwsIfResponseError($BEdDh); goto Wdk8v; q987G: $BEdDh = UpgradeUtil::downloadPackage($HUlap, AppConstant::APP, AppConstant::VERSION, $bssXV); goto h2QYo; n02CU: case 'checkPackage': goto iNmpm; hfhVh: return $this->doNext('downloadPackage', array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检通过</span>', '<span class="ub-text-white">开始下载升级包...</span>')); goto brMdY; iNmpm: try { $knCM0 = Artisan::call('migrate'); } catch (\Exception $knlzD) { $knCM0 = -1; } goto v2PTK; v2PTK: BizException::throwsIf('调用 php artisan 命令失败，不能自动升级', 0 != $knCM0); goto hfhVh; brMdY: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $bssXV . '</span>', '<span class="ub-text-white">开始预检系统...</span>')); } goto hc24e; Pa_Lh: BizException::throwsIfEmpty('toVersion为空', $bssXV); goto eFOVq; KuB_E: $bssXV = $gSjJ9->getTrimString('toVersion'); goto Pa_Lh; hc24e: } goto yyOwb; yyOwb: return view('module::AdminManager.View.admin.upgrade'); goto ODURF; FmXcp: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto QKzoV; ODURF: } public function auth() { return view('module::AdminManager.View.admin.auth', array('modules' => ModuleUtil::modules())); } public function info() { $lUvJb = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $lUvJb['latestVersion'], 'autoUpgrade' => $lUvJb['autoUpgrade'])); } }