<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Payment\Notify; use Payment\Common\PayException; use Payment\Common\WxConfig; use Payment\Config; use Payment\Utils\ArrayUtil; use Payment\Utils\DataParser; class WxNotify extends NotifyStrategy { public function __construct(array $qc0K6) { try { $this->config = new WxConfig($qc0K6); } catch (PayException $knlzD) { throw $knlzD; } } public function getNotifyData() { goto BPqsO; BPqsO: $GeXSC = @file_get_contents('php://input'); goto ahL6g; ahL6g: $IK8_G = DataParser::toArray($GeXSC); goto p8rl6; aa41a: $IK8_G = ArrayUtil::paraFilter($IK8_G); goto GTg2e; mybWw: return $IK8_G; goto xypND; p8rl6: if (empty($IK8_G)) { return false; } goto aa41a; GTg2e: if (isset($IK8_G['req_info'])) { goto lXwXd; yhqyQ: $OfJhe = openssl_decrypt($OfJhe, 'aes-256-ecb', md5($this->config->md5Key), OPENSSL_RAW_DATA); goto G3aRd; lXwXd: $OfJhe = base64_decode($IK8_G['req_info']); goto yhqyQ; qfVS8: $IK8_G = array_merge($OfJhe, $IK8_G); goto FYOD1; G3aRd: $OfJhe = DataParser::toArray($OfJhe); goto qfVS8; FYOD1: } goto mybWw; xypND: } public function checkNotifyData(array $GeXSC) { if ($GeXSC['return_code'] != 'SUCCESS') { return false; } else { if (isset($GeXSC['result_code']) && $GeXSC['result_code'] != 'SUCCESS') { return false; } } if (isset($GeXSC['sign'])) { return $this->verifySign($GeXSC); } else { return true; } } protected function verifySign(array $eypYa) { goto P7aGF; ep9Nv: switch ($this->config->signType) { case 'MD5': $GtgYE = md5($IRvxP); break; case 'HMAC-SHA256': $GtgYE = hash_hmac('sha256', $IRvxP, $this->config->md5Key); break; default: $GtgYE = ''; } goto F1Pfa; F1Pfa: return strtoupper($GtgYE) === $UDWGC; goto lNNOK; MQ6yn: $vjyaQ = ArrayUtil::removeKeys($eypYa, array('sign', 'sign_type')); goto Uvo5E; Uvo5E: $vjyaQ = ArrayUtil::paraFilter($vjyaQ); goto KqHRQ; CyjjR: $IRvxP = ArrayUtil::createLinkstring($vjyaQ); goto vvsHu; KqHRQ: $vjyaQ = ArrayUtil::arraySort($vjyaQ); goto CyjjR; vvsHu: $IRvxP .= '&key=' . $this->config->md5Key; goto ep9Nv; P7aGF: $UDWGC = $eypYa['sign']; goto MQ6yn; lNNOK: } protected function getRetData(array $GeXSC) { if (isset($GeXSC['refund_id'])) { return $GeXSC; } else { goto lepVy; q3Uqg: if (isset($GeXSC['attach']) && !empty($GeXSC['attach'])) { $eypYa['return_param'] = $GeXSC['attach']; } goto B03VQ; lepVy: if ($this->config->returnRaw) { $GeXSC['channel'] = Config::WX_CHARGE; return $GeXSC; } goto hF9Ih; nSj8i: $Ia2tq = bcdiv($GeXSC['cash_fee'], 100, 2); goto iN3ZU; iN3ZU: $eypYa = array('bank_type' => $GeXSC['bank_type'], 'cash_fee' => $Ia2tq, 'device_info' => $GeXSC['device_info'], 'fee_type' => $GeXSC['fee_type'], 'is_subscribe' => $GeXSC['is_subscribe'], 'buyer_id' => $GeXSC['openid'], 'order_no' => $GeXSC['out_trade_no'], 'pay_time' => date('Y-m-d H:i:s', strtotime($GeXSC['time_end'])), 'amount' => $pfV4Z, 'trade_type' => $GeXSC['trade_type'], 'transaction_id' => $GeXSC['transaction_id'], 'trade_state' => strtolower($GeXSC['return_code']), 'channel' => Config::WX_CHARGE); goto q3Uqg; B03VQ: return $eypYa; goto ZvjwL; hF9Ih: $pfV4Z = bcdiv($GeXSC['total_fee'], 100, 2); goto nSj8i; ZvjwL: } } protected function replyNotify($gSChU, $klZBn = 'OK') { goto coXkl; SvtZW: if (!$gSChU) { $hlYz_ = array('return_code' => 'FAIL', 'return_msg' => $klZBn); } goto zR4NZ; zR4NZ: return DataParser::toXml($hlYz_); goto CTJKL; coXkl: $hlYz_ = array('return_code' => 'SUCCESS', 'return_msg' => 'OK'); goto SvtZW; CTJKL: } }