<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Payment\Notify; use Illuminate\Support\Facades\Log; use Payment\Common\AliConfig; use Payment\Common\PayException; use Payment\Config; use Payment\Utils\ArrayUtil; use Payment\Utils\Rsa2Encrypt; use Payment\Utils\RsaEncrypt; class AliNotify extends NotifyStrategy { public function __construct(array $qc0K6) { try { $this->config = new AliConfig($qc0K6); } catch (PayException $knlzD) { throw $knlzD; } } public function getNotifyData() { goto Vdbyt; Vdbyt: $GeXSC = empty($_POST) ? $_GET : $_POST; goto RZMxG; vToOD: return $GeXSC; goto dNcuJ; RZMxG: if (empty($GeXSC) || !is_array($GeXSC)) { return false; } goto vToOD; dNcuJ: } public function checkNotifyData(array $GeXSC) { goto Y4_lB; rJ0Um: if ($M0y01 !== Config::TRADE_STATUS_SUCC) { return false; } goto ShYnd; Y4_lB: $M0y01 = $this->getTradeStatus($GeXSC['trade_status']); goto rJ0Um; FH5xM: return $gSChU; goto rTIxD; ShYnd: $gSChU = $this->verifySign($GeXSC); goto FH5xM; rTIxD: } protected function getRetData(array $GeXSC) { goto IZ33p; TMQGr: if (isset($GeXSC['passback_params']) && !empty($GeXSC['passback_params'])) { $eypYa['return_param'] = $GeXSC['passback_params']; } goto vu0k0; IZ33p: if ($this->config->returnRaw) { $GeXSC['channel'] = Config::ALI_CHARGE; return $GeXSC; } goto WJ18j; aAqow: if (isset($GeXSC['voucher_detail_list']) && !empty($GeXSC['voucher_detail_list'])) { $eypYa['voucher_detail_list'] = \GuzzleHttp\json_decode($GeXSC['voucher_detail_list'], true); } goto XgzMj; vu0k0: if (isset($GeXSC['fund_bill_list']) && !empty($GeXSC['fund_bill_list'])) { $eypYa['fund_bill_list'] = \GuzzleHttp\json_decode($GeXSC['fund_bill_list'], true); } goto aAqow; XgzMj: return $eypYa; goto V4BDe; WJ18j: $eypYa = array('notify_time' => ArrayUtil::get($GeXSC, 'notify_time'), 'notify_type' => ArrayUtil::get($GeXSC, 'notify_type'), 'notify_id' => ArrayUtil::get($GeXSC, 'notify_id'), 'app_id' => ArrayUtil::get($GeXSC, 'app_id'), 'transaction_id' => ArrayUtil::get($GeXSC, 'trade_no'), 'order_no' => ArrayUtil::get($GeXSC, 'out_trade_no'), 'out_biz_no' => ArrayUtil::get($GeXSC, 'out_biz_no'), 'buyer_id' => ArrayUtil::get($GeXSC, 'buyer_id'), 'buyer_account' => ArrayUtil::get($GeXSC, 'buyer_logon_id'), 'seller_id' => ArrayUtil::get($GeXSC, 'seller_id'), 'seller_email' => ArrayUtil::get($GeXSC, 'seller_email'), 'trade_state' => $this->getTradeStatus($GeXSC['trade_status']), 'amount' => ArrayUtil::get($GeXSC, 'total_amount'), 'receipt_amount' => ArrayUtil::get($GeXSC, 'receipt_amount'), 'invoice_amount' => ArrayUtil::get($GeXSC, 'invoice_amount'), 'pay_amount' => ArrayUtil::get($GeXSC, 'buyer_pay_amount'), 'point_amount' => ArrayUtil::get($GeXSC, 'point_amount'), 'refund_fee' => ArrayUtil::get($GeXSC, 'refund_fee'), 'subject' => ArrayUtil::get($GeXSC, 'subject'), 'body' => ArrayUtil::get($GeXSC, 'body'), 'trade_create_time' => ArrayUtil::get($GeXSC, 'gmt_create'), 'pay_time' => ArrayUtil::get($GeXSC, 'gmt_payment'), 'trade_refund_time' => ArrayUtil::get($GeXSC, 'gmt_refund'), 'trade_close_time' => ArrayUtil::get($GeXSC, 'gmt_close'), 'channel' => Config::ALI_CHARGE); goto TMQGr; V4BDe: } protected function replyNotify($gSChU, $klZBn = '') { if ($gSChU) { return 'success'; } else { Log::error('支付宝回调通知：' . $klZBn); return 'fail'; } } protected function getTradeStatus($M0y01) { if (in_array($M0y01, array('TRADE_SUCCESS', 'TRADE_FINISHED'))) { return Config::TRADE_STATUS_SUCC; } else { return Config::TRADE_STATUS_FAILD; } } protected function verifySign(array $GeXSC) { goto ROXY5; uXFJZ: if ($A5QIh === 'RSA') { $KHNS_ = new RsaEncrypt($this->config->rsaAliPubKey); return $KHNS_->rsaVerify($V3tE3, $GtgYE); } elseif ($A5QIh === 'RSA2') { $KHNS_ = new Rsa2Encrypt($this->config->rsaAliPubKey); return $KHNS_->rsaVerify($V3tE3, $GtgYE); } else { return false; } goto JZ2_C; zFBZG: $V3tE3 = ArrayUtil::createLinkstring($vjyaQ); goto uXFJZ; DewnD: $vjyaQ = ArrayUtil::arraySort($vjyaQ); goto zFBZG; F52zW: $vjyaQ = ArrayUtil::removeKeys($GeXSC, array('sign', 'sign_type')); goto MIDdt; ROXY5: $A5QIh = strtoupper($GeXSC['sign_type']); goto TN3s0; TN3s0: $GtgYE = $GeXSC['sign']; goto F52zW; MIDdt: $vjyaQ = ArrayUtil::paraFilter($vjyaQ); goto DewnD; JZ2_C: } }