<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\PayCenter\Web\Controller; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Log; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use Module\PayCenter\Provider\PayCenterProvider; use Module\PayCenter\Type\PayType; use Module\PayCenter\Util\PayOrderUtil; use Module\PayCenter\Web\Support\PayAlipayWebNotify; use Payment\Client\Notify; use Payment\Config; class NotifyController extends Controller { public function index($l9M__ = '') { goto sQSQO; sQSQO: $bz1sB = InputPackage::buildFromInput(); goto ck11S; iCXog: switch ($l9M__) { case PayType::ALIPAY: goto JTBor; OcpUd: if (!app('alipay.web')->verify()) { Log::info('PayCenter.Alipay.VerifyFailed - ' . json_encode(array('data' => Request::instance()->getContent()))); return 'fail'; } goto xVIfq; huKyr: return 'fail'; goto Ryds7; JTBor: PayOrderUtil::initAlipay(); goto OcpUd; xVIfq: switch (Input::get('trade_status')) { case 'TRADE_SUCCESS': case 'TRADE_FINISHED': goto z25xD; R4PKa: return 'success'; goto Nmthq; TTq41: $f3szF = $bz1sB->getTrimString('trade_no'); goto rzmFP; VVZfg: if ($BEdDh['code']) { return 'fail'; } goto R4PKa; z25xD: $I7OQF = $bz1sB->getTrimString('out_trade_no'); goto TTq41; rzmFP: Log::info('PayCenter.Alipay.VerifySuccess - ' . json_encode(array('out_trade_no' => $I7OQF, 'trade_no' => $f3szF), JSON_UNESCAPED_UNICODE)); goto heftC; heftC: $BEdDh = PayOrderUtil::handleOrderPay(PayType::ALIPAY, $I7OQF, array('payOrderId' => $f3szF)); goto VVZfg; Nmthq: } goto huKyr; Ryds7: case PayType::WECHAT: case PayType::WECHAT_MOBILE: case PayType::WECHAT_H5: return PayOrderUtil::getWechatPayment()->handlePaidNotify(function ($O04Zr, $zaME0) use($l9M__) { Log::info('PayCenter.' . $l9M__ . '.VerifySuccess - ' . json_encode($O04Zr, JSON_UNESCAPED_UNICODE)); $BEdDh = PayOrderUtil::handleOrderPay($l9M__, $O04Zr['out_trade_no']); if ($BEdDh['code']) { $zaME0($BEdDh['msg']); } return true; }); case PayType::WECHAT_MINI_PROGRAM: return PayOrderUtil::getWechatMiniProgramPayment()->handlePaidNotify(function ($O04Zr, $zaME0) { Log::info('PayCenter.WechatMiniProgram.VerifySuccess - ' . json_encode($O04Zr, JSON_UNESCAPED_UNICODE)); $BEdDh = PayOrderUtil::handleOrderPay(PayType::WECHAT_MINI_PROGRAM, $O04Zr['out_trade_no']); if ($BEdDh['code']) { $zaME0($BEdDh['msg']); } return true; }); case PayType::ALIPAY_WEB: case PayType::ALIPAY_MOBILE: goto HjAWq; ZpP2Z: Log::info('PayCenter.' . $l9M__ . '.NotifyResult - ' . json_encode($hlYz_, JSON_UNESCAPED_UNICODE)); goto nl1jj; nl1jj: return $hlYz_; goto uq3Dh; HjAWq: Log::info('PayCenter.' . $l9M__ . '.Notify - ' . json_encode($bz1sB->all(), JSON_UNESCAPED_UNICODE)); goto zsqwQ; KqDmq: $hlYz_ = Notify::run(Config::ALI_CHARGE, $qc0K6, new PayAlipayWebNotify()); goto ZpP2Z; zsqwQ: $qc0K6 = PayOrderUtil::alipayWebConfig(); goto KqDmq; uq3Dh: default: goto kPbYH; iaO9n: return $qhOVL->onNotify($l9M__, $bz1sB->all()); goto EsAu0; hZfLW: Log::info('PayCenter.' . $l9M__ . '.Notify - ' . json_encode($bz1sB->all(), JSON_UNESCAPED_UNICODE)); goto iaO9n; gDrhE: BizException::throwsIfEmpty('PayTypeProviderEmpty - ' . $l9M__, $qhOVL); goto hZfLW; kPbYH: $qhOVL = PayCenterProvider::get($l9M__); goto gDrhE; EsAu0: } goto J11jh; J11jh: BizException::throws('PayTypeError - ' . $l9M__); goto V2XMn; ck11S: Log::info('PayCenter.Notify - ' . json_encode($bz1sB->all(), JSON_UNESCAPED_UNICODE)); goto iCXog; V2XMn: } }