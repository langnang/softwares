<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Question\Admin\Controller; use Illuminate\Routing\Controller; use ModStart\Admin\Concern\HasAdminQuickCRUD; use ModStart\Admin\Layout\AdminCRUDBuilder; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\TreeUtil; use ModStart\Form\Form; use ModStart\Grid\GridFilter; use ModStart\Repository\Filter\RepositoryFilter; use ModStart\Repository\Filter\ScopeFilter; use ModStart\Support\Concern\HasFields; use Module\Question\Util\QuestionCatUtil; use Module\Question\Util\QuestionChapterUtil; class QuestionChapterController extends Controller { use HasAdminQuickCRUD; public static $PermitMethodMap = array('all' => '*', 'map' => '*'); protected function crud(AdminCRUDBuilder $cv5kq) { goto S5gJ4; S5gJ4: $cv5kq->init('question_chapter')->field(function ($cv5kq) { $cv5kq->id('id', 'ID'); $cv5kq->text('title', '名称')->required(); $cv5kq->number('questionCount', '题目数量')->addable(false)->editable(false)->listable(true); $cv5kq->display('created_at', L('Created At'))->listable(false); $cv5kq->display('updated_at', L('Updated At'))->listable(false); }); goto tpdsY; tpdsY: foreach (QuestionCatUtil::all() as $REa1I) { $cv5kq->scopeFilter($REa1I['id'], $REa1I['title'], function (ScopeFilter $qM7YH) use($REa1I) { $qM7YH->where('catId', $REa1I['id']); }); } goto DSDqe; DSDqe: $cv5kq->scopeDefault(QuestionCatUtil::firstId())->repositoryFilter(function (RepositoryFilter $qM7YH) use($cv5kq) { $qM7YH->where('catId', $cv5kq->scopeValue()); $cv5kq->scopeAddedParam(array('catId' => $cv5kq->scopeValue())); })->gridFilter(function (GridFilter $qM7YH) { $qM7YH->eq('id', L('ID')); $qM7YH->like('title', L('Title')); })->hookChanged(function (Form $Yfg4L) { QuestionChapterUtil::clearCache(); })->asTree()->treeMaxLevel(3)->canShow(false)->title('题库分类'); goto tbfFJ; tbfFJ: } public function all() { goto DGoZ5; UbhRL: $xM1vS = TreeUtil::treeChain($m0MLE, $vSByv); goto deIGc; SGOz3: $oUKOQ = $bz1sB->getInteger('catId', 0); goto T9Q7M; deIGc: return Response::generateSuccessData(array('tree' => $m0MLE, 'chain' => $xM1vS)); goto LcTcB; T9Q7M: $m0MLE = QuestionChapterUtil::allTree($oUKOQ); goto RrPJ3; RrPJ3: $vSByv = $bz1sB->getInteger('chapterId', 0); goto UbhRL; DGoZ5: $bz1sB = InputPackage::buildFromInput(); goto SGOz3; LcTcB: } public function map() { goto Jh6JA; Jh6JA: $bz1sB = InputPackage::buildFromInput(); goto OZasO; KUnSH: $m0MLE = QuestionChapterUtil::allTree($oUKOQ); goto N0d0L; N0d0L: $TbleL = TreeUtil::treeToTitleIdMap($m0MLE); goto rJ467; rJ467: return Response::generateSuccessData($TbleL); goto QjOFr; OZasO: $oUKOQ = $bz1sB->getInteger('catId', 0); goto KUnSH; QjOFr: } }