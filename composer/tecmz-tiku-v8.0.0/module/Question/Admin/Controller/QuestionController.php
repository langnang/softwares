<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Question\Admin\Controller; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Session; use Illuminate\Support\Facades\View; use Illuminate\Support\Str; use ModStart\Admin\Auth\Admin; use ModStart\Admin\Auth\AdminPermission; use ModStart\Admin\Concern\HasAdminQuickCRUD; use ModStart\Admin\Layout\AdminCRUDBuilder; use ModStart\Admin\Layout\AdminDialogPage; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\CRUDUtil; use ModStart\Core\Util\HtmlUtil; use ModStart\Core\Util\RenderUtil; use ModStart\Core\Util\TagUtil; use ModStart\Field\AbstractField; use ModStart\Field\AutoRenderedFieldValue; use ModStart\Field\Tags; use ModStart\Field\Type\FieldRenderMode; use ModStart\Form\Form; use ModStart\Grid\Displayer\ItemOperate; use ModStart\Grid\GridFilter; use ModStart\Module\ModuleManager; use ModStart\Repository\Filter\RepositoryFilter; use ModStart\Support\Concern\HasFields; use ModStart\Widget\TextDialogRequest; use Module\Question\Type\QuestionStatus; use Module\Question\Type\QuestionType; use Module\Question\Util\QuestionAdminUtil; use Module\Question\Util\QuestionCatUtil; use Module\Question\Util\QuestionChapterUtil; use Module\Question\Util\QuestionUtil; use Module\Question\Util\SuperSearchUtil; use Module\Vendor\Provider\SiteUrl\SiteUrlProvider; class QuestionController extends Controller { use HasAdminQuickCRUD; protected function crud(AdminCRUDBuilder $cv5kq) { $cv5kq->init('question')->field(function ($cv5kq) { $cv5kq->id('id', 'ID'); $cv5kq->select('catId', '类别')->optionArray(QuestionCatUtil::all(), 'id', 'title'); $cv5kq->select('chapterId', '分类')->optionArray(QuestionChapterUtil::all(), 'id', 'title'); $cv5kq->switch('isOpen', '公开')->optionsYesNo()->gridEditable(true); $cv5kq->type('type', '类型')->type(QuestionType::class); $cv5kq->richHtml('question', '题目')->listable(true)->hookRendering(function (AbstractField $QGYmu, $REa1I, $x1Lvn) { return QuestionAdminUtil::render($QGYmu, $REa1I); }); $cv5kq->tags('tag', '标签')->tagModel('question_tag')->serializeType(Tags::SERIALIZE_TYPE_COLON_SEPARATED); $cv5kq->display('_status', '点击/测试/通过')->hookRendering(function (AbstractField $QGYmu, $REa1I, $x1Lvn) { return AutoRenderedFieldValue::make(join(' / ', array(intval($REa1I->clickCount), intval($REa1I->testCount), intval($REa1I->passCount)))); })->addable(false)->editable(false)->showable(false); if (modstart_module_enabled('Paper')) { $cv5kq->display('_examStatus', '考试频次/错误率')->hookRendering(function (AbstractField $QGYmu, $REa1I, $x1Lvn) { $qSGKk = array(); if ($REa1I->examTotalCount > 0) { $qSGKk[] = $REa1I->examTotalCount; $qSGKk[] = intval(($REa1I->examTotalCount - $REa1I->examPassCount) / $REa1I->examTotalCount * 100) . '%'; } else { $qSGKk[] = '0'; $qSGKk[] = '0%'; } return AutoRenderedFieldValue::make(join(' / ', $qSGKk)); })->addable(false)->editable(false)->showable(false); } $cv5kq->display('created_at', L('Created At'))->listable(false); $cv5kq->display('updated_at', L('Updated At'))->listable(false); })->hookItemOperateRendering(function (ItemOperate $gs6sD) { $gs6sD->getField()->gridFixed('right'); })->repositoryFilter(function (RepositoryFilter $qM7YH) { if (!Input::get('_viewOnly', false)) { $qM7YH->where('parentId', 0)->where('memberUserId', 0); } })->gridFilter(function (GridFilter $qM7YH) { $qM7YH->eq('id', L('ID')); $qM7YH->eq('type', '类型')->select(QuestionType::class); $qM7YH->eq('isOpen', '公开')->switchSelectYesNo(); $qM7YH->like('question', '题目'); $qM7YH->eq('catId', '类别')->selectArray(QuestionCatUtil::all()); $qM7YH->has('chapterId', '分类')->cascader(array()); $qM7YH->likes('tag', '标签')->groupTags(array(), Tags::SERIALIZE_TYPE_COLON_SEPARATED); })->batchOperatePrepend('<button class="btn" data-batch-dialog-operate="' . modstart_admin_url('question/batch_edit') . '"><i class="iconfont icon-edit"></i> 批量编辑</button>')->gridOperateAppend(RenderUtil::view('module::Question.View.admin.question.grid'))->canBatchDelete(true)->title('题目管理'); } public function batchEdit(AdminDialogPage $gETpv) { goto PYr7N; f8lsi: $Yfg4L->switch('catIdEnable', '修改类别')->optionsYesNo()->when(true, function (Form $Yfg4L) { $Yfg4L->select('catId', '类别')->optionArray(QuestionCatUtil::all(), 'id', 'title'); }); goto vSF7n; vSF7n: $Yfg4L->switch('chapterIdEnable', '修改分类')->optionsYesNo()->when(true, function (Form $Yfg4L) { $Yfg4L->number('chapterId', '分类ID'); }); goto On3HW; FTqR2: return $gETpv->body($Yfg4L)->pageTitle('批量编辑')->handleForm($Yfg4L, function (Form $Yfg4L) { $GeXSC = $Yfg4L->dataForming(); $Da1nS = CRUDUtil::ids(); BizException::throwsIfEmpty('ID为空', $Da1nS); $tcTgP = array(); if ($GeXSC['catIdEnable']) { $tcTgP['catId'] = $GeXSC['catId']; } if ($GeXSC['chapterIdEnable']) { $tcTgP['chapterId'] = $GeXSC['chapterId']; } if ($GeXSC['isOpenEnable']) { $tcTgP['isOpen'] = $GeXSC['isOpen']; } AdminPermission::demoCheck(); if (!empty($tcTgP)) { ModelUtil::model('question')->whereIn('id', $Da1nS)->update($tcTgP); } return Response::redirect(CRUDUtil::jsDialogCloseAndParentGridRefresh()); }); goto NCxbo; KRJMF: $Yfg4L->showReset(false)->showSubmit(false)->formClass('wide'); goto f8lsi; On3HW: $Yfg4L->switch('isOpenEnable', '修改公开')->optionsYesNo()->when(true, function (Form $Yfg4L) { $Yfg4L->switch('isOpen', '公开'); }); goto FTqR2; PYr7N: $Yfg4L = Form::make(''); goto KRJMF; NCxbo: } public function delete() { goto RRSl8; Jeav4: QuestionChapterUtil::updateCount($j11xq); goto OhFxj; lqG4B: return Response::jsonSuccess(); goto jnloq; OhFxj: QuestionCatUtil::updateCount($sHyeq); goto PDGIG; zdyh9: foreach (CRUDUtil::ids() as $WuEXg) { goto fpEEk; wNODc: if ($BEdDh['code']) { ModelUtil::transactionRollback(); return Response::send(-1, $BEdDh['msg']); } goto RxE_1; fpEEk: $BEdDh = QuestionUtil::isQuestionDeletable($WuEXg); goto wNODc; VwtsU: QuestionUtil::deleteQuestion($WuEXg); goto C4S2h; RxE_1: $hd5k9 = QuestionUtil::get($WuEXg); goto VwtsU; C4S2h: $j11xq[] = $hd5k9['chapterId']; goto TX1GY; TX1GY: $sHyeq[] = $hd5k9['catId']; goto sN2XT; sN2XT: } goto Jeav4; OJ_J_: $sHyeq = array(); goto EW_Mx; d03rG: $j11xq = array(); goto OJ_J_; PDGIG: ModelUtil::transactionCommit(); goto lqG4B; EW_Mx: ModelUtil::transactionBegin(); goto zdyh9; RRSl8: AdminPermission::demoCheck(); goto d03rG; jnloq: } public function add() { return $this->addOrEdit(0); } public function edit() { goto ctvkB; quhGl: if (Request::isPost()) { AdminPermission::demoCheck(); switch ($bz1sB->getTrimString('_action')) { case 'itemCellEdit': goto tpSdn; tpSdn: $WuEXg = CRUDUtil::id(); goto Y3kZ8; AZgBV: $FZI9y = $bz1sB->getTrimString('column'); goto VY7Ry; Y3kZ8: BizException::throwsIfEmpty('ID为空', $WuEXg); goto AZgBV; X9Y6R: return Response::generateSuccess(); goto wBrQJ; V3aON: ModelUtil::update('question', $WuEXg, array($FZI9y => $WZC9G)); goto X9Y6R; VY7Ry: $WZC9G = $bz1sB->getTrimString('value'); goto oKvV5; oKvV5: BizException::throwsIf('数据异常', !in_array($FZI9y, array('isOpen'))); goto V3aON; wBrQJ: } } goto roI2t; ctvkB: $bz1sB = InputPackage::buildFromInput(); goto quhGl; roI2t: return $this->addOrEdit(CRUDUtil::id()); goto F2Jvd; F2Jvd: } private function addOrEdit($wa91I) { goto Q22uT; gFZ3F: if ($wa91I) { goto HlqEy; sal3V: $GeXSC['analysis'] = $uLq7d['analysis']; goto Symmm; SaK8d: $GeXSC['source'] = $hd5k9['source']; goto H26Cc; V5gOq: $GeXSC['isOpen'] = boolval($hd5k9['isOpen']); goto xiqlc; Symmm: switch ($hd5k9['type']) { case QuestionType::SINGLE_CHOICE: goto GJNHg; l1QV_: foreach (ModelUtil::all('question_option', array('questionId' => $hd5k9['id']), array('*'), array('id', 'asc')) as $REa1I) { $m7iz2[] = array('isAnswer' => $REa1I['isAnswer'] ? true : false, 'option' => $REa1I['option']); } goto bKe8u; bKe8u: $GeXSC['singleChoiceOption'] = $m7iz2; goto IRn2O; GJNHg: $m7iz2 = array(); goto l1QV_; IRn2O: break; goto Bt8Xz; Bt8Xz: case QuestionType::MULTI_CHOICES: goto R8h7k; R8h7k: $m7iz2 = array(); goto TPiGS; TPiGS: foreach (ModelUtil::all('question_option', array('questionId' => $hd5k9['id']), array('*'), array('id', 'asc')) as $REa1I) { $m7iz2[] = array('isAnswer' => $REa1I['isAnswer'] ? true : false, 'option' => $REa1I['option']); } goto CIUIi; CIUIi: $GeXSC['multiChoicesOption'] = $m7iz2; goto tJ3sp; tJ3sp: break; goto GElcX; GElcX: case QuestionType::TRUE_FALSE: goto aC_F8; pj_uN: break; goto oWliB; xVD7q: $GeXSC['trueFalseOption'] = $m7iz2; goto pj_uN; aC_F8: $m7iz2 = array(); goto G4i4X; G4i4X: foreach (ModelUtil::all('question_option', array('questionId' => $hd5k9['id']), array('*'), array('id', 'asc')) as $REa1I) { $m7iz2[] = array('isAnswer' => $REa1I['isAnswer'] ? true : false, 'option' => $REa1I['option']); } goto xVD7q; oWliB: case QuestionType::FILL: $GeXSC['fillAnswer'] = ModelUtil::model('question_answer')->where(array('questionId' => $hd5k9['id']))->orderBy('id', 'asc')->get()->toArray(); break; case QuestionType::TEXT: goto IfqP3; g4Btr: break; goto Lc6Le; IfqP3: $mUG1O = ModelUtil::get('question_answer', array('questionId' => $hd5k9['id'])); goto YVBjj; YVBjj: $GeXSC['textAnswer'] = array(array('answer' => $mUG1O['answer'])); goto g4Btr; Lc6Le: case QuestionType::GROUP: goto gfqaR; AikLT: foreach ($hNwME as $WyIMU) { goto HaQWw; JMFl2: $GeXSC['items'][] = $REa1I; goto Nbx3V; O2COI: $REa1I['question'] = $WyIMU['question']; goto ag599; ag599: $REa1I['type'] = $WyIMU['type']; goto qnZUA; qnZUA: switch ($REa1I['type']) { case QuestionType::SINGLE_CHOICE: goto eZNSA; ns9M5: break; goto l_IA3; FC1jU: foreach ($REa1I['singleChoiceOption'] as &$InfBU) { $InfBU['isAnswer'] = $InfBU['isAnswer'] ? true : false; } goto ns9M5; eZNSA: $REa1I['singleChoiceOption'] = ModelUtil::all('question_option', array('questionId' => $WyIMU['id']), array('*'), array('id', 'asc')); goto FC1jU; l_IA3: case QuestionType::MULTI_CHOICES: goto tGZr_; tGZr_: $REa1I['multiChoicesOption'] = ModelUtil::all('question_option', array('questionId' => $WyIMU['id']), array('*'), array('id', 'asc')); goto rvQkY; rvQkY: foreach ($REa1I['multiChoicesOption'] as &$InfBU) { $InfBU['isAnswer'] = $InfBU['isAnswer'] ? true : false; } goto khvCX; khvCX: break; goto iTDR2; iTDR2: case QuestionType::TRUE_FALSE: goto Gt4nV; Nsg1N: break; goto dLH5p; BS1hi: foreach ($REa1I['trueFalseOption'] as &$InfBU) { $InfBU['isAnswer'] = $InfBU['isAnswer'] ? true : false; } goto Nsg1N; Gt4nV: $REa1I['trueFalseOption'] = ModelUtil::all('question_option', array('questionId' => $WyIMU['id']), array('*'), array('id', 'asc')); goto BS1hi; dLH5p: case QuestionType::FILL: $REa1I['fillAnswer'] = ModelUtil::model('question_answer')->where(array('questionId' => $WyIMU['id']))->orderBy('id', 'asc')->get()->toArray(); break; case QuestionType::TEXT: goto YpDQu; Eujha: break; goto RPh2h; YpDQu: $mUG1O = ModelUtil::get('question_answer', array('questionId' => $WyIMU['id'])); goto kkNBW; kkNBW: $REa1I['textAnswer'] = array(array('answer' => $mUG1O['answer'])); goto Eujha; RPh2h: } goto JMFl2; HaQWw: $REa1I = array(); goto O2COI; Nbx3V: } goto JAml7; JAml7: break; goto RAvza; d1WLP: $hNwME = ModelUtil::model('question')->where(array('parentId' => $hd5k9['id']))->orderBy('id', 'asc')->get()->toArray(); goto AikLT; gfqaR: $GeXSC['items'] = array(); goto d1WLP; RAvza: } goto pwlRo; HlqEy: $hd5k9 = ModelUtil::get('question', array('id' => $wa91I)); goto RuWA3; NwnFc: $uLq7d = ModelUtil::get('question_analysis', array('questionId' => $hd5k9['id'])); goto sal3V; xiqlc: $GeXSC['type'] = $hd5k9['type']; goto SaK8d; kKqHo: $GeXSC['tag'] = TagUtil::string2Array($hd5k9['tag']); goto xoi5G; xoi5G: foreach ($GeXSC['tag'] as &$caCQe) { $caCQe = intval($caCQe); } goto NwnFc; RuWA3: $GeXSC['catId'] = $hd5k9['catId']; goto X3tYa; H26Cc: $GeXSC['question'] = $hd5k9['question']; goto kKqHo; X3tYa: $GeXSC['chapterId'] = $hd5k9['chapterId']; goto V5gOq; pwlRo: } goto j6Qy3; Yjmi9: if ($wa91I > 0 && ModuleManager::isModuleInstalled('Paper') && ($rpQZV = ModelUtil::get('paper_exam_question', array('questionId' => $wa91I)))) { $cNy22 = ModelUtil::get('paper_exam', array('id' => $rpQZV['examId'])); $vf0sP = ModelUtil::get('paper', array('id' => $cNy22['paperId'])); } goto eOQFS; j6Qy3: $vf0sP = null; goto Yjmi9; oNWKM: $GeXSC = array('id' => $wa91I, 'catId' => intval(Session::get('questionLastQuestionAddCatId')), 'chapterId' => intval(Session::get('questionLastQuestionAddChapterId')), 'isOpen' => boolval(Session::get('questionLastQuestionAddIsOpen', true)), 'type' => intval(Session::get('questionLastQuestionAddType', QuestionType::SINGLE_CHOICE)), 'source' => '', 'question' => '', 'tag' => array(), 'analysis' => '', 'singleChoiceOption' => array(array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => '')), 'multiChoicesOption' => array(array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => ''), array('isAnswer' => false, 'option' => '')), 'trueFalseOption' => array(array('isAnswer' => false, 'option' => '正确'), array('isAnswer' => false, 'option' => '错误')), 'fillAnswer' => array(array('answer' => '')), 'textAnswer' => array(array('answer' => '')), 'items' => array()); goto gFZ3F; Q22uT: if (Request::isPost()) { goto My8Po; TTW4z: if ($wa91I) { $Da1nS = ModelUtil::values('question', 'id', array('parentId' => $wa91I)); if (!empty($Da1nS)) { foreach ($Da1nS as $s0TP6) { goto cv9sk; D2Pdg: ModelUtil::delete('question_analysis', array('questionId' => $s0TP6)); goto RuZgd; tyzWK: ModelUtil::delete('question_option', array('questionId' => $s0TP6)); goto hx46W; cv9sk: ModelUtil::delete('question', array('id' => $s0TP6)); goto tyzWK; hx46W: ModelUtil::delete('question_answer', array('questionId' => $s0TP6)); goto D2Pdg; RuZgd: } } } goto zeaW6; hm6XO: BizException::throwsIfEmpty('分类不能为空', $hd5k9['chapterId']); goto arLPC; Clao2: QuestionCatUtil::updateCount($sHyeq); goto Sk88G; Nx0iJ: if ($wa91I && ModelUtil::exists('question_analysis', array('questionId' => $wa91I))) { ModelUtil::update('question_analysis', array('questionId' => $hd5k9['id']), $uLq7d); } else { $uLq7d['questionId'] = $hd5k9['id']; ModelUtil::insert('question_analysis', $uLq7d); } goto VlzOv; HV9jS: $hd5k9['tag'] = TagUtil::array2String($bz1sB->getArray('tag')); goto t6wlP; WVRnx: $hd5k9 = array(); goto zbsc2; zeaW6: foreach ($hNwME as $WyIMU) { $HwPLP = ModelUtil::insert('question', array('alias' => strtolower(Str::random(16)), 'catId' => 0, 'chapterId' => 0, 'isOpen' => $hd5k9['isOpen'], 'parentId' => $hd5k9['id'], 'question' => $WyIMU['question'], 'type' => $WyIMU['type'], 'itemCount' => $WyIMU['itemCount'], 'clickCount' => 0, 'testCount' => 0, 'passCount' => 0)); switch ($WyIMU['type']) { case QuestionType::SINGLE_CHOICE: foreach ($WyIMU['singleChoiceOption'] as $InfBU) { ModelUtil::insert('question_option', array('questionId' => $HwPLP['id'], 'option' => $InfBU['option'], 'isAnswer' => $InfBU['isAnswer'] ? true : false)); } break; case QuestionType::MULTI_CHOICES: foreach ($WyIMU['multiChoicesOption'] as $InfBU) { ModelUtil::insert('question_option', array('questionId' => $HwPLP['id'], 'option' => $InfBU['option'], 'isAnswer' => $InfBU['isAnswer'] ? true : false)); } break; case QuestionType::TRUE_FALSE: foreach ($WyIMU['trueFalseOption'] as $InfBU) { ModelUtil::insert('question_option', array('questionId' => $HwPLP['id'], 'option' => $InfBU['option'], 'isAnswer' => $InfBU['isAnswer'] ? true : false)); } break; case QuestionType::FILL: foreach ($WyIMU['fillAnswer'] as $yifft) { ModelUtil::insert('question_answer', array('questionId' => $HwPLP['id'], 'answer' => $yifft['answer'])); } break; case QuestionType::TEXT: foreach ($WyIMU['textAnswer'] as $yifft) { ModelUtil::insert('question_answer', array('questionId' => $HwPLP['id'], 'answer' => $yifft['answer'])); } break; } } goto drJ14; TuCm1: $hd5k9['question'] = $bz1sB->getTrimString('question'); goto q1m92; GHLhP: if ($wa91I) { goto sgJjC; rwATq: $hd5k9 = ModelUtil::get('question', $wa91I); goto s2wgL; h7bvs: $hd5k9['status'] = QuestionStatus::VERIFY_SUCCESS; goto EluEB; EluEB: ModelUtil::update('question', array('id' => $wa91I), $hd5k9); goto rwATq; zhM03: BizException::throwsIfEmpty('记录不存在', $VTgbq); goto hWfKK; hWfKK: $j11xq[] = $VTgbq['chapterId']; goto nnvUw; nnvUw: $sHyeq[] = $VTgbq['catId']; goto h7bvs; sgJjC: $VTgbq = ModelUtil::get('question', array('id' => $wa91I)); goto zhM03; s2wgL: } else { goto AhAaP; l7DCG: $hd5k9['passCount'] = 0; goto P7iim; AhAaP: $hd5k9['memberUserId'] = 0; goto xMUrO; P7iim: $hd5k9['status'] = QuestionStatus::VERIFY_SUCCESS; goto uvH_5; Vux9Q: Session::put('questionLastQuestionAddType', $hd5k9['type']); goto itGv2; xMUrO: $hd5k9['adminUserId'] = Admin::id(); goto YdDJT; itGv2: Session::put('questionLastQuestionAddCatId', $hd5k9['catId']); goto SDFSn; YdDJT: $hd5k9['parentId'] = 0; goto f9OWo; SDFSn: Session::put('questionLastQuestionAddChapterId', $hd5k9['chapterId']); goto oL7PN; uvH_5: $hd5k9['alias'] = strtolower(Str::random(16)); goto o7GfE; oL7PN: Session::put('questionLastQuestionAddIsOpen', boolval($hd5k9['isOpen'])); goto xir9T; f9OWo: $hd5k9['clickCount'] = 0; goto E2Jl2; o7GfE: $hd5k9 = ModelUtil::insert('question', $hd5k9); goto Vux9Q; E2Jl2: $hd5k9['testCount'] = 0; goto l7DCG; xir9T: } goto UD7yD; y_2I6: BizException::throwsIfEmpty('类别不能为空', $hd5k9['catId']); goto hm6XO; IctO7: BizException::throwsIf('题目标签为空', empty($hd5k9['tag'])); goto DddbY; faSkH: $hd5k9['type'] = $bz1sB->getType('type', QuestionType::class); goto HV9jS; ncmcT: ModelUtil::transactionBegin(); goto GHLhP; nqRGc: $uLq7d['analysis'] = trim($bz1sB->getTrimString('analysis')); goto Tug3b; Sk88G: SuperSearchUtil::syncQuestions(array($hd5k9)); goto Nx0iJ; TMLwj: foreach ($T30Xt as $YQGo1) { $YQGo1['questionId'] = $hd5k9['id']; ModelUtil::insert('question_option', $YQGo1); } goto Qdsl6; zDb40: $j11xq = array(); goto mPisM; qHSI1: foreach ($hqHE2 as $mUG1O) { $mUG1O['questionId'] = $hd5k9['id']; ModelUtil::insert('question_answer', $mUG1O); } goto TTW4z; ef5Y6: $hd5k9['chapterId'] = $bz1sB->getInteger('chapterId'); goto iiFRY; drJ14: QuestionUtil::buildQuestionMap($hd5k9['id'], TagUtil::string2Array($hd5k9['tag'])); goto e5EbK; q1m92: $hd5k9['source'] = $bz1sB->getTrimString('source'); goto faSkH; ejP4M: $hd5k9['questionText'] = QuestionUtil::text($hd5k9, $T30Xt, $hNwME); goto HwP4g; Ti_d0: $uLq7d = array(); goto nqRGc; zbsc2: $hd5k9['catId'] = $bz1sB->getInteger('catId'); goto ef5Y6; c9Mjj: $hqHE2 = array(); goto G6HP7; r2PVa: $bz1sB = InputPackage::buildFromInputJson('data'); goto WVRnx; DddbY: switch ($hd5k9['type']) { case QuestionType::SINGLE_CHOICE: case QuestionType::MULTI_CHOICES: case QuestionType::TRUE_FALSE: goto hwU3C; CU4m1: $T30Xt = array(); goto X3tPs; vxVbu: $FRSB4 = false; goto KYL1H; Ik3Wl: BizException::throwsIf('题目未设置答案', !$FRSB4); goto sucDp; MUh4H: break; goto QGcl2; sucDp: $hd5k9['itemCount'] = 1; goto MUh4H; hwU3C: $lnA_T = array(QuestionType::SINGLE_CHOICE => 'singleChoiceOption', QuestionType::MULTI_CHOICES => 'multiChoicesOption', QuestionType::TRUE_FALSE => 'trueFalseOption'); goto pBYYb; pBYYb: $m7iz2 = $bz1sB->getArray($lnA_T[$hd5k9['type']]); goto CU4m1; KYL1H: foreach ($T30Xt as $YQGo1) { if ($YQGo1['isAnswer']) { $FRSB4 = true; break; } } goto Ik3Wl; ffjBb: BizException::throwsIf('题目选项为空', empty($T30Xt)); goto vxVbu; X3tPs: foreach ($m7iz2 as $InfBU) { goto VUevL; VCfBq: $YQGo1 = array(); goto tP1Ay; CcM1z: $T30Xt[] = $YQGo1; goto BbKA7; VUevL: $pPyhW = trim($InfBU['option']); goto sBeUt; FDqXV: $YQGo1['option'] = $pPyhW; goto CcM1z; tP1Ay: $YQGo1['isAnswer'] = $InfBU['isAnswer'] ? true : false; goto FDqXV; sBeUt: if (empty($pPyhW)) { continue; } goto VCfBq; BbKA7: } goto ffjBb; QGcl2: case QuestionType::FILL: goto qTwch; ZeGFk: $hd5k9['itemCount'] = count($hqHE2); goto fwxwo; qTwch: foreach ($bz1sB->getArray('fillAnswer', array()) as $yifft) { $hqHE2[] = array('answer' => $yifft['answer']); } goto D0j58; fwxwo: break; goto ihWGk; D0j58: BizException::throwsIf('题目答案为空', empty($hqHE2)); goto ZeGFk; ihWGk: case QuestionType::TEXT: goto XCbj8; npC8q: $hd5k9['itemCount'] = 1; goto jD9jL; A4tZj: $hqHE2[] = array('answer' => $GanF7[0]['answer']); goto npC8q; N4Usr: BizException::throwsIf('题目答案为空', empty($GanF7[0]['answer'])); goto A4tZj; XCbj8: $GanF7 = $bz1sB->getArray('textAnswer', array()); goto N4Usr; jD9jL: break; goto M9eSa; M9eSa: case QuestionType::GROUP: goto BJyPM; Y1xKF: break; goto F7UcF; tI0NX: BizException::throwsIf('题目为空', empty($hNwME)); goto UBSUc; BJyPM: $gGxjn = 0; goto OPukw; OPukw: foreach ($bz1sB->getArray('items', array()) as $x1Lvn => $WyIMU) { goto VZP7f; wXleK: $hNwME[] = $REa1I; goto hTQND; uqoRl: $REa1I['question'] = $WyIMU['question']; goto LKhgR; LKhgR: $REa1I['type'] = $WyIMU['type']; goto eZ6m3; VZP7f: $REa1I = array(); goto uqoRl; eZ6m3: switch ($REa1I['type']) { case QuestionType::SINGLE_CHOICE: goto s4y1u; op51J: $gGxjn++; goto yzRMF; yzRMF: break; goto qkt1f; s4y1u: $REa1I['singleChoiceOption'] = $WyIMU['singleChoiceOption']; goto UlC1b; UlC1b: $REa1I['itemCount'] = 1; goto op51J; qkt1f: case QuestionType::MULTI_CHOICES: goto NBbIY; vn8ZX: $REa1I['itemCount'] = 1; goto upBLB; upBLB: $gGxjn++; goto TB0qP; NBbIY: $REa1I['multiChoicesOption'] = $WyIMU['multiChoicesOption']; goto vn8ZX; TB0qP: break; goto aGN7p; aGN7p: case QuestionType::TRUE_FALSE: goto KvEnG; iI_Hm: break; goto ldcby; xeJFn: $gGxjn++; goto iI_Hm; GOMqj: $REa1I['itemCount'] = 1; goto xeJFn; KvEnG: $REa1I['trueFalseOption'] = $WyIMU['trueFalseOption']; goto GOMqj; ldcby: case QuestionType::FILL: goto ihKWE; OB6Xr: $REa1I['itemCount'] = count($REa1I['fillAnswer']); goto woPn0; ihKWE: $REa1I['fillAnswer'] = $WyIMU['fillAnswer']; goto OB6Xr; woPn0: $gGxjn += count($REa1I['fillAnswer']); goto X5TaJ; X5TaJ: break; goto iLAhb; iLAhb: case QuestionType::TEXT: goto bCv8t; bCv8t: $REa1I['textAnswer'] = $WyIMU['textAnswer']; goto kt_po; zyAFV: $gGxjn++; goto fqF1b; kt_po: $REa1I['itemCount'] = 1; goto zyAFV; fqF1b: break; goto z7FEB; z7FEB: } goto wXleK; hTQND: } goto tI0NX; UBSUc: $hd5k9['itemCount'] = $gGxjn; goto Y1xKF; F7UcF: default: return Response::send(-1, '题目类型未能识别'); } goto DlO5O; e5EbK: ModelUtil::transactionCommit(); goto FK4aI; UD7yD: $j11xq[] = $hd5k9['chapterId']; goto GUr8N; KXupW: $UYUrz = CRUDUtil::jsDialogCloseAndParentGridRefresh(); goto tWXLd; G6HP7: $hNwME = array(); goto y_2I6; BKevw: $d0VbK = $bz1sB->getBoolean('next'); goto KXupW; Tug3b: $T30Xt = array(); goto c9Mjj; HwP4g: if (!$wa91I && QuestionUtil::isDuplicated($hd5k9, $T30Xt, $hNwME)) { return Response::generate(1, '题目重复'); } goto zDb40; mPisM: $sHyeq = array(); goto ncmcT; dcPkJ: return Response::send(0, null, null, $UYUrz); goto yUE53; GUr8N: $sHyeq[] = $hd5k9['catId']; goto EMMFb; arLPC: BizException::throwsIf('题目不能为空', empty($hd5k9['question'])); goto IctO7; tWXLd: if ($d0VbK) { $UYUrz = action('\\' . __CLASS__ . '@add'); } else { if (View::shared('_isTab')) { $UYUrz = '[tab-close]'; } } goto dcPkJ; FK4aI: SiteUrlProvider::update(modstart_web_url('question/view/' . $hd5k9['alias']), $hd5k9['question'], array('biz' => 'question')); goto BKevw; t6wlP: $hd5k9['itemCount'] = 0; goto Ti_d0; iiFRY: $hd5k9['isOpen'] = $bz1sB->getBoolean('isOpen'); goto TuCm1; VlzOv: if ($wa91I) { ModelUtil::delete('question_option', array('questionId' => $hd5k9['id'])); } goto TMLwj; Qdsl6: if ($wa91I) { ModelUtil::delete('question_answer', array('questionId' => $hd5k9['id'])); } goto qHSI1; My8Po: AdminPermission::demoCheck(); goto r2PVa; EMMFb: QuestionChapterUtil::updateCount($j11xq); goto Clao2; DlO5O: $E2pdy = array('id' => $wa91I, 'question' => $hd5k9, 'analysis' => $uLq7d, 'questionOptions' => $T30Xt, 'questionAnswers' => $hqHE2, 'questionItems' => $hNwME); goto ejP4M; yUE53: } goto oNWKM; eOQFS: return view('module::Question.View.admin.question.edit', array('pageTitle' => '题目编辑', 'data' => $GeXSC, 'paperUsed' => $vf0sP)); goto yFu9H; yFu9H: } public function select(AdminDialogPage $gETpv) { goto Jqeqk; ELavw: CRUDUtil::registerGridResource($rWlsS, '\\' . __CLASS__); goto P3Ywn; bUaAb: $rWlsS->disableCUD(); goto oNvop; P3Ywn: if (Request::isPost()) { return $rWlsS->request(); } goto iR4uM; Jqeqk: $rWlsS = $this->grid(); goto bUaAb; oNvop: $rWlsS->canBatchSelect(true); goto rWopn; iR4uM: return $gETpv->pageTitle('题目选择')->body($rWlsS); goto uO4Rd; rWopn: $rWlsS->repositoryFilter(function (RepositoryFilter $qM7YH) { }); goto ELavw; uO4Rd: } public function preview() { goto WcOIO; WcOIO: $Da1nS = CRUDUtil::ids(); goto ryceI; ryceI: $v39Ud = array(); goto iiXgz; iiXgz: foreach ($Da1nS as $wa91I) { goto CYDn1; T6vlm: $v39Ud[] = $REa1I; goto e0uO7; subD2: $REa1I['score'] = $jloZR; goto T6vlm; kXaHL: $dqC_A = QuestionUtil::getQuestionData($wa91I); goto V8q_j; HKEVp: $REa1I['html'] = view('module::Question.View.public.questionView', $dqC_A)->render(); goto uRuW_; cYl36: $REa1I['itemCount'] = $dqC_A['question']['itemCount']; goto HOuy5; HOuy5: $REa1I['questionData'] = $dqC_A; goto F30O0; E92Zc: $REa1I['id'] = $dqC_A['question']['id']; goto muPYA; pwm_S: for ($l3Jim = 0; $l3Jim < $REa1I['itemCount']; $l3Jim++) { $jloZR[] = 5; } goto subD2; muPYA: $dqC_A['analysisHide'] = true; goto HKEVp; CYDn1: $REa1I = array(); goto kXaHL; uRuW_: $REa1I['text'] = QuestionUtil::textLine($dqC_A['question']); goto cYl36; F30O0: $jloZR = array(); goto pwm_S; V8q_j: if (empty($dqC_A)) { continue; } goto E92Zc; e0uO7: } goto ahR2V; ahR2V: return Response::jsonSuccessData(array('records' => $v39Ud)); goto yxl_D; yxl_D: } public function import() { return view('module::Question.View.admin.question.import', array('pageTitle' => '题目导入')); } }