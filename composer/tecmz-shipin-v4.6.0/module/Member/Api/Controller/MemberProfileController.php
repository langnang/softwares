<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\FormatUtil; use ModStart\Core\Util\TimeUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Auth\MemberUser; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserUpdatedEvent; use Module\Member\Support\MemberLoginCheck; use Module\Member\Util\MemberUtil; use Module\Vendor\Email\MailSendJob; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class MemberProfileController extends ModuleBaseController implements MemberLoginCheck { public function nickname() { goto rhidV; Vd6SS: return Response::generate(0, '修改成功', null, '[reload]'); goto e4mBE; wn6U3: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'nickname')); goto Vd6SS; rhidV: $nIp2z = InputPackage::buildFromInput(); goto XTfUB; UDm8E: if (!CaptchaFacade::check($nIp2z->getTrimString('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto e180O; e180O: $ULXwZ = MemberUtil::changeNickname(MemberUser::id(), $fx1We); goto KrwKk; iDESL: BizException::throwsIfEmpty('昵称为空', $fx1We); goto UDm8E; XTfUB: $fx1We = $nIp2z->getTrimString('nickname'); goto iDESL; KrwKk: BizException::throwsIfResponseError($ULXwZ); goto wn6U3; e4mBE: } public function password() { goto oEEWS; rcLfo: if ($W5UKq != $qK70i) { return Response::generate(-1, '两次新密码输入不一致'); } goto eEQvg; mQHPu: $W5UKq = $nIp2z->getTrimString('passwordNew'); goto JdpV_; ZuK0O: if ($ULXwZ['code']) { return Response::generate(-1, $ULXwZ['msg']); } goto sfbV5; ugFkQ: $ynJFC = $nIp2z->getTrimString('passwordOld'); goto mQHPu; MDhJr: return Response::generate(0, '修改成功', null, '[reload]'); goto tRt5z; oEEWS: $nIp2z = InputPackage::buildFromInput(); goto ugFkQ; eEQvg: $OYXQL = MemberUser::get(); goto nG3ta; JdpV_: $qK70i = $nIp2z->getTrimString('passwordRepeat'); goto rcLfo; nG3ta: if (empty($OYXQL['password'])) { $ULXwZ = MemberUtil::changePassword(MemberUser::id(), $W5UKq, null, true); } else { $ULXwZ = MemberUtil::changePassword(MemberUser::id(), $W5UKq, $ynJFC); } goto ZuK0O; sfbV5: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'password')); goto MDhJr; tRt5z: } public function avatar() { goto QHkNt; lrfvV: if (empty($m7s5I)) { return Response::generate(-1, '头像内容为空'); } goto t1tSO; t1tSO: switch ($nIp2z->getTrimString('type')) { case 'cropper': goto ehQHI; ehQHI: $Gpn3c = null; goto rCIvU; fGvwN: $ULXwZ = MemberUtil::setAvatar(MemberUser::id(), $m7s5I, $Gpn3c); goto sD6Uj; z8DaA: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto D271A; UWv69: if (empty($Gpn3c)) { return Response::generate(-1, '头像数据为空'); } goto Gv0L3; JBNBl: if (empty($m7s5I)) { return Response::generate(-1, '头像内容为空'); } goto fGvwN; Gv0L3: $m7s5I = @base64_decode($m7s5I); goto JBNBl; sD6Uj: if ($ULXwZ['code']) { return $ULXwZ; } goto z8DaA; D271A: return Response::generate(0, '保存成功', null, '[reload]'); goto kiq2A; rCIvU: if (Str::startsWith($m7s5I, 'data:image/jpeg;base64,')) { $Gpn3c = 'jpg'; $m7s5I = substr($m7s5I, strlen('data:image/jpeg;base64,')); } else { if (Str::startsWith($m7s5I, 'data:image/png;base64,')) { $Gpn3c = 'png'; $m7s5I = substr($m7s5I, strlen('data:image/png;base64,')); } } goto UWv69; kiq2A: default: goto KS7bl; XKEZq: if (empty($m7s5I)) { return Response::generate(-1, '读取头像文件失败:-2'); } goto AUecl; R5k0D: if ($ULXwZ['code']) { return $ULXwZ; } goto uFfq_; XbjRo: if (!in_array($gggvu, config('data.upload.image.extensions'))) { return Response::generate(-1, '头像格式不合法'); } goto X6Dim; j4xnx: return Response::generate(0, '保存成功', null, '[reload]'); goto OyGUL; uFfq_: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto j4xnx; Z2__z: if (empty($m7s5I)) { return Response::generate(-1, '读取头像文件失败:-1'); } goto cs29b; X6Dim: $m7s5I = FileUtil::safeGetContent($m7s5I); goto XKEZq; AUecl: $ULXwZ = MemberUtil::setAvatar(MemberUser::id(), $m7s5I, $gggvu); goto R5k0D; cs29b: $gggvu = FileUtil::extension($m7s5I); goto XbjRo; KS7bl: $m7s5I = FileUtil::savePathToLocalTemp($m7s5I); goto Z2__z; OyGUL: } goto MeaWx; QHkNt: $nIp2z = InputPackage::buildFromInput(); goto IAZXf; IAZXf: $m7s5I = $nIp2z->getTrimString('avatar'); goto lrfvV; MeaWx: } public function captchaRaw() { return CaptchaFacade::create('default'); } public function captcha() { $Bvi48 = $this->captchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Bvi48->getOriginalContent()))); } public function email() { goto DZAWA; dG_N8: if (Session::get('memberProfileEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto orvzk; liYW8: $zWNHv = MemberUtil::getByEmail($qAkQN); goto B7xha; orvzk: if ($qAkQN != Session::get('memberProfileEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto liYW8; pm9Qm: if (empty($RiYZz)) { return Response::generate(-1, '验证码不能为空'); } goto OW9z0; B7xha: if (!empty($zWNHv)) { if ($zWNHv['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($zWNHv['id'] == MemberUser::id() && $zWNHv['email'] == $qAkQN) { if (!empty($zWNHv['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto SxHoX; Lq_eF: if (empty($qAkQN)) { return Response::generate(-1, '邮箱不能为空'); } goto LD81P; AJIW0: Session::forget('memberProfileEmailVerifyTime'); goto W8dMN; LD81P: if (!FormatUtil::isEmail($qAkQN)) { return Response::generate(-1, '邮箱格式不正确'); } goto pm9Qm; c0QQh: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'email')); goto zswct; JGGMf: return Response::generate(0, '修改成功', null, '[reload]'); goto qZKiu; zswct: Session::forget('memberProfileEmailVerify'); goto AJIW0; W8dMN: Session::forget('memberProfileEmail'); goto JGGMf; OW9z0: if ($RiYZz != Session::get('memberProfileEmailVerify')) { return Response::generate(-1, '验证码不正确'); } goto dG_N8; RpMtJ: $RiYZz = $nIp2z->getTrimString('verify'); goto Lq_eF; SxHoX: MemberUtil::update(MemberUser::id(), array('emailVerified' => true, 'email' => $qAkQN)); goto c0QQh; DZAWA: $nIp2z = InputPackage::buildFromInput(); goto pnu5g; pnu5g: $qAkQN = $nIp2z->getEmail('email'); goto RpMtJ; qZKiu: } public function emailVerify() { goto qOaPn; df60W: if (empty($qAkQN)) { return Response::generate(-1, '邮箱不能为空'); } goto cY3X1; cY3X1: if (!FormatUtil::isEmail($qAkQN)) { return Response::generate(-1, '邮箱格式不正确'); } goto l_VBy; qOaPn: $qAkQN = Input::get('target'); goto df60W; Mn4lR: if (Session::get('memberProfileEmailVerifyTime') && $qAkQN == Session::get('memberProfileEmail')) { if (Session::get('memberProfileEmailVerifyTime') + 60 * 10 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto H1Giy; KyR87: return Response::generate(0, '验证码发送成功'); goto iMi_L; u_GBh: Session::put('memberProfileEmail', $qAkQN); goto Ez0xi; KLemZ: Session::put('memberProfileEmailVerifyTime', time()); goto u_GBh; MMmXQ: $zWNHv = MemberUtil::getByEmail($qAkQN); goto cudPz; Ez0xi: MailSendJob::create($qAkQN, '验证码', 'verify', array('code' => $RiYZz)); goto KyR87; H1Giy: $RiYZz = rand(100000, 999999); goto ncD6A; ncD6A: Session::put('memberProfileEmailVerify', $RiYZz); goto KLemZ; cudPz: if (!empty($zWNHv)) { if ($zWNHv['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($zWNHv['id'] == MemberUser::id() && $zWNHv['email'] == $qAkQN) { if (!empty($zWNHv['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto Mn4lR; l_VBy: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto MMmXQ; iMi_L: } public function phone() { goto S2L7K; uBrn0: MemberUtil::update(MemberUser::id(), array('phoneVerified' => true, 'phone' => $TR7J6)); goto yJRfj; yJRfj: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'phone')); goto aioXX; yLPlN: if (!empty($zWNHv)) { if ($zWNHv['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($zWNHv['id'] == MemberUser::id() && $zWNHv['phone'] == $TR7J6) { if (!empty($zWNHv['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto uBrn0; O6bwf: if (Session::get('memberProfilePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto imAre; KTK3Q: Session::forget('memberProfilePhoneVerifyTime'); goto dg40Q; imAre: if ($TR7J6 != Session::get('memberProfilePhone')) { return Response::generate(-1, '两次手机不一致'); } goto W92y8; S2L7K: $nIp2z = InputPackage::buildFromInput(); goto txAiL; tayoA: if (!FormatUtil::isPhone($TR7J6)) { return Response::generate(-1, '手机格式不正确'); } goto VVmqG; zJM7b: $RiYZz = $nIp2z->getTrimString('verify'); goto ZQL9W; aioXX: Session::forget('memberProfilePhoneVerify'); goto KTK3Q; ZQL9W: if (empty($TR7J6)) { return Response::generate(-1, '手机不能为空'); } goto tayoA; txAiL: $TR7J6 = $nIp2z->getPhone('phone'); goto zJM7b; ebs_3: return Response::generate(0, '修改成功', null, '[reload]'); goto NYpWi; EmXP6: if ($RiYZz != Session::get('memberProfilePhoneVerify')) { return Response::generate(-1, '验证码不正确'); } goto O6bwf; dg40Q: Session::forget('memberProfilePhone'); goto ebs_3; VVmqG: if (empty($RiYZz)) { return Response::generate(-1, '验证码不能为空'); } goto EmXP6; W92y8: $zWNHv = MemberUtil::getByPhone($TR7J6); goto yLPlN; NYpWi: } public function phoneVerify() { goto v_B5p; v_B5p: $TR7J6 = Input::get('target'); goto G_0NK; XbiKl: $RiYZz = rand(100000, 999999); goto eLu95; uLrUp: if (!FormatUtil::isPhone($TR7J6)) { return Response::generate(-1, '手机格式不正确'); } goto IjR6x; hWM_f: Session::put('memberProfilePhone', $TR7J6); goto gr2Ln; edENV: return Response::generate(0, '验证码发送成功'); goto V4l7h; UZWnn: Session::put('memberProfilePhoneVerifyTime', time()); goto hWM_f; LuMsh: if (Session::get('memberProfilePhoneVerifyTime') && $TR7J6 == Session::get('memberProfilePhone')) { if (Session::get('memberProfilePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto XbiKl; eLu95: Session::put('memberProfilePhoneVerify', $RiYZz); goto UZWnn; Vj7B0: $zWNHv = MemberUtil::getByPhone($TR7J6); goto mWGIZ; mWGIZ: if (!empty($zWNHv)) { if ($zWNHv['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($zWNHv['id'] == MemberUser::id() && $zWNHv['phone'] == $TR7J6) { if (!empty($zWNHv['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto LuMsh; gr2Ln: SmsUtil::send($TR7J6, 'verify', array('code' => $RiYZz)); goto edENV; IjR6x: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '图片验证码错误'); } goto Vj7B0; G_0NK: if (empty($TR7J6)) { return Response::generate(-1, '手机不能为空'); } goto uLrUp; V4l7h: } public function oauthUnbind() { goto rqAcH; tQuWe: $FmHYg = $nIp2z->getTrimString('type'); goto KtmBI; zk0ss: if ($GyDdX) { MemberUtil::forgetOauth($dxcjQ->oauthKey(), $GyDdX); } goto YmqKh; kRU11: $GyDdX = MemberUtil::getOauthOpenId(MemberUser::id(), $dxcjQ->oauthKey()); goto zk0ss; nmZz5: BizException::throwsIfEmpty('授权方式不存在', $dxcjQ); goto kRU11; rqAcH: $nIp2z = InputPackage::buildFromInput(); goto tQuWe; YmqKh: return Response::generate(0, '解绑成功', null, '[reload]'); goto fLE1A; KtmBI: $dxcjQ = MemberOauth::getOrFail($FmHYg); goto nmZz5; fLE1A: } public function delete() { goto FqCKx; FqCKx: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto jirm3; H5837: return Response::generate(0, '申请注销成功', null, '[reload]'); goto T1pkw; HoE16: if ($OYXQL['deleteAtTime'] > 0) { return Response::generateError('账号正在注销中'); } goto cEv1U; w497h: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => time() + TimeUtil::PERIOD_MONTH)); goto H5837; jirm3: $OYXQL = MemberUser::get(); goto HoE16; p07bJ: $QX9Tc = $nIp2z->getTrimString('agree'); goto d9kgw; d9kgw: BizException::throwsIf('请勾选同意选项', $QX9Tc != 'yes'); goto w497h; cEv1U: $nIp2z = InputPackage::buildFromInput(); goto p07bJ; T1pkw: } public function deleteRevert() { goto APVnn; vUiE7: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => 0)); goto dqfIB; HBsE9: if (empty($OYXQL['deleteAtTime'])) { return Response::generateError('账号没有注销操作'); } goto vUiE7; APVnn: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto SQzNj; SQzNj: $OYXQL = MemberUser::get(); goto HBsE9; dqfIB: return Response::generate(0, '撤销操作成功', null, '[reload]'); goto OGWQi; OGWQi: } }