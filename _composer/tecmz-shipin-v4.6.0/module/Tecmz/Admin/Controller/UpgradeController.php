<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Tecmz\Admin\Controller; use App\Constant\AppConstant; use Chumper\Zipper\Zipper; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use ModStart\Data\DataManager; use Module\Tecmz\Util\UpgradeUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'manual' => '@SystemUpgrade'); private function doFinish($e7tw9, $jUt7q = null) { return Response::generateSuccessData(array('msg' => array_map(function ($qlKQK) { return '<i class="iconfont icon-hr"></i> ' . $qlKQK; }, $e7tw9), 'logs' => $jUt7q, 'finish' => true)); } private function doNext($CfYsf, $e7tw9 = array(), $WAiaw = array()) { goto oqj1U; Cn3O1: $WAiaw = array_merge($nIp2z->getJsonAsInput('data')->all(), $WAiaw); goto RrLKC; oqj1U: $nIp2z = InputPackage::buildFromInput(); goto Cn3O1; RrLKC: return Response::generateSuccessData(array('msg' => array_map(function ($qlKQK) { if (!starts_with($qlKQK, '<')) { $qlKQK = "<span class='ub-text-white'>{$qlKQK}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $qlKQK; }, $e7tw9), 'step' => $CfYsf, 'data' => $WAiaw, 'finish' => false)); goto Yah7T; Yah7T: } public function index() { goto p0Psj; BKxEn: return view('module::Tecmz.View.admin.upgrade'); goto aVrfc; p0Psj: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto dOmbn; dOmbn: if (Request::isPost()) { goto D1d2U; cAJ2Y: switch ($CfYsf) { case 'upgradePackage': goto mFwYn; C5nSt: BizException::throwsIfEmpty('package为空', $S5NA4); goto asRRi; oQWMS: $mc3cG = $suowW->getTrimString('diffContentFile'); goto C5nSt; FCxRT: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $ULXwZ['data']['logs']); goto O0pxv; a15S2: BizException::throwsIfResponseError($ULXwZ); goto FCxRT; asRRi: BizException::throwsIfEmpty('diffContentFile为空', $mc3cG); goto G9TjN; G9TjN: $ULXwZ = UpgradeUtil::upgradePackage($S5NA4, $mc3cG); goto a15S2; mFwYn: $S5NA4 = $suowW->getTrimString('package'); goto oQWMS; O0pxv: case 'downloadPackage': goto ywWro; r_dll: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($ULXwZ['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压升级装包...</span>'), array('package' => $ULXwZ['data']['package'], 'diffContentFile' => $ULXwZ['data']['diffContentFile'])); goto Xdy2x; ywWro: $ULXwZ = UpgradeUtil::downloadPackage($nxg8F, AppConstant::APP, AppConstant::VERSION, $JaZ3s); goto b07Ko; b07Ko: BizException::throwsIfResponseError($ULXwZ); goto r_dll; Xdy2x: case 'checkPackage': goto TLwwa; wH3Sx: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $cLx4V); goto bIj4F; bIj4F: return $this->doNext('downloadPackage', array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检通过</span>', '<span class="ub-text-white">开始下载升级包...</span>')); goto V4iQE; V4iQE: break; goto NoB0z; TLwwa: try { $cLx4V = Artisan::call('migrate'); } catch (\Exception $H8GLS) { $cLx4V = -1; } goto wH3Sx; NoB0z: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $JaZ3s . '</span>', '<span class="ub-text-white">开始预检系统...</span>')); } goto dBvlQ; T9avc: $JaZ3s = $suowW->getTrimString('toVersion'); goto bPtYD; jxsBE: $CfYsf = $nIp2z->getTrimString('step'); goto JrUXX; bPtYD: BizException::throwsIfEmpty('toVersion为空', $JaZ3s); goto cAJ2Y; bMaXv: $nIp2z = InputPackage::buildFromInput(); goto jxsBE; t3Oxh: $suowW = $nIp2z->getJsonAsInput('data'); goto T9avc; JrUXX: $nxg8F = $nIp2z->getTrimString('token'); goto t3Oxh; D1d2U: AdminPermission::demoCheck(); goto bMaXv; dBvlQ: } goto BKxEn; aVrfc: } public function info() { $W1tj0 = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $W1tj0['latestVersion'], 'autoUpgrade' => $W1tj0['autoUpgrade'])); } public function manual() { goto Tbx2w; Tbx2w: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto bgoiH; KWT9q: return view('module::Tecmz.View.admin.upgradeManual'); goto wC4xY; bgoiH: if (Request::isPost()) { goto LsH2e; goEau: $lBl7m->make($NPyIi); goto hUNDt; Xp1fy: $mc3cG = FileUtil::generateLocalTempPath('json'); goto TAERR; TtD2A: FileUtil::safeCleanLocalTemp($mc3cG); goto LsVCi; jZtYo: $ULXwZ = DataManager::preparePathForLocal($bZDiK); goto jzKD1; TAERR: $W00CB = FileUtil::generateLocalTempPath('zip'); goto DIcI8; InWf0: BizException::throwsIf('升级包格式错误', !$lBl7m->contains('package.zip')); goto DGhT4; LsH2e: try { $cLx4V = Artisan::call('migrate'); } catch (\Exception $H8GLS) { $cLx4V = -1; } goto m930M; H2J7B: $ULXwZ = UpgradeUtil::upgradePackage($W00CB, $mc3cG); goto auzZ0; qWx54: file_put_contents($mc3cG, $SJ2bb); goto InWf0; jzKD1: BizException::throwsIfResponseError($ULXwZ); goto hylvT; m930M: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $cLx4V); goto d3hhq; m7nq8: FileUtil::safeCleanLocalTemp($W00CB); goto TtD2A; DIcI8: $lBl7m = new Zipper(); goto goEau; auzZ0: BizException::throwsIfResponseError($ULXwZ); goto S6fK_; CDMSy: $SJ2bb = $lBl7m->getFileContent('config.json'); goto qWx54; bMmSV: file_put_contents($W00CB, $XUE5Y); goto H2J7B; UBHLS: $bZDiK = $nIp2z->getDataTempPath('upgradeZip'); goto d81EU; S6fK_: FileUtil::safeCleanLocalTemp($NPyIi); goto m7nq8; d81EU: BizException::throwsIfEmpty('请上传差量升级包', $bZDiK); goto jZtYo; LsVCi: return Response::generate(0, '操作完成', null, '[reload]'); goto Gqnjs; hUNDt: BizException::throwsIf('升级包格式错误', !$lBl7m->contains('config.json')); goto CDMSy; DGhT4: $XUE5Y = $lBl7m->getFileContent('package.zip'); goto bMmSV; d3hhq: $nIp2z = InputPackage::buildFromInput(); goto UBHLS; hylvT: $NPyIi = $ULXwZ['data']['path']; goto Xp1fy; Gqnjs: } goto KWT9q; wC4xY: } }