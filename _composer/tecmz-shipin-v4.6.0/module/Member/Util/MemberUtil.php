<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Util; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Str; use Intervention\Image\Facades\Image; use ModStart\Core\Assets\AssetsUtil; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\AgentUtil; use ModStart\Core\Util\ArrayUtil; use ModStart\Core\Util\EncodeUtil; use ModStart\Core\Util\FormatUtil; use ModStart\Core\Util\RandomUtil; use ModStart\Data\DataManager; use ModStart\Data\Event\DataFileUploadedEvent; use Module\Member\Events\MemberUserLoginAttemptEvent; use Module\Member\Events\MemberUserLoginFailedEvent; use Module\Member\Type\MemberMessageStatus; use Module\Member\Type\MemberStatus; class MemberUtil { public static function total() { return Cache::remember('MemberUserTotal', 60, function () { return ModelUtil::count('member_user'); }); } public static function get($wQ1uv) { return ModelUtil::get('member_user', array('id' => $wQ1uv)); } public static function getCached($wQ1uv) { return Cache::remember('MemberUser:' . $wQ1uv, 60, function () use($wQ1uv) { return self::get($wQ1uv); }); } public static function processDefault(&$OYXQL) { goto I0B7j; bUUCL: if (empty($OYXQL['nickname'])) { $OYXQL['nickname'] = $OYXQL['username']; } goto mKdfy; rD1X0: if (empty($OYXQL['avatarBig'])) { $OYXQL['avatarBig'] = AssetsUtil::fixFull('asset/image/avatar.png', false); } goto XMaqg; yWXvJ: if (empty($OYXQL['avatarMedium'])) { $OYXQL['avatarMedium'] = AssetsUtil::fixFull('asset/image/avatar.png', false); } goto rD1X0; I0B7j: if (empty($OYXQL)) { return; } goto bUUCL; mKdfy: if (empty($OYXQL['avatar'])) { $OYXQL['avatar'] = AssetsUtil::fixFull('asset/image/avatar.png', false); } goto yWXvJ; XMaqg: } private static function processBasicFields($jgPzT) { goto L7XyU; BCQZG: if (null === $jgPzT) { $jgPzT = $jYMen; } else { goto HJzn2; IjuA7: foreach ($jgPzT as $hBBDL) { if ('<basic>' == $hBBDL) { $I03pJ = array_merge($I03pJ, $jYMen); } else { $I03pJ[] = $hBBDL; } } goto mxf2G; mxf2G: $jgPzT = $I03pJ; goto Dg_7c; HJzn2: $I03pJ = array(); goto IjuA7; Dg_7c: } goto X0DkQ; X0DkQ: return $jgPzT; goto D5lva; L7XyU: $jYMen = array('id', 'username', 'avatar', 'created_at', 'signature', 'nickname'); goto BCQZG; D5lva: } public static function getBasic($wQ1uv, $jgPzT = null) { goto TShIF; rgx5I: $qlKQK = self::get($wQ1uv); goto vCUfi; E2PHx: return $TUqp0; goto Zycc_; UWSKM: $TUqp0 = array(); goto B2hr7; Kggp_: if (empty($qlKQK['nickname'])) { $qlKQK['nickname'] = $qlKQK['username']; } goto k6E2J; TShIF: $jgPzT = self::processBasicFields($jgPzT); goto rgx5I; k6E2J: $qlKQK['avatar'] = AssetsUtil::fixFullOrDefault($qlKQK['avatar'], 'asset/image/avatar.png'); goto UWSKM; B2hr7: foreach ($jgPzT as $vuZP9) { if (isset($qlKQK[$vuZP9])) { $TUqp0[$vuZP9] = $qlKQK[$vuZP9]; } else { $TUqp0[$vuZP9] = null; } } goto E2PHx; vCUfi: if (empty($qlKQK)) { return null; } goto Kggp_; Zycc_: } public static function listViewName($QLi7N) { goto XDsRk; XDsRk: $azFjm = array(); goto rSqLk; R_HL4: foreach ($Li0Dz as $OYXQL) { $azFjm[] = self::viewName($OYXQL); } goto TGWS8; TGWS8: return $azFjm; goto ZCWGK; rSqLk: $Li0Dz = ModelUtil::allIn('member_user', 'id', $QLi7N); goto R_HL4; ZCWGK: } public static function listUsers($QLi7N) { return ModelUtil::allIn('member_user', 'id', $QLi7N); } public static function convertOneToBasic($OYXQL) { return array('id' => $OYXQL['id'], 'username' => $OYXQL['username'], 'nickname' => empty($OYXQL['nickname']) ? $OYXQL['username'] : $OYXQL['nickname'], 'created_at' => $OYXQL['created_at'], 'signature' => isset($OYXQL['signature']) ? $OYXQL['signature'] : null, 'avatar' => AssetsUtil::fixFullOrDefault($OYXQL['avatar'], 'asset/image/avatar.png')); } public static function convertToBasic($Li0Dz) { return array_map(function ($qlKQK) { return array('id' => $qlKQK['id'], 'username' => $qlKQK['username'], 'nickname' => empty($qlKQK['nickname']) ? $qlKQK['username'] : $qlKQK['nickname'], 'created_at' => $qlKQK['created_at'], 'signature' => isset($qlKQK['signature']) ? $qlKQK['signature'] : null, 'avatar' => AssetsUtil::fixFullOrDefault($qlKQK['avatar'], 'asset/image/avatar.png')); }, $Li0Dz); } public static function listUsersBasic($QLi7N) { return self::convertToBasic(self::listUsers($QLi7N)); } public static function getViewName($wQ1uv) { return self::viewName(self::get($wQ1uv)); } public static function viewName($OYXQL) { goto kQMuA; EPSPM: return "ID-{$OYXQL['id']}"; goto xD3AM; h2pTg: if (empty($OYXQL)) { return '-'; } goto ph5qo; ph5qo: if (!empty($OYXQL['nickname'])) { return $OYXQL['nickname']; } goto QVh6y; kQMuA: if ($OYXQL && is_numeric($OYXQL)) { return self::getViewName($OYXQL); } goto h2pTg; QVh6y: if (!empty($OYXQL['username'])) { return $OYXQL['username']; } goto EPSPM; xD3AM: } public static function update($wQ1uv, $WAiaw) { return ModelUtil::update('member_user', array('id' => $wQ1uv), $WAiaw); } public static function updateBasicWithUniqueCheck($wQ1uv, $WAiaw) { goto yaBlV; teVrh: return Response::generate(0, 'ok'); goto pcZvk; p_DOF: foreach (array('username' => '用户名', 'phone' => '手机', 'email' => '邮箱') as $gxoEj => $bI3GX) { if (isset($WAiaw[$gxoEj])) { goto z0WaI; khXzu: if (count($hsT5n) > 1) { return Response::generate(-1, $bI3GX . '重复'); } goto oKvHA; oKvHA: if (count($hsT5n) == 1) { if ($hsT5n[0]['id'] != $wQ1uv) { return Response::generate(-1, $bI3GX . '重复'); } } goto fWc9F; jpLs_: $hsT5n = ModelUtil::all('member_user', array($gxoEj => $WAiaw[$gxoEj])); goto khXzu; z0WaI: if (empty($WAiaw[$gxoEj])) { $WAiaw[$gxoEj] = null; continue; } goto jpLs_; fWc9F: } } goto k1Po1; yaBlV: if (empty($WAiaw)) { return Response::generate(0, 'ok'); } goto p_DOF; k1Po1: self::update($wQ1uv, $WAiaw); goto teVrh; pcZvk: } public static function login($eZXtQ = '', $TR7J6 = '', $qAkQN = '', $AAh3w = '') { goto Ijj0c; Y0BoP: switch ($OYXQL['status']) { case MemberStatus::FORBIDDEN: return Response::generateError(-8, '登录失败:当前用户已被禁用'); } goto EHWux; SHg4g: if ($qAkQN) { if (!FormatUtil::isEmail($qAkQN)) { return Response::generate(-3, '邮箱格式不正确'); } $pwUw2 = array('email' => $qAkQN); } else { if ($TR7J6) { if (!preg_match('/(^1[0-9]{10}$)/', $TR7J6)) { return Response::generate(-4, '手机格式不正确'); } $pwUw2 = array('phone' => $TR7J6); } else { if ($eZXtQ) { if (strpos($eZXtQ, '@') !== false) { return Response::generate(-5, '用户名格式不正确'); } $pwUw2 = array('username' => $eZXtQ); } } } goto W3eIS; EHWux: return Response::generateSuccessData($OYXQL); goto FOcEH; OqTRH: if (!($qAkQN || $TR7J6 || $eZXtQ)) { return Response::generate(-1, '所有登录字段均为空'); } goto JfMHA; M6099: if ($OYXQL['password'] != EncodeUtil::md5WithSalt($AAh3w, $OYXQL['passwordSalt'])) { MemberUserLoginFailedEvent::fire($OYXQL['id'], $OYXQL['username'], Request::ip(), AgentUtil::getUserAgent()); return Response::generate(-7, '登录失败:用户名或密码错误'); } goto Y0BoP; ri4qa: MemberUserLoginAttemptEvent::fire($OYXQL['id'], Request::ip(), AgentUtil::getUserAgent()); goto M6099; Ijj0c: $qAkQN = trim($qAkQN); goto xaIo_; JfMHA: if (!$AAh3w) { return Response::generate(-2, '密码为空'); } goto SHg4g; W3eIS: $OYXQL = ModelUtil::get('member_user', $pwUw2); goto wZk5n; wZk5n: if (empty($OYXQL)) { return Response::generate(-6, '登录失败:用户名或密码错误'); } goto ri4qa; xaIo_: $TR7J6 = trim($TR7J6); goto Sh61U; Sh61U: $eZXtQ = trim($eZXtQ); goto OqTRH; FOcEH: } public static function autoSetUsernameNickname($XK7hT, $KJ72_) { goto dWR8y; wKEoR: self::suggestUsernameNickname($XK7hT, $KJ72_, $TfhsL); goto x6Guz; dWR8y: $TfhsL = 6; goto r98Oi; r98Oi: if (preg_match('/\\{.*\\}/', $KJ72_)) { goto fx4u0; zYiND: $TfhsL = 0; goto v2oV1; ZSW2y: $iMATK = array('{Phone}' => $OYXQL['phone'], '{Phone4}' => substr($OYXQL['phone'], 7), '{Uid}' => $OYXQL['id']); goto hrZVV; fx4u0: $OYXQL = self::get($XK7hT); goto ZSW2y; hrZVV: $KJ72_ = str_replace(array_keys($iMATK), array_values($iMATK), $KJ72_); goto zYiND; v2oV1: } goto wKEoR; x6Guz: } public static function getSuggestUsernameNickname($d7HkB) { goto EmSTL; EmSTL: $KJ72_ = $d7HkB . Str::random(1); goto SHhoR; oxYoo: return $KJ72_ . Str::random(10); goto LdvBe; SHhoR: for ($VL8Aw = 0; $VL8Aw < 20; $VL8Aw++) { $iqLY2 = ModelUtil::model('member_user')->where(array('username' => $KJ72_))->orWhere(array('nickname' => $KJ72_))->first(); if (empty($iqLY2)) { return $KJ72_; } $KJ72_ = $KJ72_ . Str::random(1); } goto oxYoo; LdvBe: } private static function suggestUsernameNickname($XK7hT, $O5e4c = '用户', $TfhsL = 6) { goto ZU_kK; rEOZK: ModelUtil::update('member_user', $XK7hT, array('username' => $KJ72_, 'nickname' => $KJ72_)); goto egNUy; MtEUL: for ($VL8Aw = 0; $VL8Aw < 20; $VL8Aw++) { $iqLY2 = ModelUtil::model('member_user')->where(array('username' => $KJ72_))->orWhere(array('nickname' => $KJ72_))->first(); if (empty($iqLY2)) { break; } $KJ72_ = $KJ72_ . Str::random(1); } goto rEOZK; ZU_kK: if ($TfhsL > 0) { $KJ72_ = $O5e4c . RandomUtil::string($TfhsL); } else { $KJ72_ = $O5e4c; } goto MtEUL; egNUy: } public static function registerUsernameQuick($eZXtQ) { goto nluSs; cwH1k: for ($VL8Aw = 0; $VL8Aw < 10; $VL8Aw++) { $ULXwZ = self::register($fxg1p, '', '', '', true); if ($ULXwZ['code']) { $fxg1p = $fxg1p . Str::random(1); } else { return $ULXwZ; } } goto Ag4Rs; Ag4Rs: return Response::generateError('注册失败'); goto cPpR4; nluSs: $fxg1p = $eZXtQ; goto cwH1k; cPpR4: } public static function register($eZXtQ = '', $TR7J6 = '', $qAkQN = '', $AAh3w = '', $ZOzmU = false) { goto Fb77Y; ywgOq: if ($qAkQN) { $ULXwZ = self::uniqueCheck('email', $qAkQN); if ($ULXwZ['code']) { return $ULXwZ; } } else { $qAkQN = null; } goto wL9HE; ty1iv: if (!$ZOzmU) { if (empty($AAh3w) || strlen($AAh3w) < 6) { return Response::generate(-3, '密码不合法'); } } goto V88Rw; jdGw5: $OYXQL = ModelUtil::insert('member_user', array('status' => MemberStatus::NORMAL, 'username' => $eZXtQ, 'email' => $qAkQN, 'phone' => $TR7J6, 'password' => $ZOzmU ? null : EncodeUtil::md5WithSalt($AAh3w, $JST3m), 'passwordSalt' => $ZOzmU ? null : $JST3m, 'isDeleted' => false)); goto k92w5; Fb77Y: $qAkQN = trim($qAkQN); goto XdNhG; vcGa_: if ($eZXtQ) { goto RAHC1; uxWy8: if (Str::contains($eZXtQ, '@')) { return Response::generate(-1, '用户名不能包含特殊字符'); } goto x_6Kd; uI5qp: if ($ULXwZ['code']) { return $ULXwZ; } goto ajhlu; RAHC1: $ULXwZ = self::uniqueCheck('username', $eZXtQ); goto uI5qp; x_6Kd: if (preg_match('/^[0-9]{11}$/', $eZXtQ)) { return Response::generate(-1, '用户名不能为纯数字'); } goto HIIso; ajhlu: if (strlen($eZXtQ) < modstart_config('Member_UsernameMinLength', 3)) { return Response::generate(-1, '用户名至少3个字符'); } goto uxWy8; HIIso: } else { $eZXtQ = null; } goto ty1iv; IVjhm: if (!($qAkQN || $TR7J6 || $eZXtQ)) { return Response::generate(-1, '所有注册字段均为空'); } goto ywgOq; oe3v1: $eZXtQ = trim($eZXtQ); goto IVjhm; wL9HE: if ($TR7J6) { $ULXwZ = self::uniqueCheck('phone', $TR7J6); if ($ULXwZ['code']) { return $ULXwZ; } } else { $TR7J6 = null; } goto vcGa_; k92w5: return Response::generate(0, 'ok', $OYXQL); goto rh3Wx; V88Rw: $JST3m = Str::random(16); goto jdGw5; XdNhG: $TR7J6 = trim($TR7J6); goto oe3v1; rh3Wx: } public static function uniqueCheck($FmHYg, $I1R2f, $K7D6D = 0) { goto Vy2gS; rByde: if (empty($OYXQL)) { return Response::generate(0, 'ok'); } goto erulX; erulX: $khbLJ = array('username' => '用户名', 'email' => '邮箱', 'phone' => '手机号'); goto Mh478; TzVTE: return Response::generate(-2, $khbLJ[$FmHYg] . '已经被占用'); goto cez3Y; Mh478: if ($K7D6D == $OYXQL['id']) { return Response::generate(0, 'ok'); } goto TzVTE; vBRKL: switch ($FmHYg) { case 'email': if (!FormatUtil::isEmail($I1R2f)) { return Response::generate(-1, '邮箱格式不正确'); } break; case 'phone': if (!preg_match('/(^1[0-9]{10}$)/', $I1R2f)) { return Response::generate(-1, '手机格式不正确'); } break; case 'username': if (strpos($I1R2f, '@') !== false) { return Response::generate(-1, '用户名格式不正确'); } break; case 'nickname': break; default: return Response::generate(-1, '未能识别的类型' . $FmHYg); } goto l65vz; l65vz: $OYXQL = ModelUtil::get('member_user', array($FmHYg => $I1R2f)); goto rByde; Vy2gS: $I1R2f = trim($I1R2f); goto vBRKL; cez3Y: } public static function getByUsername($eZXtQ) { return ModelUtil::get('member_user', array('username' => $eZXtQ)); } public static function getByEmail($qAkQN) { return ModelUtil::get('member_user', array('email' => $qAkQN)); } public static function getByPhone($TR7J6) { return ModelUtil::get('member_user', array('phone' => $TR7J6)); } public static function changeNickname($XK7hT, $fx1We) { goto dCuua; s8Uq3: ModelUtil::update('member_user', $XK7hT, array('nickname' => $fx1We)); goto xrpYT; xrpYT: return Response::generate(0, 'ok'); goto BST3j; Q6DTb: if (Response::isError($ULXwZ)) { return $ULXwZ; } goto s8Uq3; dCuua: $ULXwZ = self::uniqueCheck('nickname', $fx1We, $XK7hT); goto Q6DTb; BST3j: } public static function changePassword($XK7hT, $r_eR6, $ck17t = null, $jpUkD = false) { goto T1y0f; F0iPE: if (empty($r_eR6)) { return Response::generate(-1, '新密码为空'); } goto d86Zz; T1y0f: if (!$jpUkD && empty($ck17t)) { return Response::generate(-1, '旧密码不能为空'); } goto AE0Bj; fXJf4: return Response::generate(0, 'ok'); goto rrVmb; AE0Bj: $OYXQL = ModelUtil::get('member_user', array('id' => $XK7hT)); goto uS8TG; T3e1M: ModelUtil::update('member_user', array('id' => $OYXQL['id']), array('passwordSalt' => $JST3m, 'password' => EncodeUtil::md5WithSalt($r_eR6, $JST3m))); goto fXJf4; esdT2: $JST3m = Str::random(16); goto T3e1M; d86Zz: if (!$jpUkD && EncodeUtil::md5WithSalt($ck17t, $OYXQL['passwordSalt']) != $OYXQL['password']) { return Response::generate(-1, '旧密码不正确'); } goto esdT2; uS8TG: if (empty($OYXQL)) { return Response::generate(-1, '用户不存在'); } goto F0iPE; rrVmb: } public static function setAvatar($T2y_X, $vWNUi, $gggvu = 'jpg') { goto Z6ruk; csWGt: return Response::generateSuccess(); goto vXm4X; qWCAq: $eJUzJ = (string) Image::make($vWNUi)->resize(50, 50)->encode($gggvu, 75); goto w0L8B; Z6ruk: $OYXQL = self::get($T2y_X); goto B3lIq; LE5NB: if (class_exists('ModStart\\Data\\Event\\DataFileUploadedEvent')) { DataFileUploadedEvent::forgetParam('imageCompressIgnore'); DataFileUploadedEvent::forgetParam('imageWatermarkIgnore'); } goto zr5e2; iSUNt: if ($VBJwh['code']) { return Response::generate(-1, '头像存储失败（' . $VBJwh['msg'] . '）'); } goto hmP1E; v7O5B: $VBJwh = DataManager::upload('image', 'U' . $T2y_X . '_AvatarBig.' . $gggvu, $tZsZr); goto iSUNt; qWYlN: if (empty($vWNUi)) { return Response::generate(-1, '图片数据为空'); } goto eO_Lt; dzC_T: if ($ULXwZ['code']) { goto n0MEy; k2vIB: if ($VBJwh['code']) { return Response::generate(-1, '头像存储失败（' . $ULXwZ['msg'] . '）'); } goto bw6WD; n0MEy: DataManager::deleteById($VBJwh['data']['id']); goto Rgm9U; Rgm9U: DataManager::deleteById($jAVke['data']['id']); goto k2vIB; bw6WD: } goto LE5NB; UQV1p: $ULXwZ = DataManager::upload('image', 'U_' . $T2y_X . '_Avatar.' . $gggvu, $eJUzJ); goto dzC_T; VOsoP: if ($jAVke['code']) { DataManager::deleteById($VBJwh['data']['id']); if ($VBJwh['code']) { return Response::generate(-1, '头像存储失败（' . $jAVke['msg'] . '）'); } } goto UQV1p; DZr2z: $IY5XS = (string) Image::make($vWNUi)->resize(200, 200)->encode($gggvu, 75); goto qWCAq; w0L8B: if (class_exists('ModStart\\Data\\Event\\DataFileUploadedEvent')) { DataFileUploadedEvent::setParam('imageCompressIgnore', true); DataFileUploadedEvent::setParam('imageWatermarkIgnore', true); } goto v7O5B; zr5e2: self::update($OYXQL['id'], array('avatarBig' => $VBJwh['data']['fullPath'], 'avatarMedium' => $jAVke['data']['fullPath'], 'avatar' => $ULXwZ['data']['fullPath'])); goto csWGt; hmP1E: $jAVke = DataManager::upload('image', 'U' . $T2y_X . '_AvatarMiddle.' . $gggvu, $IY5XS); goto VOsoP; B3lIq: if (empty($OYXQL)) { return Response::generate(-1, '用户不存在'); } goto qWYlN; eO_Lt: $tZsZr = (string) Image::make($vWNUi)->resize(400, 400)->encode($gggvu, 75); goto DZr2z; vXm4X: } public static function findUsers($B3usF) { goto VDwH7; n1LML: $X_STQ = array(); goto S9e7w; S9e7w: $Li0Dz = ModelUtil::model('member_user')->whereIn('id', $B3usF)->get(); goto l7QHk; l7QHk: foreach ($Li0Dz as &$TYL9f) { $X_STQ[$TYL9f->id] = $TYL9f->toArray(); } goto G18me; VDwH7: if (empty($B3usF)) { return array(); } goto n1LML; G18me: return $X_STQ; goto LUWHw; LUWHw: } public static function filterUserIds($B3usF) { goto ED3DD; mk_aZ: foreach ($Li0Dz as &$TYL9f) { $iMATK[$TYL9f->id] = true; } goto c4cBm; ac48W: $Li0Dz = ModelUtil::model('member_user')->whereIn('id', $B3usF)->get(array('id')); goto mk_aZ; zG_H3: $iMATK = array(); goto ac48W; c4cBm: return array_keys($iMATK); goto Gzyb1; ED3DD: if (empty($B3usF)) { return array(); } goto zG_H3; Gzyb1: } public static function mergeMemberUsers(&$VxRpT, $Ox9hx = 'memberUserId', $f63c2 = '_memberUser') { ModelUtil::join($VxRpT, $Ox9hx, $f63c2, 'member_user', 'id'); } public static function mergeMemberUserBasics(&$VxRpT, $Ox9hx = 'memberUserId', $f63c2 = '_memberUser', $jgPzT = null) { $jgPzT = self::processBasicFields($jgPzT); if (is_array($VxRpT)) { ModelUtil::join($VxRpT, $Ox9hx, $f63c2, 'member_user', 'id'); foreach ($VxRpT as $hBBDL => $p4EDY) { goto pyRwI; L89YY: if (empty($OYXQL['nickname'])) { $OYXQL['nickname'] = $OYXQL['username']; } goto eHMeN; pyRwI: $OYXQL = ArrayUtil::keepKeys($p4EDY[$f63c2], $jgPzT); goto L89YY; d1q7E: $VxRpT[$hBBDL][$f63c2] = $OYXQL; goto Ik1KD; eHMeN: if (empty($OYXQL['avatar'])) { $OYXQL['avatar'] = AssetsUtil::fixFull('asset/image/avatar.png'); } else { $OYXQL['avatar'] = AssetsUtil::fixFull($OYXQL['avatar']); } goto d1q7E; Ik1KD: } } else { ModelUtil::joinItems($VxRpT, $Ox9hx, $f63c2, 'member_user', 'id'); foreach ($VxRpT as $qlKQK) { goto NNAUt; XtiMW: if (empty($OYXQL['nickname'])) { $OYXQL['nickname'] = $OYXQL['username']; } goto YssUG; YssUG: if (empty($OYXQL['avatar'])) { $OYXQL['avatar'] = AssetsUtil::fixFull('asset/image/avatar.png'); } else { $OYXQL['avatar'] = AssetsUtil::fixFull($OYXQL['avatar']); } goto V4KWx; V4KWx: $qlKQK->{$f63c2} = $OYXQL; goto UA8ZH; NNAUt: $OYXQL = ArrayUtil::keepKeys($qlKQK->{$f63c2}, $jgPzT); goto XtiMW; UA8ZH: } } } public static function insert($WAiaw) { return ModelUtil::insert('member_user', $WAiaw); } public static function getIdByOauth($bMuGA, $GyDdX) { goto v5IGb; v5IGb: $bgpWq = ModelUtil::get('member_oauth', array('type' => $bMuGA, 'openId' => $GyDdX)); goto bISZR; bISZR: if (empty($bgpWq)) { return 0; } goto ac8Tz; ac8Tz: return intval($bgpWq['memberUserId']); goto cHX6k; cHX6k: } public static function getIdByOauthAndCheck($bMuGA, $GyDdX) { goto uB_x8; YxgjO: if (self::get($XK7hT)) { return $XK7hT; } goto YyEeI; uB_x8: $XK7hT = self::getIdByOauth($bMuGA, $GyDdX); goto YxgjO; YyEeI: MemberUtil::forgetOauth($bMuGA, $GyDdX); goto wwy6Z; wwy6Z: return 0; goto G5y7k; G5y7k: } public static function getOauthOpenId($XK7hT, $bMuGA) { goto TG73X; rsPMc: return $bgpWq['openId']; goto odQ7Q; iALcT: if (empty($bgpWq)) { return null; } goto rsPMc; TG73X: $pwUw2 = array('memberUserId' => $XK7hT, 'type' => $bMuGA); goto tMv2m; tMv2m: $bgpWq = ModelUtil::get('member_oauth', $pwUw2); goto iALcT; odQ7Q: } public static function getOauth($XK7hT, $bMuGA) { $pwUw2 = array('memberUserId' => $XK7hT, 'type' => $bMuGA); return ModelUtil::get('member_oauth', $pwUw2); } public static function listOauths($XK7hT) { return ModelUtil::all('member_oauth', array('memberUserId' => $XK7hT), array('*'), array('type', 'asc')); } public static function putOauth($XK7hT, $bMuGA, $GyDdX, $zoCJb = array()) { goto PjQs8; PjQs8: $pwUw2 = array('memberUserId' => $XK7hT, 'type' => $bMuGA); goto ghhdS; ghhdS: $bgpWq = ModelUtil::get('member_oauth', $pwUw2); goto BgE4A; BgE4A: if (empty($bgpWq)) { ModelUtil::insert('member_oauth', array_merge($pwUw2, array('openId' => $GyDdX), $zoCJb)); } else { if ($bgpWq['openId'] != $GyDdX) { ModelUtil::update('member_oauth', array('id' => $bgpWq['id']), array_merge(array('openId' => $GyDdX), $zoCJb)); } } goto pI6Wf; pI6Wf: } public static function forgetOauth($bMuGA, $GyDdX) { ModelUtil::delete('member_oauth', array('type' => $bMuGA, 'openId' => $GyDdX)); } public static function updateNewMessageStatus($XK7hT) { ModelUtil::update('member_user', array('id' => $XK7hT), array('newMessageCount' => ModelUtil::count('member_message', array('userId' => $XK7hT, 'status' => MemberMessageStatus::UNREAD)))); } public static function updateNewChatMsgStatus($XK7hT) { ModelUtil::update('member_user', array('id' => $XK7hT), array('newChatMsgCount' => ModelUtil::sum('member_chat', 'unreadMsgCount', array('memberUserId' => $XK7hT)))); } public static function paginate($H1G2d, $HugPs, $eMb8v = array()) { return ModelUtil::paginate('member_user', $H1G2d, $HugPs, $eMb8v); } public static function updateStatus($xN0Oy, $fds7B) { goto WKtsK; Vj30j: ModelUtil::model('member_user')->whereIn('id', $xN0Oy)->update(array('status' => $fds7B)); goto LbTJ4; EAdkf: if (empty($xN0Oy)) { return; } goto Vj30j; WKtsK: if (!is_array($xN0Oy)) { $xN0Oy = array($xN0Oy); } goto EAdkf; LbTJ4: } public static function delete($XK7hT) { goto AQlqO; ofpOw: ModelUtil::update('member_user', $XK7hT, array('deleteAtTime' => 0, 'isDeleted' => true, 'username' => null, 'phone' => null, 'email' => null)); goto RiAvf; N1oPG: ModelUtil::insert('member_deleted', array('id' => $OYXQL['id'], 'username' => $OYXQL['username'], 'phone' => $OYXQL['phone'], 'email' => $OYXQL['email'], 'content' => json_encode($yo_tt, JSON_UNESCAPED_UNICODE))); goto ofpOw; uLc0M: ModelUtil::transactionBegin(); goto YWNsb; mozXl: $zXny6 = ModelUtil::all('member_oauth', array('memberUserId' => $OYXQL['id'])); goto gck7c; RiAvf: ModelUtil::transactionCommit(); goto MorYF; AQlqO: $OYXQL = self::get($XK7hT); goto f6iJL; f6iJL: BizException::throwsIfEmpty('用户不存在', $OYXQL); goto uLc0M; YWNsb: $yo_tt = array(); goto mozXl; gck7c: $yo_tt['oauth'] = ArrayUtil::keepItemsKeys($zXny6, array('type', 'openId', 'infoUsername', 'infoAvatar')); goto N1oPG; MorYF: } }