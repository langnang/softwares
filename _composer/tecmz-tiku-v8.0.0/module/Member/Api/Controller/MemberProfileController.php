<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\FormatUtil; use ModStart\Core\Util\TimeUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Auth\MemberUser; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserUpdatedEvent; use Module\Member\Support\MemberLoginCheck; use Module\Member\Util\MemberUtil; use Module\Vendor\Email\MailSendJob; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class MemberProfileController extends ModuleBaseController implements MemberLoginCheck { public function nickname() { goto tXmTv; Oa1Qa: $BEdDh = MemberUtil::changeNickname(MemberUser::id(), $YCRAF); goto orX9E; tXmTv: $bz1sB = InputPackage::buildFromInput(); goto vZfo9; vZfo9: $YCRAF = $bz1sB->getTrimString('nickname'); goto ph1Dr; orX9E: BizException::throwsIfResponseError($BEdDh); goto ppPsD; DQShF: if (!CaptchaFacade::check($bz1sB->getTrimString('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto Oa1Qa; aGiVA: return Response::generate(0, '修改成功', null, '[reload]'); goto vkBy4; ph1Dr: BizException::throwsIfEmpty('昵称为空', $YCRAF); goto DQShF; ppPsD: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'nickname')); goto aGiVA; vkBy4: } public function password() { goto ldJD4; uNoXn: $Ly78a = $bz1sB->getTrimString('passwordOld'); goto Fya9M; Fya9M: $AovGs = $bz1sB->getTrimString('passwordNew'); goto xbnHJ; xbnHJ: $HPolP = $bz1sB->getTrimString('passwordRepeat'); goto bHlVE; yttD3: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'password')); goto G2pxN; bHlVE: if ($AovGs != $HPolP) { return Response::generate(-1, '两次新密码输入不一致'); } goto Hw1Rg; ldJD4: $bz1sB = InputPackage::buildFromInput(); goto uNoXn; JHjMs: if (empty($w45m7['password'])) { $BEdDh = MemberUtil::changePassword(MemberUser::id(), $AovGs, null, true); } else { $BEdDh = MemberUtil::changePassword(MemberUser::id(), $AovGs, $Ly78a); } goto yw6JL; G2pxN: return Response::generate(0, '修改成功', null, '[reload]'); goto BoCvg; yw6JL: if ($BEdDh['code']) { return Response::generate(-1, $BEdDh['msg']); } goto yttD3; Hw1Rg: $w45m7 = MemberUser::get(); goto JHjMs; BoCvg: } public function avatar() { goto H1YxD; O7xJZ: switch ($bz1sB->getTrimString('type')) { case 'cropper': goto K_buK; HxnTa: if (empty($IztrW)) { return Response::generate(-1, '头像数据为空'); } goto b6Omg; b6Omg: $jPxQy = @base64_decode($jPxQy); goto eDY9o; GXJGz: if ($BEdDh['code']) { return $BEdDh; } goto xq16w; xq16w: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto V2Aof; eDY9o: if (empty($jPxQy)) { return Response::generate(-1, '头像内容为空'); } goto ZFEo_; T8uc0: if (Str::startsWith($jPxQy, 'data:image/jpeg;base64,')) { $IztrW = 'jpg'; $jPxQy = substr($jPxQy, strlen('data:image/jpeg;base64,')); } else { if (Str::startsWith($jPxQy, 'data:image/png;base64,')) { $IztrW = 'png'; $jPxQy = substr($jPxQy, strlen('data:image/png;base64,')); } } goto HxnTa; ZFEo_: $BEdDh = MemberUtil::setAvatar(MemberUser::id(), $jPxQy, $IztrW); goto GXJGz; K_buK: $IztrW = null; goto T8uc0; V2Aof: return Response::generate(0, '保存成功', null, '[reload]'); goto XGn14; XGn14: default: goto vBrTi; H4GP0: if (empty($jPxQy)) { return Response::generate(-1, '读取头像文件失败:-1'); } goto iUxrl; fObdi: if (!in_array($Bbc8G, config('data.upload.image.extensions'))) { return Response::generate(-1, '头像格式不合法'); } goto RvIUV; C2aiP: return Response::generate(0, '保存成功', null, '[reload]'); goto qczoT; RvIUV: $jPxQy = FileUtil::safeGetContent($jPxQy); goto mMgn0; k3Qw_: if ($BEdDh['code']) { return $BEdDh; } goto zC31B; zC31B: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto C2aiP; mMgn0: if (empty($jPxQy)) { return Response::generate(-1, '读取头像文件失败:-2'); } goto hl1vZ; iUxrl: $Bbc8G = FileUtil::extension($jPxQy); goto fObdi; vBrTi: $jPxQy = FileUtil::savePathToLocalTemp($jPxQy); goto H4GP0; hl1vZ: $BEdDh = MemberUtil::setAvatar(MemberUser::id(), $jPxQy, $Bbc8G); goto k3Qw_; qczoT: } goto w7p7W; qLRZN: $jPxQy = $bz1sB->getTrimString('avatar'); goto YFEFM; H1YxD: $bz1sB = InputPackage::buildFromInput(); goto qLRZN; YFEFM: if (empty($jPxQy)) { return Response::generate(-1, '头像内容为空'); } goto O7xJZ; w7p7W: } public function captchaRaw() { return CaptchaFacade::create('default'); } public function captcha() { $Tzora = $this->captchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Tzora->getOriginalContent()))); } public function email() { goto KjWoZ; K8Y9C: Session::forget('memberProfileEmailVerify'); goto m1w6C; HJIhJ: $SKQob = $bz1sB->getTrimString('verify'); goto xjN7M; NLwkj: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'email')); goto K8Y9C; eJs2Y: $GURxy = MemberUtil::getByEmail($ZYL8t); goto O3ees; O3ees: if (!empty($GURxy)) { if ($GURxy['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($GURxy['id'] == MemberUser::id() && $GURxy['email'] == $ZYL8t) { if (!empty($GURxy['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto dTau8; LpMHW: if ($ZYL8t != Session::get('memberProfileEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto eJs2Y; xjN7M: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱不能为空'); } goto UqKYY; E9v72: if (empty($SKQob)) { return Response::generate(-1, '验证码不能为空'); } goto ywDIz; jUSKB: Session::forget('memberProfileEmail'); goto SZX0h; KjWoZ: $bz1sB = InputPackage::buildFromInput(); goto fl9wl; t5kMW: if (Session::get('memberProfileEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto LpMHW; UqKYY: if (!FormatUtil::isEmail($ZYL8t)) { return Response::generate(-1, '邮箱格式不正确'); } goto E9v72; ywDIz: if ($SKQob != Session::get('memberProfileEmailVerify')) { return Response::generate(-1, '验证码不正确'); } goto t5kMW; SZX0h: return Response::generate(0, '修改成功', null, '[reload]'); goto U_qlr; m1w6C: Session::forget('memberProfileEmailVerifyTime'); goto jUSKB; fl9wl: $ZYL8t = $bz1sB->getEmail('email'); goto HJIhJ; dTau8: MemberUtil::update(MemberUser::id(), array('emailVerified' => true, 'email' => $ZYL8t)); goto NLwkj; U_qlr: } public function emailVerify() { goto Zt6iR; V1aKD: if (empty($ZYL8t)) { return Response::generate(-1, '邮箱不能为空'); } goto d_kR9; hv30U: MailSendJob::create($ZYL8t, '验证码', 'verify', array('code' => $SKQob)); goto XNL2U; cAQM3: Session::put('memberProfileEmailVerify', $SKQob); goto kfINO; XNL2U: return Response::generate(0, '验证码发送成功'); goto mAgc0; Z4ecp: Session::put('memberProfileEmail', $ZYL8t); goto hv30U; MVy8G: if (!empty($GURxy)) { if ($GURxy['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($GURxy['id'] == MemberUser::id() && $GURxy['email'] == $ZYL8t) { if (!empty($GURxy['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto pcH6J; kfINO: Session::put('memberProfileEmailVerifyTime', time()); goto Z4ecp; HKsqq: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto snyWJ; d_kR9: if (!FormatUtil::isEmail($ZYL8t)) { return Response::generate(-1, '邮箱格式不正确'); } goto HKsqq; r8eVH: $SKQob = rand(100000, 999999); goto cAQM3; snyWJ: $GURxy = MemberUtil::getByEmail($ZYL8t); goto MVy8G; Zt6iR: $ZYL8t = Input::get('target'); goto V1aKD; pcH6J: if (Session::get('memberProfileEmailVerifyTime') && $ZYL8t == Session::get('memberProfileEmail')) { if (Session::get('memberProfileEmailVerifyTime') + 60 * 10 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto r8eVH; mAgc0: } public function phone() { goto vjQqJ; S4iG8: Session::forget('memberProfilePhoneVerifyTime'); goto LB4a_; r2bBY: if ($SKQob != Session::get('memberProfilePhoneVerify')) { return Response::generate(-1, '验证码不正确'); } goto dEPfj; vjQqJ: $bz1sB = InputPackage::buildFromInput(); goto YIbec; ZBWYW: Session::forget('memberProfilePhoneVerify'); goto S4iG8; hBJ_1: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'phone')); goto ZBWYW; HptA_: return Response::generate(0, '修改成功', null, '[reload]'); goto iyZQ3; dEPfj: if (Session::get('memberProfilePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto MDLWL; x3Xdt: if (empty($deRjP)) { return Response::generate(-1, '手机不能为空'); } goto E5EBz; DWo7f: $SKQob = $bz1sB->getTrimString('verify'); goto x3Xdt; E5EBz: if (!FormatUtil::isPhone($deRjP)) { return Response::generate(-1, '手机格式不正确'); } goto xMePF; JYm9j: MemberUtil::update(MemberUser::id(), array('phoneVerified' => true, 'phone' => $deRjP)); goto hBJ_1; LB4a_: Session::forget('memberProfilePhone'); goto HptA_; YIbec: $deRjP = $bz1sB->getPhone('phone'); goto DWo7f; amL_G: if (!empty($GURxy)) { if ($GURxy['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($GURxy['id'] == MemberUser::id() && $GURxy['phone'] == $deRjP) { if (!empty($GURxy['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto JYm9j; MDLWL: if ($deRjP != Session::get('memberProfilePhone')) { return Response::generate(-1, '两次手机不一致'); } goto BS4zB; BS4zB: $GURxy = MemberUtil::getByPhone($deRjP); goto amL_G; xMePF: if (empty($SKQob)) { return Response::generate(-1, '验证码不能为空'); } goto r2bBY; iyZQ3: } public function phoneVerify() { goto MuNoE; n8mI2: if (!empty($GURxy)) { if ($GURxy['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($GURxy['id'] == MemberUser::id() && $GURxy['phone'] == $deRjP) { if (!empty($GURxy['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto q3hJ3; mHXtd: Session::put('memberProfilePhoneVerify', $SKQob); goto zvzX2; RpGP1: return Response::generate(0, '验证码发送成功'); goto H8zms; jcvzt: SmsUtil::send($deRjP, 'verify', array('code' => $SKQob)); goto RpGP1; MuNoE: $deRjP = Input::get('target'); goto yMHdG; yMHdG: if (empty($deRjP)) { return Response::generate(-1, '手机不能为空'); } goto k_Kgs; zvzX2: Session::put('memberProfilePhoneVerifyTime', time()); goto rk5yw; S00pv: $GURxy = MemberUtil::getByPhone($deRjP); goto n8mI2; q3hJ3: if (Session::get('memberProfilePhoneVerifyTime') && $deRjP == Session::get('memberProfilePhone')) { if (Session::get('memberProfilePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto eHcF4; eHcF4: $SKQob = rand(100000, 999999); goto mHXtd; rk5yw: Session::put('memberProfilePhone', $deRjP); goto jcvzt; Pe9PM: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '图片验证码错误'); } goto S00pv; k_Kgs: if (!FormatUtil::isPhone($deRjP)) { return Response::generate(-1, '手机格式不正确'); } goto Pe9PM; H8zms: } public function oauthUnbind() { goto HtZlD; k8OYS: $wyN7g = MemberOauth::getOrFail($S3IJB); goto tJeet; iRN95: if ($qFGW9) { MemberUtil::forgetOauth($wyN7g->oauthKey(), $qFGW9); } goto Xl4ZH; gNMzT: $S3IJB = $bz1sB->getTrimString('type'); goto k8OYS; Xl4ZH: return Response::generate(0, '解绑成功', null, '[reload]'); goto dUjFw; tJeet: BizException::throwsIfEmpty('授权方式不存在', $wyN7g); goto RiLy6; HtZlD: $bz1sB = InputPackage::buildFromInput(); goto gNMzT; RiLy6: $qFGW9 = MemberUtil::getOauthOpenId(MemberUser::id(), $wyN7g->oauthKey()); goto iRN95; dUjFw: } public function delete() { goto FWvzg; oDkyR: $w45m7 = MemberUser::get(); goto lSNQb; FWvzg: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto oDkyR; lSNQb: if ($w45m7['deleteAtTime'] > 0) { return Response::generateError('账号正在注销中'); } goto D1f1n; vnBrk: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => time() + TimeUtil::PERIOD_MONTH)); goto QdPQi; th2Fi: $QFKyZ = $bz1sB->getTrimString('agree'); goto o1VSn; QdPQi: return Response::generate(0, '申请注销成功', null, '[reload]'); goto ZFiU8; o1VSn: BizException::throwsIf('请勾选同意选项', $QFKyZ != 'yes'); goto vnBrk; D1f1n: $bz1sB = InputPackage::buildFromInput(); goto th2Fi; ZFiU8: } public function deleteRevert() { goto riZ3x; PfM6J: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => 0)); goto GHZtm; KCorA: $w45m7 = MemberUser::get(); goto mfp7K; mfp7K: if (empty($w45m7['deleteAtTime'])) { return Response::generateError('账号没有注销操作'); } goto PfM6J; riZ3x: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto KCorA; GHZtm: return Response::generate(0, '撤销操作成功', null, '[reload]'); goto oGsIg; oGsIg: } }