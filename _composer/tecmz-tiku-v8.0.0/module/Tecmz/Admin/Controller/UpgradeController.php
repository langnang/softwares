<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Tecmz\Admin\Controller; use App\Constant\AppConstant; use Chumper\Zipper\Zipper; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use ModStart\Data\DataManager; use Module\Tecmz\Util\UpgradeUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'manual' => '@SystemUpgrade'); private function doFinish($O066a, $gn4HX = null) { return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'logs' => $gn4HX, 'finish' => true)); } private function doNext($NH6tu, $O066a = array(), $GeXSC = array()) { goto HvADC; lbnPQ: return Response::generateSuccessData(array('msg' => array_map(function ($REa1I) { if (!starts_with($REa1I, '<')) { $REa1I = "<span class='ub-text-white'>{$REa1I}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $REa1I; }, $O066a), 'step' => $NH6tu, 'data' => $GeXSC, 'finish' => false)); goto bbNBS; HvADC: $bz1sB = InputPackage::buildFromInput(); goto BQTAZ; BQTAZ: $GeXSC = array_merge($bz1sB->getJsonAsInput('data')->all(), $GeXSC); goto lbnPQ; bbNBS: } public function index() { goto LgYSE; a23FY: return view('module::Tecmz.View.admin.upgrade'); goto EHbms; LgYSE: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto loE69; loE69: if (Request::isPost()) { goto E_a7T; E_a7T: AdminPermission::demoCheck(); goto KZJiM; PULx9: $HUlap = $bz1sB->getTrimString('token'); goto E5l_l; E5l_l: $gSjJ9 = $bz1sB->getJsonAsInput('data'); goto d9D9Q; vazCX: $NH6tu = $bz1sB->getTrimString('step'); goto PULx9; KZJiM: $bz1sB = InputPackage::buildFromInput(); goto vazCX; mWflN: switch ($NH6tu) { case 'upgradePackage': goto y0xk4; y0xk4: $ZD7Jf = $gSjJ9->getTrimString('package'); goto vNGOE; ZS6C7: BizException::throwsIfResponseError($BEdDh); goto qPs6p; vNGOE: $Qob5Q = $gSjJ9->getTrimString('diffContentFile'); goto rJ1XK; qPs6p: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $BEdDh['data']['logs']); goto vzbdd; ZPdkE: $BEdDh = UpgradeUtil::upgradePackage($ZD7Jf, $Qob5Q); goto ZS6C7; rJ1XK: BizException::throwsIfEmpty('package为空', $ZD7Jf); goto IfK0X; IfK0X: BizException::throwsIfEmpty('diffContentFile为空', $Qob5Q); goto ZPdkE; vzbdd: case 'downloadPackage': goto WpC8l; WpC8l: $BEdDh = UpgradeUtil::downloadPackage($HUlap, AppConstant::APP, AppConstant::VERSION, $bssXV); goto I8mcv; I8mcv: BizException::throwsIfResponseError($BEdDh); goto NIdhk; NIdhk: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($BEdDh['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压升级装包...</span>'), array('package' => $BEdDh['data']['package'], 'diffContentFile' => $BEdDh['data']['diffContentFile'])); goto KrBi4; KrBi4: case 'checkPackage': goto bKtea; Fb0zh: break; goto KR2ST; bKtea: try { $knCM0 = Artisan::call('migrate'); } catch (\Exception $knlzD) { $knCM0 = -1; } goto pccG3; oIPJw: return $this->doNext('downloadPackage', array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检通过</span>', '<span class="ub-text-white">开始下载升级包...</span>')); goto Fb0zh; pccG3: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $knCM0); goto oIPJw; KR2ST: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $bssXV . '</span>', '<span class="ub-text-white">开始预检系统...</span>')); } goto GNRyc; d9D9Q: $bssXV = $gSjJ9->getTrimString('toVersion'); goto TLTDb; TLTDb: BizException::throwsIfEmpty('toVersion为空', $bssXV); goto mWflN; GNRyc: } goto a23FY; EHbms: } public function info() { $lUvJb = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $lUvJb['latestVersion'], 'autoUpgrade' => $lUvJb['autoUpgrade'])); } public function manual() { goto GTN0_; ux1xN: return view('module::Tecmz.View.admin.upgradeManual'); goto vjWNM; qL0JC: if (Request::isPost()) { goto ASLo_; y0f0n: file_put_contents($zmNU4, $iL09_); goto MWYDr; g1Bt5: FileUtil::safeCleanLocalTemp($zmNU4); goto Ts8RQ; MWYDr: $BEdDh = UpgradeUtil::upgradePackage($zmNU4, $Qob5Q); goto xLscN; NgETI: BizException::throwsIf('升级包格式错误', !$h6nbW->contains('package.zip')); goto IEEk1; FLh6V: BizException::throwsIfEmpty('请上传差量升级包', $e2S3r); goto g0dPO; g0dPO: $BEdDh = DataManager::preparePathForLocal($e2S3r); goto fF3qo; aX9Vs: $qHuhi = $BEdDh['data']['path']; goto nIKjG; ZIlb4: BizException::throwsIf('升级包格式错误', !$h6nbW->contains('config.json')); goto o6ddk; nIKjG: $Qob5Q = FileUtil::generateLocalTempPath('json'); goto fF9wO; wsNSW: return Response::generate(0, '操作完成', null, '[reload]'); goto CPV5m; fF3qo: BizException::throwsIfResponseError($BEdDh); goto aX9Vs; xLscN: BizException::throwsIfResponseError($BEdDh); goto K1zLU; fF9wO: $zmNU4 = FileUtil::generateLocalTempPath('zip'); goto qmygX; x2lgX: $bz1sB = InputPackage::buildFromInput(); goto fKLYU; IEEk1: $iL09_ = $h6nbW->getFileContent('package.zip'); goto y0f0n; fKLYU: $e2S3r = $bz1sB->getDataTempPath('upgradeZip'); goto FLh6V; ASLo_: try { $knCM0 = Artisan::call('migrate'); } catch (\Exception $knlzD) { $knCM0 = -1; } goto CfT0w; K1zLU: FileUtil::safeCleanLocalTemp($qHuhi); goto g1Bt5; CfT0w: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $knCM0); goto x2lgX; qmygX: $h6nbW = new Zipper(); goto UCpgZ; o6ddk: $YkBLF = $h6nbW->getFileContent('config.json'); goto v5AL8; UCpgZ: $h6nbW->make($qHuhi); goto ZIlb4; v5AL8: file_put_contents($Qob5Q, $YkBLF); goto NgETI; Ts8RQ: FileUtil::safeCleanLocalTemp($Qob5Q); goto wsNSW; CPV5m: } goto ux1xN; GTN0_: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto qL0JC; vjWNM: } }