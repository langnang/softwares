<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Question\Admin\Controller; use Illuminate\Routing\Controller; use ModStart\Admin\Concern\HasAdminQuickCRUD; use ModStart\Admin\Layout\AdminCRUDBuilder; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Form\Form; use ModStart\Grid\GridFilter; use ModStart\Repository\Filter\RepositoryFilter; use ModStart\Repository\Filter\ScopeFilter; use ModStart\Support\Concern\HasFields; use Module\Question\Util\QuestionCatUtil; use Module\Question\Util\QuestionTagUtil; class QuestionTagController extends Controller { use HasAdminQuickCRUD; public static $PermitMethodMap = array('all' => '*', 'map' => '*'); protected function crud(AdminCRUDBuilder $cv5kq) { goto s7ILq; ERtYa: foreach (QuestionCatUtil::all() as $REa1I) { $cv5kq->scopeFilter($REa1I['id'], $REa1I['title'], function (ScopeFilter $qM7YH) use($REa1I) { $qM7YH->where('catId', $REa1I['id']); }); } goto CIHDq; CIHDq: $cv5kq->scopeDefault(QuestionCatUtil::firstId())->repositoryFilter(function (RepositoryFilter $qM7YH) use($cv5kq) { $qM7YH->where('catId', $cv5kq->scopeValue()); $cv5kq->scopeAddedParam(array('catId' => $cv5kq->scopeValue())); })->gridFilter(function (GridFilter $qM7YH) { $qM7YH->eq('id', L('ID')); $qM7YH->like('title', L('Title')); })->hookChanged(function (Form $Yfg4L) { QuestionTagUtil::clearCache(); })->canShow(false)->title('题目标签'); goto zGx6Y; s7ILq: $cv5kq->init('question_tag')->field(function ($cv5kq) { $cv5kq->id('id', 'ID'); $cv5kq->select('groupId', '标签组')->optionModelTree('question_tag_group', 'id', 'pid', 'title', 'sort', array('catId' => $cv5kq->scopeValue()))->required()->ruleRegex('/^[0-9]*[1-9][0-9]*$/'); $cv5kq->text('title', '名称'); $cv5kq->image('cover', '图标'); $cv5kq->textarea('description', '说明'); $cv5kq->display('created_at', L('Created At'))->listable(false); $cv5kq->display('updated_at', L('Updated At'))->listable(false); }); goto ERtYa; zGx6Y: } public function all() { goto IjpPA; lOfop: return Response::jsonSuccessData(QuestionTagUtil::groupTags($oUKOQ)); goto I1Fx_; IjpPA: $bz1sB = InputPackage::buildFromInput(); goto bRJ4W; bRJ4W: $oUKOQ = $bz1sB->getInteger('catId', 0); goto lOfop; I1Fx_: } public function map() { goto tRWTN; TTMur: $SNkNZ = ModelUtil::valueMap('question_tag_group', 'id', 'title', $LJw3u); goto wYtaR; pkiEp: return Response::jsonSuccessData($GjTvT); goto PKmIh; S0mH0: $LJw3u = array('catId' => $oUKOQ); goto TTMur; sKcoy: $oUKOQ = $bz1sB->getInteger('catId', 0); goto S0mH0; cMsSM: if (empty($GjTvT)) { $GjTvT = new \stdClass(); } goto pkiEp; wYtaR: $GjTvT = array_build(ModelUtil::all('question_tag', $LJw3u), function ($nJFbs, $NIxlc) use($SNkNZ) { $AfXAM = $NIxlc['title']; if ($NIxlc['groupId']) { if (!empty($SNkNZ[$NIxlc['groupId']])) { $AfXAM = $SNkNZ[$NIxlc['groupId']] . '-' . $AfXAM; } } return array($AfXAM, $NIxlc['id']); }); goto cMsSM; tRWTN: $bz1sB = InputPackage::buildFromInput(); goto sKcoy; PKmIh: } }